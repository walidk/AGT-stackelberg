#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{fullpage}
\usepackage{mathrsfs}
\end_preamble
\use_default_options false
\begin_modules
theorems-ams-bytype
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "lyx_commands.lyx"

\end_inset


\end_layout

\begin_layout Title
Stackelberg Routing on Transportation Networks
\begin_inset Note Note
status open

\begin_layout Plain Layout
fill in LEMMA DEFINITION, ETC.....!!!!
\end_layout

\end_inset


\end_layout

\begin_layout Author
Walid Krichene 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 Jack Reilly
\end_layout

\begin_layout Abstract
We study inefficiencies of transportation networks due to the selfish behaviour
 and lack of coordination of drivers, by comparing social optima to Nash
 equilibria.
 Then we investigate possible strategies to reduce the inefficiency by studying
 the Stackelberg routing game: assuming we have control over a fraction
 of the flow on the network, what is a good way of routing that compliant
 flow so that the induced Nash equilibrium is closer to the social optimum
 than the initial Nash equilibrium?
\end_layout

\begin_layout Abstract
Stackelberg routing on parallel link networks has been studied extensively
 for the class of increasing latency functions, and it is shown in
\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2001stackelberg"

\end_inset

 that computing the optimal Stackelberg strategy is NP-hard in the number
 of links for increasing latency functions.
 
\end_layout

\begin_layout Abstract
We study Stackelberg routing for a new class of latency functions, that
 introduces a new model of congestion on a link.
 This class of latency functions arises in transportation networks for example.
 We show that in our setting, there are multiple Nash equilibria, and we
 characterize the best Nash equilibrium.
 Then we study the Stackelberg routing game and show that the optimal Stackelber
g strategy can be computed in polynomial time for this class of latency
 functions on parallel link networks.
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Stackelberg routing on parallel link networks has been studied extensively
 for the class of increasing latency functions, and it is known that computing
 the optimal Stackelberg strategy is NP-hard in the number of links.
 This led to considering polynomial time approximate strategies such as
 Largest Latency First and Scale (see 
\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2001stackelberg"

\end_inset

), and several bounds have been shown on the efficiency of these strategies.
 
\end_layout

\begin_layout Subsection
A new class of latency functions
\end_layout

\begin_layout Standard
The class of latency functions that have been studied so far satisfies two
 important properties: if 
\begin_inset Formula $l(\flow)$
\end_inset

 is the latency on a link, where 
\begin_inset Formula $\flow$
\end_inset

 is the flow, then 
\begin_inset Formula $l$
\end_inset

 is assumed to be non-decreasing, and 
\begin_inset Formula $\flow\longmapsto\flow l(\flow)$
\end_inset

 is assumed to be convex.
 However, this class of functions does not accurately model real congestion
 on transportation networks for example.
 Intuitively, a given flow 
\begin_inset Formula $x$
\end_inset

 on a road segment can correspond to
\end_layout

\begin_layout Itemize
either many drivers moving slowly (congestion), in which case the latency
 is large
\end_layout

\begin_layout Itemize
or few cars moving fast, in which case the latency is small
\end_layout

\begin_layout Standard
this means that the latency is not uniquely determined by the flow, and
 depends on how congested the link is.
 One simple way of modeling this is to have an additional binary argument
 
\begin_inset Formula $m$
\end_inset

 in the latency function 
\begin_inset Formula $l(\flow,\Mode)$
\end_inset

 to specify whether the link is congested 
\begin_inset Formula $(\Mode=1)$
\end_inset

 or is in free-flow 
\begin_inset Formula $(\Mode=0)$
\end_inset

.
 Then we consider a transportation setting where the flow and density on
 a link are related using a so-called fundamental diagram of traffic, and
 show that the resulting latency function can be expressed in the above
 form 
\begin_inset Formula $l(\flow,\Mode)$
\end_inset

.
 One interesting result is that the latency under congestion 
\begin_inset Formula $l(\flow,1)$
\end_inset

 is a 
\emph on
decreasing 
\emph default
function.
 Intuitively, as the link becomes more congested, drivers slow down, so
 their latency increases, and the amount of flow on the link decreases.
\end_layout

\begin_layout Subsection
Main results
\end_layout

\begin_layout Standard
This new class of latency functions leads to new interesting results:
\end_layout

\begin_layout Itemize
We show that for this class we do not have essential uniqueness of Nash
 equilibria.
 We also show that the set of all pure Nash equilibria can be computed in
 polynomial time, and we characterize in particular the best Nash equilibrium.
\end_layout

\begin_layout Itemize
We show that the optimal Stackelberg strategy can be computed in polynomial
 time.
 This results contrasts with the class of non-decreasing latency functions,
 for which computing the optimal Stackelberg strategy is NP-hard.
\end_layout

\begin_layout Section
The Model
\end_layout

\begin_layout Standard
In this section, we consider a transportation setting to motivate the choice
 of the class of latency functions.
\end_layout

\begin_layout Subsection
Traffic Network
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/nparlink.pdf
	scale 35

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Network, 
\begin_inset Formula $\Network$
\end_inset

, with 
\begin_inset Formula $\NLinks$
\end_inset

 parallel links and demand, 
\begin_inset Formula $\qdemand$
\end_inset

.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:nparlink"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We consider a network of 
\begin_inset Formula $\NLinks$
\end_inset

 parallel links indexed by 
\begin_inset Formula $\link\in\{1,\ldots,\NLinks\}$
\end_inset

, under constant positive flow demand, or rate 
\begin_inset Formula $\qdemand$
\end_inset

.
 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:nparlink"

\end_inset

 shows an example of the type of networks considered in this report.
 The flow 
\begin_inset Formula $\flow[\link]$
\end_inset

 on link 
\begin_inset Formula $\link$
\end_inset

 is a function of the density 
\begin_inset Formula $\mass[\link]$
\end_inset

, given by a triangular fundamental diagram that specifies the flow 
\begin_inset Formula $x_{n}$
\end_inset

 as a function of the density on the link 
\begin_inset Formula $\rho_{n}$
\end_inset

, with the following parameters:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\freeflow{\link}$
\end_inset

 the free-flow speed on the link 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\speedCong[\link]$
\end_inset

 the congestion wave speed 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\flowMax[\link]$
\end_inset

 the maximum capacity of the link 
\end_layout

\begin_layout Standard
In the free flow regime (when the density on the link is less than a critical
 density 
\begin_inset Formula $\masscrit[\link]$
\end_inset

 that is given by 
\begin_inset Formula $\speedFF[\link]\masscrit[\link]=\flowMax[\link]$
\end_inset

) the velocity is constant and the flow increases linearly in the density
 
\begin_inset Formula $\flow[\link]=\speedFF[\link]\mass[\link]$
\end_inset

.
 In the congested regime (
\begin_inset Formula $\masscrit[\link]<\mass[\link]\leq\mass[\link]^{\max}$
\end_inset

 the density on the link is greater than the critical density and less than
 a maximum density given by 
\begin_inset Formula $\flow[\link]^{\max}-\speedCong[\link](\mass[\link]^{\max}-\masscrit[\link])=0$
\end_inset

), the flow decreases linearly in the density 
\begin_inset Formula $\flow[\link]=\flow[\link]^{\max}-\speedCong[\link](\mass[\link]-\masscrit[\link])=-\speedCong[\link](\mass[\link]-\mass[\link]^{\max})$
\end_inset

 and the velocity is decreasing.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\flow[\link]=\begin{cases}
\speedFF[\link]\mass[\link] & \mass[\link]\leq\masscrit[\link]\\
\flow[\link]^{\max}-\speedCong[\link](\mass[\link]-\masscrit[\link])=-\speedCong[\link](\mass[\link]-\mass[\link]^{\max}) & \masscrit[\link]<\mass[\link]\leq\mass[\link]^{\max}
\end{cases}\label{eq:flow}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/fundamentaldiagram.png
	scale 35

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Fundamental diagram of traffic on link 
\begin_inset Formula $n$
\end_inset

.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:fundametal_diagram"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We denote by 
\begin_inset Formula $(\Network,\qdemand)$
\end_inset

 a network instance with 
\begin_inset Formula $\NLinks$
\end_inset

 links, rate 
\begin_inset Formula $r$
\end_inset

, and no compliant flow.
 We next define feasible flow assignments for network instance 
\begin_inset Formula $(\Network,\qdemand)$
\end_inset

.
\end_layout

\begin_layout Definition
A flow assignment 
\begin_inset Formula $\flow\in\mathbb{R}_{+}^{\NLinks}$
\end_inset

 is feasible for instance 
\begin_inset Formula $(\Network,\qdemand)$
\end_inset

 if 
\begin_inset Formula $\forall n$
\end_inset

 
\begin_inset Formula $\flow[\link]\leq\flow[\link]^{\max}$
\end_inset

 and 
\begin_inset Formula $\sum_{\link}\flow[\link]=\qdemand$
\end_inset

 
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $\flow$
\end_inset

 is a feasible flow assignment for 
\begin_inset Formula $(\Network,\qdemand)$
\end_inset

, we denote by 
\begin_inset Formula $Supp(\flow)$
\end_inset

 the support of 
\begin_inset Formula $\flow$
\end_inset

, that is the set of links that are used by the flow assignment 
\begin_inset Formula 
\[
Supp(\flow)=\{\link|\flow[\link]>0\}
\]

\end_inset


\end_layout

\begin_layout Subsection
Deriving the Latency Function for a Traffic Network
\end_layout

\begin_layout Standard
The velocity on link 
\begin_inset Formula $\link$
\end_inset

 is given by 
\begin_inset Formula $\flow[\link]/\mass[\link]$
\end_inset

, and the individual latency function is 
\begin_inset Formula 
\[
\latency[\link](\mass[\link],\flow[\link])=\frac{\Length[\link]\mass[\link]}{\flow[\link]}
\]

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\Length[\link]$
\end_inset

 is the length of link 
\begin_inset Formula $n$
\end_inset

.
\end_layout

\begin_layout Standard
Using the expression 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:flow"

\end_inset

 of flow as a function of the density, we can write
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
\latency[\link](\mass[\link])=\begin{cases}
\frac{\Length[\link]}{\speedFF[\link]} & \mass[\link]\leq\masscrit[\link]\\
\frac{\Length[\link]}{\speedCong[\link](\massmax[\link]/\mass[\link]-1)} & \masscrit[\link]<\mass[\link]\leq\massmax[\link]
\end{cases}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
The total latency incurred by all users on a link is 
\begin_inset Formula $\flow[\link]\latency[\link](\mass[\link])=\Length[\link]\mass[\link]$
\end_inset

, and the total latency incurred by all users on the network is 
\begin_inset Formula 
\begin{equation}
C(\mass)=\sum_{n}\Length[\link]\mass[\link]\label{eq:cost_function}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsubsection
Latency as a function of flow
\end_layout

\begin_layout Standard
We can express the latency as a function of flow by introducing an integer
 
\begin_inset Formula $\Mode[n]\in\{0,1\}$
\end_inset

 that specifies whether link 
\begin_inset Formula $n$
\end_inset

 is congested (
\begin_inset Formula $\Mode[n]=1$
\end_inset

 if 
\begin_inset Formula $n$
\end_inset

 is congested and 
\begin_inset Formula $\Mode[n]=0$
\end_inset

 if 
\begin_inset Formula $n$
\end_inset

 is in free-flow) 
\begin_inset Formula 
\[
\mass[\link](\flow[n],\Mode[n])=\begin{cases}
\frac{\flow[n]}{\freeflow n} & \Mode[n]=0\\
\frac{1}{\speedCong[n]}(\flowMax[n]-\flow[n])+\masscrit[\link] & \Mode[n]=1
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
this corresponds to inverting the fundamental diagram that gives the flow
 as a function of density.
 The latency is then given by 
\begin_inset Formula 
\begin{align*}
l_{n}(\flow[n],\Mode[n])=\frac{\lenCell[n]\mass[\link]}{\flow[n]}=\begin{cases}
\frac{\lenCell[n]}{v_{n}} & m_{n}=0\\
\lenCell[n]\left(\frac{\massmax[\link]}{x_{n}}-\frac{1}{w_{n}}\right) & m_{n}=1
\end{cases}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
For convenience of notation, we introduce constants 
\begin_inset Formula $\parA[n]$
\end_inset

, 
\begin_inset Formula $\parB[n]$
\end_inset

 and 
\begin_inset Formula $\parC[n]$
\end_inset

 such that
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
l_{n}(x_{n},m_{n})=\begin{cases}
\parA[n] & m_{n}=0\\
\parB[n]\left(\frac{1}{x_{n}}-\frac{1}{\parC[n]}\right)+\parA[n] & m_{n}=1
\end{cases}\label{eq:latency}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\parA[n]=\frac{\lenCell[n]}{\freeflow n}$
\end_inset

 is the free-flow latency, 
\begin_inset Formula $\parB[n]=\lenCell[n]\massmax[\link]$
\end_inset

, and 
\begin_inset Formula $\parC[n]=x_{n}^{\max}$
\end_inset

 is the maximum flow on the link.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/latency.png
	scale 35

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Latency function resulting from the fundamental diagram of traffic.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:traffic_latency"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Properties of the latency function
\end_layout

\begin_layout Standard
Note that the resulting latency function does not satisfy properties usually
 assumed in the Stackelberg routing literature.
 In particular, the latency is not an increasing function of flow: it is
 a constant function if the link is in free-flow, and a 
\emph on
decreasing
\emph default
 function when the link is congested.
 And for a given flow 
\begin_inset Formula $\flow[\link]$
\end_inset

, there are up to two possible latencies, one corresponding to the free-flow
 regime (few cars on the link moving fast) and one to the congested regime
 (many cars on the link moving slowly).
 These properties motivate the choice of the class of latency functions.
\end_layout

\begin_layout Subsection
A Class of Congestion Latency Functions
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sub:latency_class"

\end_inset


\end_layout

\begin_layout Standard
We consider the class of latency functions 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
l_{n}:[0,\flowMax[n]]\times\left\{ 0,1\right\}  & \longrightarrow\mathbb{{R}}_{+}\\
(\flow[n],\Mode[n]) & \longmapsto l_{n}(\flow[n],\Mode[n])
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\flow[n]$
\end_inset

 is the flow and 
\begin_inset Formula $\Mode[n]$
\end_inset

 is the congestion state.
 We assume that 
\begin_inset Formula $l_{n}$
\end_inset

 satisfies the following properties:
\end_layout

\begin_layout Itemize

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
the latency is constant in free-flow: 
\begin_inset Formula $l_{n}(x_{n},0)=\parA[n]$
\end_inset

 
\begin_inset Formula $\forall\flow[n]\in[0,\flowMax[n]]$
\end_inset


\end_layout

\begin_layout Itemize

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
the latency is decreasing in congestion: 
\begin_inset Formula $\flow[n]\longmapsto l_{n}(\flow[n],1)$
\end_inset

 is decreasing, can be inverted in polynomial time, and 
\begin_inset Formula $l_{n}(\flowMax[n],1)=\parA[n]$
\end_inset


\end_layout

\begin_layout Standard
Some of the known results on congestion networks do not apply to our setting:
 for instance, the network may have multiple Nash equilibria that have different
 costs.
 In the next section we specify this result and address the issue of having
 multiple Nash equilibria.
\end_layout

\begin_layout Section
Nash Equilibria
\end_layout

\begin_layout Standard
In this section we characterize pure non-atomic Nash equilibria of the network
 (also called Wardrop equilibria in the traffic literature), which we simply
 refer to as Nash equilibria.
 We first review the essential uniqueness of Nash equilibria in the case
 of increasing latency functions (in the sense that all Nash equilibria
 have the same cost).
 Then we show that our class of latency functions induce multiple Nash equilibri
a with different costs.
 We show that the set of Nash equilibria can be computed in polynomial time,
 and we characterize the best Nash equilibrium.
\end_layout

\begin_layout Subsection
Characterization of Nash Equilibria
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:ne"

\end_inset

An assignment 
\begin_inset Formula $(\flow,\Mode)\in\mathbb{R}_{+}^{\NLinks}\times\{0,1\}^{\NLinks}$
\end_inset

 for instance 
\begin_inset Formula $(\Network,\qdemand)$
\end_inset

 is at Nash equilibrium, if 
\begin_inset Formula $\forall n$
\end_inset

 
\begin_inset Formula 
\[
\flow[\link]>0\Rightarrow\forall k,\latency[\link](\flow[\link],\Mode[\link])\leq\latency[k](\flow[k],\Mode[k])
\]

\end_inset


\end_layout

\begin_layout Standard
In particular, every (non-atomic) user cannot improve her latency by switching
 to another link.
 As a consequence, all links that are in the support of 
\begin_inset Formula $\flow$
\end_inset

 have the same latency 
\begin_inset Formula $\latency[0]$
\end_inset

, and links that are not in the support have latency greater than 
\begin_inset Formula $\latency[0]$
\end_inset

.
 Note that to fully characterize the equilibrium one needs to specify the
 congestion state 
\begin_inset Formula $m$
\end_inset

, since the latency on a link depends on whether the link is congested.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:nash_eq"

\end_inset

 If 
\begin_inset Formula $(\flow,\Mode)$
\end_inset

 is an assignment for instance 
\begin_inset Formula $(\Network,\qdemand)$
\end_inset

 at Nash equilibrium, then 
\begin_inset Formula 
\begin{align*}
\flow[\link]>0 & \Rightarrow\latency[\link](\flow[\link],\Mode[\link])=\latency[0]\\
\flow[\link]=0 & \Rightarrow\latency[\link](0,0)\geq\latency[0]
\end{align*}

\end_inset

 and the total latency incurred by the network is 
\begin_inset Formula $\Latency(\flow,\Mode)=\qdemand\latency[0]$
\end_inset

.
 
\end_layout

\begin_layout Standard
Note that links that have zero flow are necessarily in free-flow 
\begin_inset Formula $\flow[\link]=0\Rightarrow\Mode[\link]=0$
\end_inset

.
\end_layout

\begin_layout Subsection
Nash Equilibria for Increasing Latency Functions
\end_layout

\begin_layout Standard
Assuming the latency functions 
\begin_inset Formula $\flow[\link]\rightarrow\latency[\link](\flow[\link])$
\end_inset

 are increasing, one can show that all Nash equilibria have the same cost.
 Let 
\begin_inset Formula $\flow$
\end_inset

 and 
\begin_inset Formula $\flow'$
\end_inset

 be two assignments for 
\begin_inset Formula $(\Network,\qdemand)$
\end_inset

 at Nash equilibrium.
 Let 
\begin_inset Formula $\latency[0]$
\end_inset

, respectively 
\begin_inset Formula $\latency[0]'$
\end_inset

 denote the common latency of all links in the support of 
\begin_inset Formula $\flow$
\end_inset

, respectively 
\begin_inset Formula $\flow'$
\end_inset

.
 The cost of the Nash equilibria are respectively 
\begin_inset Formula $\qdemand\latency[0]$
\end_inset

 and 
\begin_inset Formula $\qdemand\latency[0]'$
\end_inset

.
\end_layout

\begin_layout Standard
Assume 
\begin_inset Formula $\flow\neq\flow'$
\end_inset

.
 Then 
\begin_inset Formula $\exists\link_{1},\link_{2}$
\end_inset

 such that 
\begin_inset Formula 
\begin{align*}
\flow[\link_{1}]>\flow[\link_{1}]'\geq0 &  & \flow[\link_{2}]'>\flow[\link_{2}]\geq0
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Since 
\begin_inset Formula $\flow$
\end_inset

 is at Nash equilibrium and 
\begin_inset Formula $\link_{1}\in Supp(\flow)$
\end_inset

, 
\begin_inset Formula $\latency[\link_{1}](\flow[\link_{1}])\leq\latency[\link_{2}](\flow[\link_{2}])$
\end_inset

.
 And since 
\begin_inset Formula $\latency[\link_{2}]$
\end_inset

 is increasing 
\begin_inset Formula $\latency[\link_{2}](\flow[\link_{2}])\leq\latency[\link_{2}](\flow[\link_{2}]')$
\end_inset

.
 Thus 
\begin_inset Formula $\latency[0]=\latency[\link_{1}](\flow[\link_{1}])\leq\latency[\link_{2}](\flow[\link_{2}])\leq\latency[\link_{2}](\flow[\link_{2}]')=\latency[0]'$
\end_inset

.
 Exchanging the roles of 
\begin_inset Formula $\flow$
\end_inset

 and 
\begin_inset Formula $\flow'$
\end_inset

 we have 
\begin_inset Formula $\latency[0]'\leq\latency[0]$
\end_inset

.
 Therefore 
\begin_inset Formula $\latency[0]=\latency[0]'$
\end_inset

 and both equilibria have the same cost.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Traffic-Networks-Have"

\end_inset

Traffic Networks Have Multiple Nash Equilibria
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\NashEq{\Network}{\qdemand}$
\end_inset

 denote the set of Nash Equilibria for a network 
\begin_inset Formula $\Network$
\end_inset

 under flow demand 
\begin_inset Formula $\qdemand$
\end_inset

.
 To simplify our discussion, we assume without loss of generality, that
 the links are ordered by increasing free-flow latencies, and that free-flow
 latencies are different to avoid cases where the set of Nash equilibria
 is infinite
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\parA[1]<\parA[2]<\ldots<\parA[\NLinks]
\]

\end_inset


\end_layout

\begin_layout Subsubsection
Nash Equilibria and Congestion States
\end_layout

\begin_layout Standard
In Nash equilibrium, it is clear that a link will not be utilized until
 all links with a lower travel time are in congestion.
 We demonstrate this with the following lemma.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:filluplower"

\end_inset

For 
\begin_inset Formula $\left(\flow,\Mode\right)\in\NashEq{\Network}{\qdemand},j\in Supp\left(\flow\right)$
\end_inset


\begin_inset Formula $\implies\Mode[i]=1\forall i\in\left\{ 1,\ldots,j-1\right\} $
\end_inset


\end_layout

\begin_layout Proof
Take 
\begin_inset Formula $i\in\left\{ 1,\ldots,j-1\right\} $
\end_inset

.
 Then 
\begin_inset Formula $\Mode[i]=0\implies\latency[i]=\parA[i]<a_{j}\le\latency[j]$
\end_inset

, which violates 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:nash_eq"

\end_inset

.
 Therefore, 
\begin_inset Formula $m_{i}=1\forall i\in\left\{ 1,\ldots,j-1\right\} $
\end_inset

.
\end_layout

\begin_layout Proof
A corollary of 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:filluplower"

\end_inset

 says that there is at most one free-flow link in the support.
\end_layout

\begin_layout Corollary
\begin_inset CommandInset label
LatexCommand label
name "cor:atmost1ff"

\end_inset

 
\begin_inset Formula $\left(\flow,\Mode\right)\in\NashEq{\Network}{\qdemand}\implies\sum_{\link\in Supp\left(\flow\right)}\left(1-\Mode[\link]\right)\le1$
\end_inset


\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:uniquemode"

\end_inset

For a given mode 
\begin_inset Formula $\Mode$
\end_inset

, and a demand 
\begin_inset Formula $\qdemand$
\end_inset

, 
\begin_inset Formula $\exists$
\end_inset

 at most 1 
\begin_inset Formula $\flow:\left(\flow,\Mode\right)\in\NashEq{\Network}{\qdemand}$
\end_inset


\end_layout

\begin_layout Proof
In the case where 
\begin_inset Formula $\left|Supp\left(\flow\right)\right|<2$
\end_inset

, the result is trivial, so we assume 
\begin_inset Formula $\left|Supp\left(\flow\right)\right|\ge2$
\end_inset

.
 Assume 
\begin_inset Formula $\exists\flow,\flow',\flow\neq\flow'$
\end_inset

 such that 
\begin_inset Formula $\left(\flow,\Mode\right),\left(\flow',\Mode\right)\in\NashEq{\Network}{\qdemand}$
\end_inset

.
 Then 
\begin_inset Formula $\exists i,j\in Supp\left(\flow\right):\flow[i]<\flow[i]',\flow[j]>\flow[j]'$
\end_inset

.
 From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:atmost1ff"

\end_inset

, we know that 
\begin_inset Formula $\Mode[i]+\Mode[j]>0$
\end_inset

, and without loss of generality, we assume that 
\begin_inset Formula $\Mode[i]=1$
\end_inset

.
 With this assumption, we have that 
\begin_inset Formula $\latency[i]>\latency[i]'$
\end_inset

.
 For the 
\begin_inset Formula $j$
\end_inset

 case, we need to consider 
\begin_inset Formula $\Mode[j]=\left\{ 0,1\right\} $
\end_inset

.
 If 
\begin_inset Formula $\Mode[j]=0$
\end_inset

, then 
\begin_inset Formula $\latency[j]=\latency[j]'$
\end_inset

.
 If 
\begin_inset Formula $\Mode[j]=1$
\end_inset

, then 
\begin_inset Formula $ $
\end_inset


\begin_inset Formula $\latency[j]'>\latency[j]$
\end_inset

.
 Therefore, 
\begin_inset Formula $\latency[j]'\ge\latency[j]$
\end_inset

.
 From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:nash_eq"

\end_inset

, 
\begin_inset Formula $\latency[i]'=\latency[j]'$
\end_inset

, and
\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{equation}
\latency[i]>\latency[i]'=\latency[j]'\ge\latency[j]\label{eq:contradiction}
\end{equation}

\end_inset


\end_layout

\begin_layout Proof
yet from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:nash_eq"

\end_inset

, we also have 
\begin_inset Formula $\latency[i]=\latency[j]$
\end_inset

, which a contradiction of 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:contradiction"

\end_inset

.
\end_layout

\begin_layout Standard
What we have shown so far is that for a network 
\begin_inset Formula $\Network$
\end_inset

, there are at most 
\begin_inset Formula $\NLinks$
\end_inset

+1 Nash equilibria (
\begin_inset Formula $\NLinks$
\end_inset

 combinations such that one link in the support is in free flow and 1 such
 that all links in the support are congested).
 We now show that all of these Nash equilibria may be analytically computed
 for a network 
\begin_inset Formula $\Network$
\end_inset

 and demand 
\begin_inset Formula $\qdemand$
\end_inset

.
 We introduce a definition first.
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:hat"

\end_inset


\begin_inset Formula $\cffFlow ij\coloneqq\left\{ \flow\in\left[0,\flowMax[i]\right]:\latency[i]\left(x,1\right)=\parA[j]\right\} \forall i\in\left\{ 1,\ldots,\NLinks\right\} ,j\in\left\{ i+1,\ldots,\NLinks\right\} $
\end_inset


\end_layout

\begin_layout Standard
What 
\begin_inset Formula $\cffFlow ij$
\end_inset

represents is the flow on link 
\begin_inset Formula $i$
\end_inset

 while under congestion, such that the latency on link 
\begin_inset Formula $i$
\end_inset

 is equal to the free flow speed on link 
\begin_inset Formula $j$
\end_inset

, 
\begin_inset Formula $\parA[j]$
\end_inset

.
 In other words, 
\begin_inset Formula $\cffFlow ij$
\end_inset

 is the flow on link 
\begin_inset Formula $i$
\end_inset

 that enables link 
\begin_inset Formula $j$
\end_inset

 to begin to be utilized in a Nash equilibrium.
 For the triangular fundamental diagram, we can algebraically solve for
 
\begin_inset Formula $\cffFlow ij=\frac{\parB[i]\flowMax[i]}{\flowMax[i]\left(\parA[j]-\parA[i]\right)+\parB[i]}$
\end_inset

.
 Intuitively, we note that 
\begin_inset Formula $\cffFlow ij$
\end_inset

 approaches the maximum flow on link 
\begin_inset Formula $i$
\end_inset

 (
\begin_inset Formula $\flowMax[i]$
\end_inset

) as 
\begin_inset Formula $\parA[j]$
\end_inset

 approaches 
\begin_inset Formula $\parA[i]$
\end_inset

.
\end_layout

\begin_layout Definition
\begin_inset Formula $ $
\end_inset


\begin_inset CommandInset label
LatexCommand label
name "def:bar"

\end_inset


\begin_inset Formula $\bar{\Mode[i]}^{j}\coloneqq\begin{cases}
1 & i<j\\
0 & \text{otherwise}
\end{cases}$
\end_inset

.
 
\begin_inset Formula $\opneFlow[i]j{\qdemand}\coloneqq\begin{cases}
\cffFlow ij & i<j\\
r-\sum_{\link=1}^{j-1}\cffFlow{\link}j & i=j\\
0 & i>j
\end{cases}$
\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:xhat"

\end_inset


\begin_inset Formula $\opneFlow[j]jr\in\left[0,\flowMax[j]\right]\implies\left(\opneFlow jr,\cffMode j\right)\in\NashEq{\Network}{\qdemand}$
\end_inset

.
\end_layout

\begin_layout Proof
From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "def:bar"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand formatted
reference "def:hat"

\end_inset

, we have that 
\begin_inset Formula $\latency[i]=\parA[j]\forall i<j,$
\end_inset


\begin_inset Formula $\opneFlow[i]j{\qdemand}\in\left[0,\flowMax[i]\right]\forall i\in\left\{ 1,\ldots,\NLinks\right\} $
\end_inset

.
 By the assumption that 
\begin_inset Formula $\cffMode[j]j=0$
\end_inset

, we also have 
\begin_inset Formula $\latency[j]=\parA[j]$
\end_inset

.
 All links 
\begin_inset Formula $\link>j$
\end_inset

 are not in 
\begin_inset Formula $Supp\left(\opneFlow j{\qdemand}\right),$
\end_inset

 and have a latency 
\begin_inset Formula $>\parA[j]$
\end_inset

.
 Therefore, we have that 
\begin_inset Formula $\forall\link\in Supp\left(\opneFlow j{\qdemand}\right),\latency[\link]=\parA[j]<\parA[\link']\forall\link'\notin Supp\left(\opneFlow j{\qdemand}\right)$
\end_inset

 , which satisfies 
\begin_inset CommandInset ref
LatexCommand formatted
reference "def:ne"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Existence of a free-flow Nash Equilibrium
\end_layout

\begin_layout Standard
What we have arrived at in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:xhat"

\end_inset

 is an analytical representation of the Nash equilibria, given one link
 is in free flow.
 In Section 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:Optimal-Nash-Equilibria"

\end_inset

, we show that the best Nash equilibrium (best in a sense we define later)
 must be of the form shown in Definition 
\begin_inset CommandInset ref
LatexCommand formatted
reference "def:bar"

\end_inset

.
 Now, we have already shown in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:atmost1ff"

\end_inset

 that, for a demand 
\begin_inset Formula $\qdemand,$
\end_inset

 the only Nash equilibria that exist are those with either one or zero links
 in free flow.
 Therefore, in order to guarantee the statement proven in Section 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:Optimal-Nash-Equilibria"

\end_inset

, we must guarantee, that for all demands where a complete congested Nash
 equilibrium exists (zero links in free flow), there must also exist a Nash
 equilibrium with a single link in free flow.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lemma:slff"

\end_inset

For a demand, 
\begin_inset Formula $\qdemand$
\end_inset

: 
\begin_inset Formula $\exists\flow\text{ s.t. }\left(\flow,\cffMode{\NLinks+1}\right)\in\NashEq{\Network}{\qdemand}\implies\exists j\text{ s.t. }\left(\opneFlow j{\qdemand},\cffMode j\right)\in\NashEq{\Network}{\qdemand}$
\end_inset


\end_layout

\begin_layout Proof
By induction.
 We first note, if the Nash equilibrium is in complete congestion, then
 the latency on any link must be greater than 
\begin_inset Formula $\parA[\NLinks]$
\end_inset

, and the maximum demand that can have such an equilibrium is 
\begin_inset Formula $\sum_{\link=1}^{\NLinks-1}\cffFlow{\link}{\NLinks}+\flowMax[\NLinks]$
\end_inset

.
 Therefore, from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:filluplower"

\end_inset

, a sufficient condition to show is for all demands between 0 and 
\begin_inset Formula $\sum_{\link=1}^{\NLinks-1}\cffFlow{\link}{\NLinks}+\flowMax[\NLinks]$
\end_inset

, there exists a single-link free flow Nash equilibrium.
 Take a demand 
\begin_inset Formula $\qdemand$
\end_inset

.
 For the base step, it is obvious that if 
\begin_inset Formula $0\le\qdemand\le\flowMax[1]$
\end_inset

, there is a single-link free flow Nash equilibrium solution (all flow is
 in free flow on link 1).
 Next, assume that if 
\begin_inset Formula $0\le\qdemand\le\sum_{\link=1}^{j-1}\cffFlow{\link}j+\flowMax[j]$
\end_inset

, then there exists a single-link free flow Nash equilibrium.
 Now, assume 
\begin_inset Formula $0\le\qdemand\le\sum_{\link=1}^{j}\cffFlow{\link}{j+1}+\flowMax[j+1]$
\end_inset

.
 From the induction hypothesis, if 
\begin_inset Formula $0\le\qdemand\le\sum_{\link=1}^{j-1}\cffFlow{\link}j+\flowMax[j]$
\end_inset

, then there exists such a Nash equilibrium.
 For the other case, we assume
\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{equation}
\sum_{\link=1}^{j-1}\cffFlow{\link}j+\flowMax[j]\le\qdemand\le\sum_{\link=1}^{j}\cffFlow{\link}{j+1}+\flowMax[j+1]\label{eq:im1}
\end{equation}

\end_inset

From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:xhat"

\end_inset

, we need only to show that if 
\begin_inset Formula $\flowMax[j+1]\ge\qdemand-\sum_{\link=1}^{j}\cffFlow{\link}{j+1}\ge0$
\end_inset

, then 
\begin_inset Formula $\left(\opneFlow{j+1}{\qdemand},\cffMode{j+1}\right)\in\NashEq{\Network}{\qdemand}$
\end_inset

.
 First,
\begin_inset Formula $ $
\end_inset

 note for any link 
\begin_inset Formula $\link$
\end_inset

, 
\begin_inset Formula $\cffFlow{\link}i$
\end_inset

 is a decreasing function of 
\begin_inset Formula $i$
\end_inset

.
 Clearly, 
\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{equation}
\sum_{\link=1}^{j-2}\cffFlow{\link}j+\cffFlow{j-1}j\le\sum_{\link=1}^{j-2}\cffFlow{\link}{j-1}+\flowMax[j-1]\label{eq:im2}
\end{equation}

\end_inset

Then we have:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
\flowMax[j+1] & \ge\qdemand-\sum_{\link=1}^{j}\cffFlow{\link}{j+1} & \text{using \eqref{eq:im1}}\\
 & \ge\qdemand-\sum_{\link=1}^{j-1}\cffFlow{\link}j-\flowMax[j] & \text{using \eqref{eq:im2}}\\
 & \geq0 & \text{using \eqref{eq:im1}}
\end{align*}

\end_inset


\end_layout

\begin_layout Subsection
Best Nash Equilibria
\begin_inset CommandInset label
LatexCommand label
name "sub:Optimal-Nash-Equilibria"

\end_inset


\end_layout

\begin_layout Standard
In Section 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:Traffic-Networks-Have"

\end_inset

, we showed that a Nash equilibrium only exists if there is at most one
 link in free flow.
 We also showed that if a demand has a Nash equilibrium, then there is also
 a single-link free flow Nash equilibrium.
 From this non-uniqueness of Nash equilibria, one may wonder which of the
 equilibria would result in the best traffic conditions.
 This motivates defining a 
\begin_inset Quotes eld
\end_inset

best
\begin_inset Quotes erd
\end_inset

 Nash equilibrium.
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:bne"

\end_inset


\begin_inset Formula $\BestNashEq{\Network}{\qdemand}=\underset{\left(\flow,\Mode\right)\in\NashEq{\Network}{\qdemand}}{\arg\min}\left\{ \Latency\left(\flow,\Mode\right)\right\} $
\end_inset


\end_layout

\begin_layout Standard
For a demand 
\begin_inset Formula $\qdemand$
\end_inset

, the best Nash equilibrium, 
\begin_inset Formula $\BestNashEq{\Network}{\qdemand}$
\end_inset

 is the Nash equilibrium that has the least total latency.
 We now show some interesting properties of this best Nash equilibrium:
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\BestNashEq{\Network}{\qdemand}$
\end_inset

 is unique.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\BestNashEq{\Network}{\qdemand}$
\end_inset

 must have a link in free flow.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\BestNashEq{\Network}{\qdemand}$
\end_inset

 has the smallest support of all Nash equilibria for demand 
\begin_inset Formula $\qdemand$
\end_inset

.
\end_layout

\begin_layout Standard
Since the first two statements above follow immediately from the last, we
 will only show this last statement.
\end_layout

\begin_layout Theorem
\begin_inset CommandInset label
LatexCommand label
name "theorem:minsupport"

\end_inset

 For a given demand 
\begin_inset Formula $\qdemand,$
\end_inset

 
\begin_inset Formula $\BestNashEq{\Network}{\qdemand}=\underset{\left(\flow,\Mode\right)\in\NashEq{\Network}{\qdemand}}{\arg\min}\left\{ \max\left[Supp\left(\flow\right)\right]\right\} $
\end_inset

.
\end_layout

\begin_layout Proof
To demonstrate Theorem 
\begin_inset CommandInset ref
LatexCommand formatted
reference "theorem:minsupport"

\end_inset

, we use two intermediate results.
 The first result says that a fully congested Nash equilibrium will never
 be the best Nash equilibria (because there always exists a single-link
 free flow equilibrium, and it is better).
 The second result says that the better of two single-link free flow Nash
 equilibria will be the one with the smaller-index free flow link.
\end_layout

\begin_deeper
\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:conworseff"

\end_inset

For a given demand, 
\begin_inset Formula $\qdemand$
\end_inset

, if 
\begin_inset Formula $\exists\left(\lFlow,\cffMode{\NLinks+1}\right)\in\NashEq{\Network}{\qdemand}$
\end_inset

, then 
\begin_inset Formula $\exists\flow',j$
\end_inset

 such that 
\begin_inset Formula $\left(\flow',\cffMode j\right)\in\NashEq{\Network}{\qdemand}$
\end_inset

 and 
\begin_inset Formula $\Latency\left(\flow',\cffMode j\right)\le\Latency\left(\flow,\cffMode{\NLinks+1}\right)$
\end_inset

.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:smalleri"

\end_inset

For a given demand, 
\begin_inset Formula $\qdemand,$
\end_inset

and 
\begin_inset Formula $i<j$
\end_inset

 such that 
\begin_inset Formula $\left(\opneFlow{\qdemand}i,\cffMode i\right),\left(\opneFlow{\qdemand}j,\cffMode j\right)\in\NashEq{\Network}{\qdemand}$
\end_inset

: 
\begin_inset Formula $\Latency\left(\opneFlow{\qdemand}i,\cffMode i\right)<\Latency\left(\opneFlow{\qdemand}j,\cffMode j\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Proof
The proofs for the lemmas above are omitted for brevity.
\end_layout

\begin_layout Proof
From Corollary 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:atmost1ff"

\end_inset

, the complete set of candidate Nash equilibria with demand 
\begin_inset Formula $\qdemand,$
\end_inset

 are the flows with one link in free flow (
\begin_inset Formula $\left\{ \opneFlow{\qdemand}i:i\in\left\{ 1,\ldots,\NLinks\right\} \right\} $
\end_inset

) and the flow with all links in congestion (
\begin_inset Formula $\flow'$
\end_inset

 such that 
\begin_inset Formula $\left(\flow',\cffMode{\NLinks+1}\right)\in\NashEq{\Network}{\qdemand}$
\end_inset

).
 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:conworseff"

\end_inset

 says that 
\begin_inset Formula $\flow'$
\end_inset

 cannot be the unique minimum, and therefore a minimizing flow must exist
 in the set of flows with one link in free flow.
 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:smalleri"

\end_inset

 then says that the total latencies will decrease with decreasing free flow
 link index, and therefore the minimizing flow must be the Nash equilibrium
 flow that minimizes the index of the free flow link.
\end_layout

\begin_layout Standard
What Theorem 
\begin_inset CommandInset ref
LatexCommand formatted
reference "theorem:minsupport"

\end_inset

 gives us is a simple characterization of the best Nash equilibrium for
 any network 
\begin_inset Formula $\Network$
\end_inset

 of parallel links, and any demand 
\begin_inset Formula $\qdemand$
\end_inset

.
 While the results are interesting and useful in their own rights, they
 become even more powerful when describing Stackelberg equilibria in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Optimal-Stackelberg-strategies"

\end_inset

.
 Once the best Nash equilibrium can be found efficiently, there is a straight
 forward method for computing the Stackelberg equilibrium.
\end_layout

\begin_layout Subsection
Computational complexity of finding optimal Nash equilibria
\end_layout

\begin_layout Standard
In this section, we present a very simple algorithm for finding 
\begin_inset Formula $\BestNashEq{\Network}{\qdemand}$
\end_inset

, the best Nash equilibrium of a network 
\begin_inset Formula $\Network$
\end_inset

 under demand 
\begin_inset Formula $\qdemand,$
\end_inset

 and then show the running time to be in 
\begin_inset Formula $O\left(\NLinks^{2}\right)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "../algo.raw"
lstparams "mathescape"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Optimal Nash Equilibrium
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "alg:opNE"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We first note from Algorithm 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:opNE"

\end_inset

 that from the definition of 
\begin_inset Formula $\cffFlow ij$
\end_inset

 in Definition 
\begin_inset CommandInset ref
LatexCommand formatted
reference "def:hat"

\end_inset

, we can precompute 
\begin_inset Formula $\cffFlow ij\forall(i,j)\in\NLinks\times\NLinks$
\end_inset

 in 
\begin_inset Formula $O\left(\NLinks^{2}\right)$
\end_inset

.
 The subroutine 
\begin_inset Formula $ $
\end_inset


\begin_inset Formula $freeFlowConfig$
\end_inset

 runs in 
\begin_inset Formula $O\left(\NLinks\right)$
\end_inset

 time.
 Finally, for each loop of the 
\begin_inset Formula $optimalNE$
\end_inset

 outer routine (with 
\begin_inset Formula $\NLinks$
\end_inset

 iterations), the running time is a constant plus the running time of 
\begin_inset Formula $freeFlowConfig$
\end_inset

.
 Therefore, the overall running time of the algorithm is 
\begin_inset Formula $O(\NLinks^{2})+\NLinks O(\NLinks)=O(\NLinks^{2})$
\end_inset

.
\end_layout

\begin_layout Section
Social Optima
\end_layout

\begin_layout Standard
Consider an instance 
\begin_inset Formula $(N,\qdemand)$
\end_inset

 where the flow demand 
\begin_inset Formula $r$
\end_inset

 does not exceed the maximum capacity of the network 
\begin_inset Formula $r\leq\sum_{n}\flow[\link]^{\max}$
\end_inset

.
 Since the total cost function is 
\begin_inset Formula $C(\mass)=\sum_{n}\Length[\link]\mass[\link]$
\end_inset

, the social optimum of the network is a solution to the following optimization
 problem 
\begin_inset Formula $(SO)$
\end_inset

 
\begin_inset Formula 
\begin{align*}
\min_{\flow,\Mode} & \sum_{n}\flow[n]l_{n}(\flow[n],\Mode[n])\\
\text{subject to } & \sum_{n}\flow[\link]=r\\
 & \flow[n]\in[0,\flowMax[n]]
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
The objective function is non-convex.
 However, we show that the solutions to this optimization problem are necessaril
y in free-flow (
\begin_inset Formula $\Mode=0$
\end_inset

), thus the social optimum can be computed by solving an equivalent linear
 program.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lemma:socialOpt_is_ff"

\end_inset

 
\begin_inset Formula $(x^{*},\Mode^{*})$
\end_inset

 is optimal for 
\begin_inset Formula $(SO)$
\end_inset

 only if 
\begin_inset Formula $\Mode[i]{}^{*}=0\quad\forall i\in\left\{ 1,\ldots,\NLinks\right\} $
\end_inset

 
\end_layout

\begin_layout Proof
This follows immediately from the fact the latency on a link in congestion
 is always greater than the latency of the link in free-flow 
\begin_inset Formula $l_{n}(\flow[n],1)\geq l_{n}(\flow[n],0)$
\end_inset

 
\begin_inset Formula $\forall\flow[n]\in[0,\flowMax[n]]$
\end_inset

.
\end_layout

\begin_layout Subsection
Simple characterization of social optima
\end_layout

\begin_layout Standard
As a consequence of the previous Lemma, and using the fact that the latency
 is constant in free-flow 
\begin_inset Formula $l_{n}(\flow[n],0)=\parA[n]$
\end_inset

, the social optimum can be computed by solving the following equivalent
 linear program 
\begin_inset Formula 
\begin{align*}
\min_{\flow} & \sum_{n}\flow[n]\parA[n]\\
\text{subject to } & \sum_{n}\flow[\link]=r\\
 & \flow[n]\in[0,\flowMax[n]]
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Then assuming the links are ordered by increasing free-flow latency 
\begin_inset Formula $a_{1}\leq\dots\leq a_{N}$
\end_inset

 the social optimum is simply given by the assignment that saturates most
 efficient links first.
 Formally, if 
\begin_inset Formula $k_{0}=\max\{k|r>\sum_{n=1}^{k}x_{n}^{\max}\}$
\end_inset

 then the social optimal assignment 
\begin_inset Formula $x^{*}$
\end_inset

 is given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\flow^{*}=(\flowMax[1],\dots,\flowMax[k_{0}],\qdemand-\sum_{n=1}^{k_{0}}\flowMax[n],0,\dots,0)\label{eq:so}
\end{align}

\end_inset


\end_layout

\begin_layout Section
Price of Anarchy on Two-Link Network
\end_layout

\begin_layout Standard
Let us consider a network 
\begin_inset Formula $\Network$
\end_inset

 with 
\begin_inset Formula $\NLinks=2$
\end_inset

 links, and 
\begin_inset Formula $\parA[1]<\parA[2]$
\end_inset

.
 Also, for the sake of this demonstration, we assume 
\begin_inset Formula $\flowMax[2]+\cffFlow 12>\flowMax[1]$
\end_inset

.
 What we now wish to characterize is the differences in efficiency between
 social optimum and Nash equilibrium on this simple network.
 When describing Nash equilibria on this network, we will only consider
 the best Nash equilibrium, 
\begin_inset Formula $\BestNashEq{\Network}{\qdemand}=\left(\flow[NE],\Mode[NE]\right)$
\end_inset

, for a given demand 
\begin_inset Formula $\qdemand$
\end_inset

.
 Then define 
\begin_inset Formula $\left(x_{SO},\cffMode 1\right)$
\end_inset

 (where every link is in free flow) to be the social optimum for the same
 network and demand, as defined in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:so"

\end_inset

.
 Therefore, we will define the price of anarchy to be:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
POA(\Network,\qdemand)=\frac{\Latency\left(\flow[NE],\Mode[NE]\right)}{\Latency\left(\flow[SO],\cffMode 1\right)}
\]

\end_inset


\end_layout

\begin_layout Standard
From the analysis of 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:so"

\end_inset

 and Algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:opNE"

\end_inset

, we need only to consider two cases: the demand is above the capacity of
 link 1, or the demand is above the capacity of link 1.
 More precisely, we have the following cases:
\end_layout

\begin_layout Enumerate
\begin_inset Formula $0\le\qdemand\le\flowMax[1]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\qdemand>\flowMax[1]$
\end_inset


\end_layout

\begin_layout Standard
For the first case, using 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:so"

\end_inset

, we have 
\begin_inset Formula $k_{0}=0$
\end_inset

, and all the demand will be on link 1 in free flow.
 Similarly, Theorem
\begin_inset CommandInset ref
LatexCommand formatted
reference "theorem:minsupport"

\end_inset

 tells us that since link 1 can accomodate 
\begin_inset Formula $\qdemand$
\end_inset

 in free flow and the support cannot be smaller than a single link, then
 
\begin_inset Formula $\BestNashEq{\Network}{\qdemand}$
\end_inset

 is has all demand on link 1 in free flow, and is equivalent to the social
 optimum solution.
 This is depicted in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:ff"

\end_inset

.
 In this case, the Price of Anarchy is equal to 1, or there is no drop in
 efficiency due to selfish routing.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/freeflow.pdf
	height 3in

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:ff"

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Flow configuration when demand is under the capacity of the fastest link
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
If we now consider the case where 
\begin_inset Formula $\qdemand>\flowMax[1]$
\end_inset

, we know that all demand cannot be accomodated by link 1, and the results
 become more interesting.
 From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:so"

\end_inset

, the social optimum flow will assign as much flow to link 1 as it can fit
 (
\begin_inset Formula $\flowMax[1]$
\end_inset

), and the rest of the flow is assigned to link 2 (
\begin_inset Formula $\qdemand-\flowMax[1]$
\end_inset

), giving 
\begin_inset Formula $x_{SO}=\left\{ \flowMax[1],\qdemand-\flowMax[1]\right\} $
\end_inset

.
 The results differ for Nash equilibrium.
 Since Theorem 
\begin_inset CommandInset ref
LatexCommand formatted
reference "theorem:minsupport"

\end_inset

 tells us that 
\begin_inset Formula $\BestNashEq{\Network}{\qdemand[n]}$
\end_inset

 will occur with one link in free flow, then we must have link 1 in congestion
 and link 2 in free flow, or 
\begin_inset Formula $\Mode[NE]=\left\{ 1,0\right\} $
\end_inset

 (since 
\begin_inset Formula $\qdemand>\flowMax[1]$
\end_inset

, link 1 cannot be the link in free flow).
 From Algorithm 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:opNE"

\end_inset

, the corresponding flow, 
\begin_inset Formula $\flow[NE]$
\end_inset

, will be 
\begin_inset Formula $\left\{ \cffFlow 12,\qdemand-\cffFlow 12\right\} $
\end_inset

 (where we also tacitly assume that 
\begin_inset Formula $\flowMax[2]\ge\qdemand-\cffFlow 12$
\end_inset

).
 The comparison of the social optimum and Nash equilibrium conditions are
 depicted in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:sone"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/socialopplot.pdf
	width 3.5in
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Social optimum
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/neplot.pdf
	width 3.5in
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Nash equilibrium
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Differences in flow assignments between social optimum and Nash equilibrium
 when first link is beyond capacity
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:sone"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Computing the Price of Anarchy when 
\begin_inset Formula $\qdemand>\flowMax[1]$
\end_inset

 reveals where the inefficiencies lie in the Nash equilibrium.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
POA\left(\Network,\qdemand\right) & = & \frac{\parA[2]\cffFlow 12+\parA[2]\left(\qdemand-\cffFlow 12\right)}{\parA[1]\flowMax[1]+\parA[2]\left(\qdemand-\flowMax[1]\right)}\\
 & = & \frac{\parA[2]\qdemand}{\qdemand\parA[2]-\flowMax[1]\left(\parA[2]-\parA[1]\right)}\\
 & = & \frac{1}{1-\frac{\flowMax[1]}{\qdemand}\left(1-\frac{\parA[1]}{\parA[2]}\right)}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
First, we note that as 
\begin_inset Formula $\parA[2]\rightarrow\parA[1]$
\end_inset

, the Price of Anarchy goes to 1.
 Intuitively, what this says is that inefficiencies in Nash equilibrium
 can be directly attributed to the differences in free flow travel time
 between the links.
 As the differences in free flow speed increases, so will the Price of Anarchy.
 Additionally, as the demand increases, the Price of Anarchy will decrease.
 This occurs because the absolute difference in total latency between social
 optimum and Nash equilibrium is constant as demand increases.
 The discontinuity in total latency for Nash equilibrium occurs when demand
 exceeds the capacity of the first link (
\begin_inset Formula $\qdemand>\flowMax[1]$
\end_inset

).
\end_layout

\begin_layout Standard
What we can conclude from the Price of Anarchy analysis of the two link
 case is that selfish routing is most costly in the demand region where
 a free flow link is near capacity.
 If a controller were to anticipate a scenario where demand was slightly
 above this capacity, one could take extra measures to divert flow away
 from this link.
\end_layout

\begin_layout Section
Stackelberg routing
\end_layout

\begin_layout Standard
In order to reduce the inefficiency of the network, we assume that a fraction
 of the flow is centrally controlled, and we investigate possible strategies
 for improving the equilibria of the network.
\end_layout

\begin_layout Subsection
Stackelberg strategy
\end_layout

\begin_layout Standard
We consider the following problem: given a network under constant flow demand
 
\begin_inset Formula $r$
\end_inset

, assume a coordinator (a central authority) has control over a fraction
 
\begin_inset Formula $\beta$
\end_inset

 of the flow: the corresponding users are compliant and willing to change
 their routes according to the instructions they are given.
 The coordinator (who plays the role of the leader in the Stackelberg game)
 assigns the compliant flow 
\begin_inset Formula $\beta r$
\end_inset

 according to a Stackelberg strategy 
\begin_inset Formula $s$
\end_inset

 that is a feasible flow assignment for instance 
\begin_inset Formula $(\Network,\beta\qdemand)$
\end_inset

, i.e.
 
\begin_inset Formula $s$
\end_inset

 satisfies 
\begin_inset Formula 
\begin{align*}
\cFlow[\link]\leq\flow[\link]^{\max}\forall n &  & \sum_{n}\cFlow[\link]=\beta r
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
We assume that the non-compliant users (who play the role of followers in
 the Stackelberg game), with corresponding flow 
\begin_inset Formula $(1-\beta)r$
\end_inset

, choose their routes selfishly after the Stackelberg assignment 
\begin_inset Formula $s$
\end_inset

 of compliant users is revealed.
 This induces an assignment 
\begin_inset Formula $(\ncFlow(\cFlow),m(\cFlow))$
\end_inset

 of the selfish flow at Nash equilibrium, and we assume that the assignment
 
\begin_inset Formula $s$
\end_inset

 of compliant users 
\emph on
is not affected
\emph default
 after introducing the non-compliant flow on the network.
 Since 
\begin_inset Formula $s$
\end_inset

 may induce multiple Nash equilibria, we define the assignment 
\begin_inset Formula $(t(s),m(s))$
\end_inset

 to be the best such equilibrium.
\end_layout

\begin_layout Standard
To characterize the final Nash equilibrium, which we refer to as the 
\emph on
induced equilibrium
\emph default
 by strategy 
\begin_inset Formula $s$
\end_inset

, we note that the flow on link 
\begin_inset Formula $n$
\end_inset

 is simply 
\begin_inset Formula $\cFlow[\link]+\ncFlow[\link](\cFlow)$
\end_inset

, and we have 
\begin_inset Formula $\forall n$
\end_inset

 
\begin_inset Formula 
\[
\ncFlow[\link](\cFlow)>0\Rightarrow\forall k,\latency[\link]\left(\cFlow[\link]+\ncFlow[\link](\cFlow),\Mode[\link](\cFlow)\right)\leq\latency[k]\left(\cFlow[k]+\ncFlow[k](\cFlow),\Mode[k](\cFlow)\right)
\]

\end_inset

 and by 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:nash_eq"

\end_inset

, all links that are used by selfish users have a common latency 
\begin_inset Formula $\latency[0]$
\end_inset

 in the induced equilibrium, and links that are not used by the selfish
 flow have latency greater than 
\begin_inset Formula $\latency[0]$
\end_inset

.
\end_layout

\begin_layout Standard
This can be summarized in the following definition of a Stackelberg strategy
 for instance 
\begin_inset Formula $(\Network,r,\beta)$
\end_inset

 of network 
\begin_inset Formula $\Network$
\end_inset

 under flow demand 
\begin_inset Formula $r$
\end_inset

, and fraction of compliance 
\begin_inset Formula $\beta$
\end_inset


\end_layout

\begin_layout Definition
A Stackelberg strategy for instance 
\begin_inset Formula $(\Network,r,\beta)$
\end_inset

 is an assignment 
\begin_inset Formula $s$
\end_inset

 of the compliant flow 
\begin_inset Formula $\beta r$
\end_inset

 that is feasible for the instance 
\begin_inset Formula $(\Network,\beta\qdemand)$
\end_inset

, and which induces best Nash assignment 
\begin_inset Formula $(\ncFlow(\cFlow),m(\cFlow))$
\end_inset

 of the non-compliant flow such that 
\begin_inset Formula $s+t(s)$
\end_inset

 is feasible for instance 
\begin_inset Formula $(\Network,r)$
\end_inset

 and 
\begin_inset Formula 
\begin{align*}
\forall n\in Supp\left(\ncFlow(\cFlow)\right),\, & \latency[\link]\left(\cFlow[\link]+\ncFlow[\link](\cFlow),\Mode[\link](\cFlow)\right)=\latency[0]\\
\forall n\notin Supp\left(\ncFlow(\cFlow)\right),\, & \latency[\link]\left(\cFlow[\link],\Mode[\link](\cFlow)\right)\geq\latency[0]
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
We will denote by 
\begin_inset Formula $S\subset\mathbb{{R}}^{\NLinks}$
\end_inset

 the set of feasible Stackelberg strategies.
\end_layout

\begin_layout Subsection
Example of a feasible assignment that is not a Stackelberg strategy
\end_layout

\begin_layout Standard
Note that a feasible flow assignment 
\begin_inset Formula $s$
\end_inset

 of compliant flow may fail to induce a pure Nash assignment 
\begin_inset Formula $t$
\end_inset

 that does not affect the initial assignment 
\begin_inset Formula $s$
\end_inset

.
\end_layout

\begin_layout Standard
To see this, consider the following 2-link network where links have the
 same length 
\begin_inset Formula $\Length[1]=\Length[2]=1$
\end_inset

, link 1 has greater free-flow speed and capacity than link 
\begin_inset Formula $2$
\end_inset

 
\begin_inset Formula $v_{1}>v_{2}$
\end_inset

, 
\begin_inset Formula $\flow[1]^{\max}>\flow[2]^{\max}$
\end_inset

, and both links have same congestion wave speed 
\begin_inset Formula $w_{1}=w_{2}$
\end_inset

.
 Now assume that the network is subject to flow demand 
\begin_inset Formula $r=\flow[1]^{\max}+\epsilon$
\end_inset

 and most of the flow is compliant 
\begin_inset Formula $\beta r=\flow[1]^{\max}$
\end_inset

.
 Consider the following Stackelberg strategy: 
\begin_inset Formula $s=(\flow[1]^{\max},0)$
\end_inset

.
\end_layout

\begin_layout Standard
Assuming that the assignment of compliant users is not affected by introducing
 the non-compliant flow, we have for any assignment 
\begin_inset Formula $t$
\end_inset

 of non-compliant flow, 
\begin_inset Formula $t_{1}=0$
\end_inset

 and 
\begin_inset Formula $t_{2}>0$
\end_inset

.
 Therefore 
\begin_inset Formula $t$
\end_inset

 is not a Nash assignment since 
\begin_inset Formula $Supp(t)=\{2\}$
\end_inset

 and 
\begin_inset Formula $\latency[2](s_{2}+t_{2},\Mode[2])>\latency[1](s_{1},0)$
\end_inset

 (non compliant users are forced to use less efficient link 2).
\end_layout

\begin_layout Subsection
Characterization of the induced Nash Equilibrium
\end_layout

\begin_layout Standard
We next show that the induced Nash equilibrium has one link in free-flow:
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lemma:inducedNCeq"

\end_inset

Let 
\begin_inset Formula $s$
\end_inset

 be a Stackelberg strategy for instance 
\begin_inset Formula $(\Network,r,\beta)$
\end_inset

, and 
\begin_inset Formula $(t(s),m(s))$
\end_inset

 its best induced Nash equilibrium.
 Then 
\begin_inset Formula $\Mode[\max Supp(t(s))]=0$
\end_inset

.
\end_layout

\begin_layout Standard
In other words, the last link in the support of 
\begin_inset Formula $t(s)$
\end_inset

 is in free-flow.
\end_layout

\begin_layout Proof
Note that 
\begin_inset Formula $t(s)$
\end_inset

 is an assignment at Nash for instance 
\begin_inset Formula $(N,\beta r)$
\end_inset

 and latencies
\begin_inset Formula 
\begin{align*}
\tilde{{l}}_{n}:[0,\flowMax[n]-s_{n}]\times\left\{ 0,1\right\}  & \longrightarrow\mathbb{{R}}_{+}\\
(\flow[n],\Mode[n]) & \longmapsto l_{n}(s_{n}+\flow[n],\Mode[n])
\end{align*}

\end_inset

by 
\begin_inset CommandInset ref
LatexCommand formatted
reference "theorem:minsupport"

\end_inset

, we immediately have 
\begin_inset Formula $\Mode[\max Supp(t(s))]=0$
\end_inset

.
\end_layout

\begin_layout Subsection
Optimal Stackelberg strategies
\begin_inset CommandInset label
LatexCommand label
name "sec:Optimal-Stackelberg-strategies"

\end_inset


\end_layout

\begin_layout Standard
In this section we solve for optimal Stackelberg strategies, i.e.
 Stackelberg strategies that induce Nash equilibria of optimal cost.
 This is described by the following optimization problem 
\begin_inset Formula 
\begin{align*}
\min_{s\in S}C\left(s+\ncFlow(\cFlow),m(\cFlow)\right)
\end{align*}

\end_inset

 where 
\begin_inset Formula $s$
\end_inset

 is a Stackelberg strategy and 
\begin_inset Formula $(\ncFlow(\cFlow),m(\cFlow))$
\end_inset

 is the non-compliant flow assignment at the equilibrium induced by 
\begin_inset Formula $s$
\end_inset

.
\end_layout

\begin_layout Standard
We define an optimal Stackelberg strategy 
\begin_inset Formula $s^{*}$
\end_inset

 to be a solution to the optimization problem 
\begin_inset Formula 
\begin{align*}
s^{*}=\arg\min_{s\in S}C\left(s+\ncFlow(\cFlow),m(\cFlow)\right)
\end{align*}

\end_inset

 and a Stackelberg equilibrium to be the Nash equilibrium 
\begin_inset Formula $(\ncFlow(s^{*}),m(s^{*}))$
\end_inset

 induced by optimal strategy 
\begin_inset Formula $s*$
\end_inset

.
\end_layout

\begin_layout Section
Computing the optimal Stackelberg strategy
\end_layout

\begin_layout Standard
In this section we show the following result: the optimal Stackelberg strategy
 can be computed in polynomial time for parallel networks with 
\begin_inset Formula $N$
\end_inset

 links for the class of congestion functions defined in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:latency_class"

\end_inset

.
 This result contrasts with the class of increasing latency functions where
 the optimal Stackelberg strategy is shown to be NP-hard to compute, see
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2001stackelberg"

\end_inset

.
\end_layout

\begin_layout Standard
Roughly speaking, the optimal Stackelberg strategy in our case corresponds
 to assigning the compliant flow in a socially optimal way 
\emph on
after
\emph default
 assigning the non-compliant flow in a selfish way.
 Intuitively, the optimal induced Nash equilibrium 
\begin_inset Formula $t(s)$
\end_inset

 of any Stackelberg strategy 
\begin_inset Formula $s$
\end_inset

 will be more congested than the best Nash equilibrium 
\begin_inset Formula $(\bar{t},\bar{\Mode})$
\end_inset

 of instance 
\begin_inset Formula $(\NLinks,(1-\beta r))$
\end_inset

 (when the non-compliant flow is is the only flow on the network).
 So if we can find a strategy 
\begin_inset Formula $\bar{s}$
\end_inset

 that induces equilibrium 
\begin_inset Formula $(\bar{t},\bar{\Mode})$
\end_inset

 and that has minimal cost, then one expects this strategy to be optimal.
 Next we detail this idea by defining a candidate Stackelberg strategy 
\begin_inset Formula $\bar{s}$
\end_inset

 that will later be shown to be optimal.
\end_layout

\begin_layout Standard
We first introduce a definition that will be useful in proving the main
 result.
 Consider a network under feasible flow assignment 
\begin_inset Formula $(\flow,\Mode)$
\end_inset

.
 A link 
\begin_inset Formula $n$
\end_inset

 is said to be 
\emph on
exactly
\emph default
 
\begin_inset Formula $i$
\end_inset


\emph on
-congested
\emph default
 if it is congested 
\begin_inset Formula $(\Mode[n]=1)$
\end_inset

 and its latency is exactly 
\begin_inset Formula $\parA[i]$
\end_inset

.
 It is said to be 
\emph on
at least 
\emph default

\begin_inset Formula $i$
\end_inset


\emph on
-congested
\emph default
 (
\begin_inset Formula $i\geq n+1$
\end_inset

) if 
\begin_inset Formula $n$
\end_inset

 is congested and its latency is at least 
\begin_inset Formula $\parA[i]$
\end_inset

.
\end_layout

\begin_layout Definition
Link 
\begin_inset Formula $n$
\end_inset

 is exactly 
\begin_inset Formula $i$
\end_inset

-congested (
\begin_inset Formula $i\geq n+1$
\end_inset

) under assignment 
\begin_inset Formula $(\flow,\Mode)$
\end_inset

 if 
\begin_inset Formula 
\begin{align*}
\Mode[n] & =1\\
l_{n}(\flow[n],\Mode[n]) & =\parA[i]
\end{align*}

\end_inset

 which is equivalent to 
\begin_inset Formula 
\begin{align*}
\Mode[n] & =1\\
\flow[n] & =\cffFlow ni
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Note that in a network under best Nash assignment 
\begin_inset Formula $(t,\Mode)$
\end_inset

, if 
\begin_inset Formula $i=\max Supp(t)$
\end_inset

, then all links 
\begin_inset Formula $n\in\{1,\dots,i-1\}$
\end_inset

 are exactly 
\begin_inset Formula $i$
\end_inset

-congested.
\end_layout

\begin_layout Definition
Link 
\begin_inset Formula $n$
\end_inset

 is at least 
\begin_inset Formula $i$
\end_inset

-congested (
\begin_inset Formula $i\geq n+1$
\end_inset

) under assignment 
\begin_inset Formula $(\flow,\Mode)$
\end_inset

 if 
\begin_inset Formula 
\begin{align*}
\Mode[n] & =1\\
l_{n}(\flow[n],\Mode[n]) & \geq\parA[i]
\end{align*}

\end_inset

 which is equivalent to 
\begin_inset Formula 
\begin{align*}
\Mode[n] & =1\\
\flow[n] & \leq\cffFlow ni
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Note that if 
\begin_inset Formula $j\geq i\geq n+1$
\end_inset

, then if link 
\begin_inset Formula $n$
\end_inset

 is at least 
\begin_inset Formula $j$
\end_inset

-congested under 
\begin_inset Formula $(x,m)$
\end_inset

, then it is also at least 
\begin_inset Formula $i$
\end_inset

-congested under 
\begin_inset Formula $(x,\Mode)$
\end_inset

.
\end_layout

\begin_layout Subsection
A candidate Stackelberg strategy: Non-Compliant First
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $(\bar{t},\bar{m})$
\end_inset

 denote the best Nash equilibrium for the instance 
\begin_inset Formula $(\NLinks,(1-\beta)\qdemand)$
\end_inset

.
 Let 
\begin_inset Formula $k=\max Supp(\bar{t})$
\end_inset

.
 We have
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\bar{m}=(1,\dots,1,\stackrel{k}{0},\dots,0)
\]

\end_inset

 and 
\begin_inset Formula 
\[
\bar{t}=\left(\cffFlow 1k,\dots,\cffFlow{k-1}k,(1-\beta)\qdemand-\sum_{n=1}^{k-1}\cffFlow nk,0,\dots,0\right)
\]

\end_inset


\end_layout

\begin_layout Standard
i.e.
 links 
\begin_inset Formula $\{1,\dots,k-1\}$
\end_inset

 are 
\begin_inset Formula $k$
\end_inset

-congested, and link 
\begin_inset Formula $k$
\end_inset

 is in free flow.
 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:optimal_stackelberg_nc"

\end_inset

 shows the assignment at Nash equilibrium 
\begin_inset Formula $(\bar{t},\bar{\Mode})$
\end_inset

 on a sample network, where the latency in congestion 
\begin_inset Formula $l_{n}(x_{n},1)$
\end_inset

 is taken to be affine for simplicity.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/optimal_stackelberg2.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Best Nash equilibrium 
\begin_inset Formula $(\bar{t},\bar{\Mode})$
\end_inset

 of non-compliant flow 
\begin_inset Formula $(1-\beta)r$
\end_inset


\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:optimal_stackelberg_nc"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Now define Stackelberg strategy 
\begin_inset Formula $\bar{s}$
\end_inset

 as the optimal assignment of compliant flow 
\begin_inset Formula $\beta\qdemand$
\end_inset

 that induces equilibrium 
\begin_inset Formula $(\bar{t},\bar{m})$
\end_inset

.
 It is easy to see that 
\begin_inset Formula $\bar{s}$
\end_inset

 is simply given by assigning the compliant flow to remaining links 
\begin_inset Formula $\{k,k+1,\dots,\NLinks\}$
\end_inset

 successively, each up to maximum capacity.
 The strategy 
\begin_inset Formula $\bar{s}$
\end_inset

 will assign 
\begin_inset Formula $\flowMax[k]-t_{k}$
\end_inset

 on link 
\begin_inset Formula $k$
\end_inset

, then 
\begin_inset Formula $\flowMax[k+1]$
\end_inset

 on link 
\begin_inset Formula $k+1$
\end_inset

, 
\begin_inset Formula $\flowMax[k+2]$
\end_inset

 on link 
\begin_inset Formula $k+2$
\end_inset

 and so on.
 Let 
\begin_inset Formula $l=\min\{n|\beta\qdemand-(\sum_{n=k}^{l-1}\flowMax[n]-t_{k})\geq0\}$
\end_inset

 be the least efficient link used by the Stackelberg assignment.
 Then 
\begin_inset Formula $\bar{s}$
\end_inset

 is given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\bar{s}=\left(0,\dots,\stackrel{k-1}{0},\flowMax[k]-\bar{t}_{k},\flowMax[k+1],\dots,\flowMax[l-1],\beta\qdemand-(\sum_{n=k}^{l-1}\flowMax[n]-t_{k}),\stackrel{l+1}{0},\dots,0\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Equivalently, the total assignment 
\begin_inset Formula $\bar{x}=\bar{s}+\bar{t}$
\end_inset

 is given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\bar{x}=\left(\cffFlow 1k,\dots,\cffFlow{k-1}k,\flowMax[k],\flowMax[k+1],\dots,\flowMax[l-1],\qdemand-\sum_{n=1}^{k-1}\cffFlow nk-\sum_{n=k}^{l-1}\flowMax[n],\stackrel{l+1}{0},\dots,0\right)
\]

\end_inset


\end_layout

\begin_layout Standard
and the corresponding latencies are
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\bar{l}=\left(\parA[k],\dots,\parA[k],\parA[k+1],\dots,\parA[l],\stackrel{l+1}{0},\dots,0\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/optimal_stackelberg1.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Equilibrium induced by candidate Stackelberg strategy 
\begin_inset Formula $\bar{s}$
\end_inset

 
\begin_inset Formula $ $
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:optimal_stackelberg_total"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:optimal_stackelberg_total"

\end_inset

 shows the total flow 
\begin_inset Formula $\bar{x}_{n}=\bar{s}_{n}+\bar{t}_{n}$
\end_inset

 on each link.
 Links 
\begin_inset Formula $\left\{ 1,\dots,k-1\right\} $
\end_inset

 are exactly 
\begin_inset Formula $k$
\end_inset

-congested, links 
\begin_inset Formula $\left\{ k,\dots,l-1\right\} $
\end_inset

 are in free-flow and at maximum capacity, and the remaining flow goes on
 link 
\begin_inset Formula $l$
\end_inset

.
\end_layout

\begin_layout Standard
Next we show that strategy 
\begin_inset Formula $\bar{s}$
\end_inset

 is indeed the optimal Stackelberg strategy.
\end_layout

\begin_layout Subsection
The Non-Compliant First strategy is optimal
\end_layout

\begin_layout Theorem
\begin_inset Formula $\bar{s}$
\end_inset

 is an optimal Stackelberg strategy.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $s\in S$
\end_inset

 be a Stackelberg strategy for instance 
\begin_inset Formula $(N,r,\beta)$
\end_inset

 and 
\begin_inset Formula $(t,\Mode)$
\end_inset

 be the best induced Nash equilibrium for the non-compliant flow.
 We will show that 
\begin_inset Formula $C(x,\Mode)\geq C(\bar{x},\bar{\Mode})$
\end_inset

, where 
\begin_inset Formula $x=s+t$
\end_inset

 and 
\begin_inset Formula $\bar{x}=\bar{s}+\bar{t}$
\end_inset

.
\end_layout

\begin_layout Standard
\noindent
The proof proceeds as follows: we first show that links 
\begin_inset Formula $\{1,\dots,l-1\}$
\end_inset

 are more congested under assignment 
\begin_inset Formula $(x,m)$
\end_inset

 than under 
\begin_inset Formula $(\bar{x},\bar{m})$
\end_inset

, in the following sense: these links have worse latency 
\begin_inset Formula 
\[
\latency[n](x_{n},m_{n})\geq\latency[n](\bar{x}_{n},\bar{m}_{n})
\]

\end_inset

 and hold less flow 
\begin_inset Formula 
\[
x_{n}\leq\bar{x}_{n}
\]

\end_inset

 Then we conclude by lower bounding the cost 
\begin_inset Formula $C(x,m)$
\end_inset

.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $k'=\max Supp(t)$
\end_inset

 be the link with largest free-flow latency, in the support of the non-compliant
 flow.
 By Lemma 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lemma:inducedNCeq"

\end_inset

, we have 
\begin_inset Formula $\Mode[k']=0$
\end_inset

, i.e.
 link 
\begin_inset Formula $k'$
\end_inset

 is in free-flow under assignment 
\begin_inset Formula $(x,\Mode)$
\end_inset

.
 We start by showing that 
\begin_inset Formula $k'\geq k$
\end_inset

 where 
\begin_inset Formula $k=\max Supp(\bar{t})$
\end_inset


\end_layout

\begin_layout Lemma
\begin_inset Formula $k'\geq k$
\end_inset

 
\end_layout

\begin_layout Proof
Intuitively, since 
\begin_inset Formula $\bar{t}$
\end_inset

 is the best Nash equilibrium of the non-compliant flow when they are not
 sharing the network with any other flow, the assignment 
\begin_inset Formula $(\bar{t},\bar{\Mode})$
\end_inset

 will use more efficient links than any Nash assignment 
\begin_inset Formula $(t,\Mode)$
\end_inset

 of non-compliant flow when they are sharing the network with additional
 flow 
\begin_inset Formula $s$
\end_inset

.
 The proof makes this argument more precise.
\end_layout

\begin_layout Proof
First note that 
\begin_inset Formula $s+t$
\end_inset

 restricted to 
\begin_inset Formula $Supp(t)$
\end_inset

 is an assignment at Nash equilibrium, and it is by definition the best
 such Nash assignment.
 Then since link 
\begin_inset Formula $k'$
\end_inset

 is in free-flow and 
\begin_inset Formula $k'\in Supp(t)$
\end_inset

, the cost of this Nash equilibrium is simply 
\begin_inset Formula $r'a_{k'}$
\end_inset

 where 
\begin_inset Formula $r'=\sum_{n\in Supp(t)}s_{n}+t_{n}$
\end_inset

 is the total flow restricted to 
\begin_inset Formula $Supp(t)$
\end_inset

.
\end_layout

\begin_layout Proof
We have 
\begin_inset Formula $\bar{t}$
\end_inset

 is the best Nash equilibrium of flow 
\begin_inset Formula $(1-\beta)\qdemand$
\end_inset

 with cost 
\begin_inset Formula $(1-\beta)\qdemand a_{k}$
\end_inset

, and 
\begin_inset Formula $(1-\beta)r=\sum_{n\in Supp(t)}t_{n}\leq\sum_{n\in Supp(t)}s_{n}+t_{n}=r'$
\end_inset

.
 Then since the average cost of the best Nash equilibrium is increasing
 in the total flow, we have 
\begin_inset Formula 
\[
\frac{r'a_{k'}}{r'}\geq\frac{(1-\beta)ra_{k}}{(1-\beta)r}
\]

\end_inset

Therefore we must have 
\begin_inset Formula $a_{k'}\geq a_{k}$
\end_inset

, i.e.
 
\begin_inset Formula $k'\geq k$
\end_inset

.
\end_layout

\begin_layout Proof
Using the lemma, we can now show that links 
\begin_inset Formula $\{1,\dots,l-1\}$
\end_inset

 are more congested under assignment 
\begin_inset Formula $(x,m)$
\end_inset

 than candidate assignment 
\begin_inset Formula $(\bar{x},\bar{m})$
\end_inset

.
\end_layout

\begin_layout Proof
We have 
\begin_inset Formula $\forall n\in\{1,\dots,k'-1\}$
\end_inset

, 
\begin_inset Formula $n$
\end_inset

 is at least 
\begin_inset Formula $k'$
\end_inset

-congested under assignment 
\begin_inset Formula $(x,m)$
\end_inset

, and 
\begin_inset Formula $\forall n\in\{1,\dots,k-1\}$
\end_inset

, 
\begin_inset Formula $n$
\end_inset

 is exactly 
\begin_inset Formula $k$
\end_inset

-congested under assignment 
\begin_inset Formula $(\bar{x},\bar{m})$
\end_inset

.
 Thus using the fact that 
\begin_inset Formula $k'\geq k$
\end_inset

 
\begin_inset Formula 
\begin{align*}
l_{n}(x_{n},m_{n}) & \geq a_{k'}\geq a_{k}=l_{n}(\bar{x}_{n},\bar{m}_{n}) & \forall n\in\{1,\dots,k-1\}\\
x_{n} & \leq\cffFlow n{k'}\leq\cffFlow nk=\bar{x}_{n} & \forall n\in\{1,\dots,k-1\}
\end{align*}

\end_inset


\end_layout

\begin_layout Proof
and we have 
\begin_inset Formula $\forall n\in\{k,\dots,l-1\}$
\end_inset

, 
\begin_inset Formula $n$
\end_inset

 is in free flow and at maximum capacity under assignment 
\begin_inset Formula $(\bar{x},\bar{m})$
\end_inset

 (i.e.
 
\begin_inset Formula $\bar{x}_{n}=\flowMax[n]$
\end_inset

 and 
\begin_inset Formula $l_{n}(\bar{x}_{n})=a_{n}$
\end_inset

).
 Thus 
\begin_inset Formula 
\begin{align*}
l_{n}(x_{n},m_{n}) & \geq a_{n}=l_{n}(\bar{x}_{n},\bar{m}_{n}) & \forall n\in\{k,\dots,l-1\}\\
x_{n} & \leq\flowMax[n]=\bar{x}_{n} & \forall n\in\{k,\dots,l-1\}
\end{align*}

\end_inset


\end_layout

\begin_layout Proof
Therefore we have
\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{align}
l_{n}(x_{n},m_{n}) & \geq l_{n}(\bar{x}_{n},\bar{m}_{n}) & \forall n\in\{1,\dots,l-1\}\label{eq:cong_latency}\\
x_{n} & \leq\bar{x}_{n} & \forall n\in\{1,\dots,l-1\}\label{eq:cong_flow}
\end{align}

\end_inset


\end_layout

\begin_layout Proof
Note that 
\begin_inset Formula $\forall n\in\{1,\dots,k\}$
\end_inset

 
\begin_inset Formula $l_{n}(\bar{x}_{n},\bar{m}_{n})=a_{k}\leq a_{l}$
\end_inset

, and 
\begin_inset Formula $\forall n\in\{k,\dots,l-1\}$
\end_inset

 
\begin_inset Formula $l_{n}(\bar{x}_{n},\bar{m}_{n})=a_{n}\leq a_{l}$
\end_inset

, thus we have 
\begin_inset Formula 
\begin{align}
l_{n}(\bar{x}_{n},\bar{m}_{n}) & \leq a_{l} & \forall n\in\{1,\dots,l-1\}\label{eq:cong_latencybar}
\end{align}

\end_inset


\end_layout

\begin_layout Proof
Also note that links 
\begin_inset Formula $n\in\{l,\dots,N\}$
\end_inset

 have latency at least 
\begin_inset Formula $a_{n}$
\end_inset

 (the latency on a link is always greater than the free-flow latency) and
 
\begin_inset Formula $a_{n}\geq a_{l}$
\end_inset

, thus
\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{align}
l_{n}(x_{n},m_{n}) & \geq a_{l} & \forall n\in\{l,\dots,N\}\label{eq:ff_latency}
\end{align}

\end_inset


\end_layout

\begin_layout Proof
We can now lower-bound the cost of the assignment 
\begin_inset Formula $(x,m)$
\end_inset

 where 
\begin_inset Formula $x=s+t$
\end_inset

 and 
\begin_inset Formula $(t,m)$
\end_inset

 is the best Nash equilibrium induced by 
\begin_inset Formula $s$
\end_inset

.
 For conciseness, we use 
\begin_inset Formula $l_{n}$
\end_inset

 as a shorthand for 
\begin_inset Formula $l_{n}(x_{n},m_{n})$
\end_inset

 and 
\begin_inset Formula $\bar{l}_{n}$
\end_inset

 as a shorthand for 
\begin_inset Formula $l_{n}(\bar{x}_{n},\bar{m}_{n})$
\end_inset

.
 We have
\begin_inset Formula 
\begin{align*}
C(x,m)-C(\bar{x},\bar{m}) & =\sum_{n=1}^{N}x_{n}l_{n}-\sum_{n=1}^{l}\bar{x}_{n}\bar{l}_{n} & \text{since }Supp(\bar{x})=\{1,\dots,l\}\\
 & =\sum_{n=1}^{l-1}(x_{n}l_{n}-\bar{x}_{n}\bar{l}_{n})+\sum_{n=l}^{N}x_{n}l_{n}-\bar{x}_{l}a_{l} & \text{since }\bar{l}_{l}=a_{l}\\
 & \geq\sum_{n=1}^{l-1}(x_{n}l_{n}-\bar{x}_{n}\bar{l}_{n})+\sum_{n=l}^{N}x_{n}a_{l}-\bar{x}_{l}a_{l} & \text{using \ref{eq:ff_latency}}\\
 & =\sum_{n=1}^{l-1}(x_{n}-\bar{x}_{n})l_{n}+\sum_{n=1}^{l-1}x_{n}(l_{n}-\bar{l}_{n})+\sum_{n=l}^{N}x_{n}a_{l}-\bar{x}_{l}a_{l}\\
 & \geq\sum_{n=1}^{l-1}(x_{n}-\bar{x}_{n})l_{n}+\sum_{n=l}^{N}x_{n}a_{l}-\bar{x}_{l}a_{l}\text{ } & \text{using \ref{eq:cong_latency}}
\end{align*}

\end_inset

Then using 
\begin_inset Formula $\ref{eq:cong_flow}$
\end_inset

 and 
\begin_inset Formula $\ref{eq:cong_latencybar}$
\end_inset

 we have 
\begin_inset Formula $\forall n\in\{k,\dots,l-1\}$
\end_inset

, 
\begin_inset Formula $x_{n}-\bar{x}_{n}\geq0$
\end_inset

 and 
\begin_inset Formula $l_{n}\leq a_{l}$
\end_inset

, thus 
\begin_inset Formula $\sum_{n=1}^{l-1}(x_{n}-\bar{x}_{n})l_{n}\geq\sum_{n=1}^{l-1}(x_{n}-\bar{x}_{n})a_{l}$
\end_inset

.
 Therefore 
\begin_inset Formula 
\begin{align*}
C(x,m)-C(\bar{x},\bar{m}) & \geq\sum_{n=1}^{l-1}(x_{n}-\bar{x}_{n})a_{l}+\sum_{n=l}^{N}x_{n}a_{l}-\bar{x}_{l}a_{l}\\
 & =\left(\sum_{n=1}^{N}x_{n}-\sum_{n=1}^{l}\bar{x}_{n}\right)a_{l}\\
 & =0
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "jabtex"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
