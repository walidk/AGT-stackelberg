head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2012.01.28.09.00.45;	author jdr;	state Exp;
branches;
next	1.1;

1.1
date	2012.01.26.22.34.14;	author jdr;	state Exp;
branches;
next	;


desc
@before alex edits
@


1.2
log
@big alex first changes
@
text
@#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{fullpage}
\usepackage{mathrsfs}
\end_preamble
\use_default_options false
\begin_modules
theorems-ams-bytype
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes true
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "lyx_commands.lyx"

\end_inset


\end_layout

\begin_layout Title
Stackelberg Routing on Horizontal Queueing Networks
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
A: phrase as compliant/non-compliant and congestion, don't explicitly say
 traffic/transportation as main setup
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
J: How do we motivate the idea of Horizontal Queues? Will there be any complaint
s about no backwave propogation? Motivate with 
\begin_inset Quotes eld
\end_inset

jobs are all processed at same rate for internet traffic, but not true for
 highway traffic.
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: all lemmas need to be named
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Saurabh: get rid of Definition's, just define instead
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: social network 
\begin_inset Note Note
status open

\begin_layout Plain Layout
J: ?
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Abstract
We study inefficiencies of capacity constrained networks due to the selfish
 behavior and lack of coordination of agents, by comparing social optima
 to Nash equilibria.
 Then we investigate possible strategies to reduce the inefficiency by studying
 the Stackelberg routing game: assuming we have control over a fraction
 of the flow on the network, what is a good way of routing that compliant
 flow so that the induced Nash equilibrium is closer to the social optimum
 than the initial Nash equilibrium?
\end_layout

\begin_layout Abstract
Stackelberg routing on parallel link networks has been studied extensively
 for the class of non-decreasing latency functions, and it is shown in 
\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2001stackelberg"

\end_inset

 that computing the optimal Stackelberg strategy is NP-hard in the number
 of links for linear latency functions.
 
\end_layout

\begin_layout Abstract
We study Stackelberg routing for a new class of latency functions, that
 introduces a new model of congestion on a link.
 This class of latency functions arises in transportation networks for example.
 We show that in our setting, there are multiple Nash equilibria, and we
 characterize the best Nash equilibrium.
 Then we study the Stackelberg routing game and show that the optimal Stackelber
g strategy can be computed in polynomial time for this class of latency
 functions on parallel link networks.
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: explain how this applies to traffic just as an example
\end_layout

\end_inset

 The work is applied for modeling transportation networks in which a fraction
 of agents are compliant to routing guidance provided by a central authority,
 while the rest of the agents behave selfishly.
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Enumerate
General literature about routing (Roughgarden and co)
\end_layout

\begin_layout Enumerate
General literature about horizontal queue routing
\end_layout

\begin_layout Enumerate
presentation of the general framework: horizontal queues + compliant/ non-compli
ant
\end_layout

\begin_layout Enumerate
Contribution of the article
\end_layout

\begin_layout Enumerate
Organization of the article
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Stackelberg routing on parallel link networks has been studied extensively
 for the class of non-decreasing latency functions, and it is known that
 computing the optimal Stackelberg strategy is NP-hard in the number of
 links.
 This led to considering polynomial time approximate strategies such as
 Largest Latency First and Scale (see 
\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2001stackelberg"

\end_inset

), and several bounds have been shown on the efficiency of these strategies.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: For CDC we need more consequent introduction
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
A new class of latency functions
\end_layout

\begin_layout Standard
The class of latency functions that have been studied so far rely on very
 specific assumptions: if 
\begin_inset Formula $l(\flow)$
\end_inset

 is the latency on a link, where 
\begin_inset Formula $\flow$
\end_inset

 is the flow, then 
\begin_inset Formula $l$
\end_inset

 is assumed to be non-decreasing, and 
\begin_inset Formula $\flow\longmapsto\flow l(\flow)$
\end_inset

 is assumed to be convex.
 While this class of latency functions provides a good model for congestion
 for a considerable range of networks, such as communication networks, it
 does not accurately model horizontal queuing congestion, such as congestion
 on transportation networks for example.
 Intuitively, a given flow 
\begin_inset Formula $x$
\end_inset

 on a road segment can correspond to
\end_layout

\begin_layout Itemize
either a large concentration of agents moving slowly (high density on a
 congested road), in which case the latency is large,
\end_layout

\begin_layout Itemize
or few cars moving fast (low density), in which case the latency is small.
\end_layout

\begin_layout Standard
this means that the latency is not uniquely determined by the flow, and
 depends on how congested the link is.
 One simple way of modeling this phenomenon is to have an additional binary
 argument 
\begin_inset Formula $m$
\end_inset

 in the latency function 
\begin_inset Formula $l(\flow,\Mode)$
\end_inset

 to specify whether the link is congested 
\begin_inset Formula $(\Mode=1)$
\end_inset

 or is in free-flow 
\begin_inset Formula $(\Mode=0)$
\end_inset

.
 This work considers a macroscopic model of traffic flow inspired by the
 model developed by Lighthill and Whitham, and Richards 
\begin_inset CommandInset citation
LatexCommand cite
key "lighthill1955kinematic,richards1956shock"

\end_inset

,
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: actually, you mean Greenshields and all the other f.d.
 contributions
\end_layout

\end_inset

 and show that the resulting latency function can be expressed in the above
 form 
\begin_inset Formula $l(\flow,\Mode)$
\end_inset

.
 One interesting result is that the latency under congestion 
\begin_inset Formula $l(\flow,1)$
\end_inset

 is a 
\emph on
decreasing 
\emph default
function of flow.
 Intuitively, as the link becomes more congested, agents slow down, so their
 latency increases, and the amount of flow on the link decreases.
\end_layout

\begin_layout Subsection
Main results
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: there needs to be more lead in in the introduction
\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
A: What contributions does this make? 
\begin_inset Note Note
status open

\begin_layout Plain Layout
J: how is this different from main results?
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
This new class of latency functions leads to new interesting results:
\end_layout

\begin_layout Itemize
We show that for this class we do not have essential
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: what is essential? do we need to introduce? also put reference
\end_layout

\end_inset

 uniqueness of Nash equilibria.
 We also show that the set of all pure Nash equilibria can be computed in
 polynomial time, and we characterize in particular the best Nash equilibrium.
\end_layout

\begin_layout Itemize
We show that the optimal Stackelberg strategy can be computed in polynomial
 time.
 This result contrasts with the class of non-decreasing latency functions,
 for which computing the optimal Stackelberg strategy is NP-hard.
\end_layout

\begin_layout Section
Related Work
\end_layout

\begin_layout Section
The Model
\begin_inset CommandInset label
LatexCommand label
name "sec:The-Model"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: you need to present this as horiz queues, give several exapmpesl (green,
 daga, papa) and THEN show the tri dia as one of the instantiatons.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In this section, we consider a transportation setting to motivate the choice
 of the class of latency functions.
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: rewrite in a more general context (no transp.) Always present trans.
 as an example
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Horizontal Queueing Network
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/nparlink.pdf
	scale 35

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Network, 
\begin_inset Formula $\Network$
\end_inset

, with 
\begin_inset Formula $\NLinks$
\end_inset

 parallel links and demand, 
\begin_inset Formula $\qdemand$
\end_inset

.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:nparlink"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We consider a network of 
\begin_inset Formula $\NLinks$
\end_inset

 parallel links indexed by 
\begin_inset Formula $\link\in\{1,\ldots,\NLinks\}$
\end_inset

, under constant positive flow demand, or rate 
\begin_inset Formula $\qdemand$
\end_inset

.
 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:nparlink"

\end_inset

 shows an instance of the network.
 The flow 
\begin_inset Formula $\flow[\link]$
\end_inset

 on link 
\begin_inset Formula $\link$
\end_inset

 is a function of the density 
\begin_inset Formula $\mass[\link]$
\end_inset

, given by a triangular flux function (also referred to as fundamental diagram
 in transportation).
 It specifies the flow 
\begin_inset Formula $x_{n}$
\end_inset

 as a function of the density on the link 
\begin_inset Formula $\rho_{n}$
\end_inset

 by a functional relation 
\begin_inset Formula $\flow[\link]=Q_{\link}\left(\mass[\link]\right)$
\end_inset

, where 
\begin_inset Formula $Q_{\link}$
\end_inset

 is the flux function of link 
\begin_inset Formula $\link$
\end_inset

.
 There are various ways to model flux functions on links with horizontal
 queueing, most of which are concave 
\begin_inset CommandInset citation
LatexCommand cite
key "daganzo1994cell"

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
J: add more refs
\end_layout

\end_inset

.
 These are usually parameterized by characteristics of the network, in particula
r:
\end_layout

\begin_layout Itemize
The free-flow speed on the link 
\begin_inset Formula $\freeflow{\link}$
\end_inset

,
\end_layout

\begin_layout Itemize
The congestion wave speed 
\begin_inset Formula $\speedCong[\link]$
\end_inset

,
\end_layout

\begin_layout Itemize
The maximum capacity of the link 
\begin_inset Formula $\flowMax[\link]$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: make this an example (triangular), but present the whole paragraph in
 a more generic manner
\end_layout

\end_inset

In the free flow regime (when the density on the link is less than a critical
 density 
\begin_inset Formula $\masscrit[\link]$
\end_inset

 that is given by 
\begin_inset Formula $\speedFF[\link]\masscrit[\link]=\flowMax[\link]$
\end_inset

) the velocity is constant and the flow increases linearly in the density
 
\begin_inset Formula $\flow[\link]=\speedFF[\link]\mass[\link]$
\end_inset

.
 In the congested regime (
\begin_inset Formula $\masscrit[\link]<\mass[\link]\leq\mass[\link]^{\max}$
\end_inset

 the density on the link is greater than the critical density and less than
 a maximum density given by 
\begin_inset Formula $\flow[\link]^{\max}-\speedCong[\link](\mass[\link]^{\max}-\masscrit[\link])=0$
\end_inset

), the flow decreases linearly in the density 
\begin_inset Formula $\flow[\link]=\flow[\link]^{\max}-\speedCong[\link](\mass[\link]-\masscrit[\link])=-\speedCong[\link](\mass[\link]-\mass[\link]^{\max})$
\end_inset

 and the velocity is decreasing 
\begin_inset CommandInset citation
LatexCommand cite
key "daganzo1995cell,daganzo1994cell,harker1988multiple"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\flow[\link]=\begin{cases}
\speedFF[\link]\mass[\link] & \mass[\link]\leq\masscrit[\link]\\
\flow[\link]^{\max}-\speedCong[\link](\mass[\link]-\masscrit[\link])=-\speedCong[\link](\mass[\link]-\mass[\link]^{\max}) & \masscrit[\link]<\mass[\link]\leq\mass[\link]^{\max}
\end{cases}\label{eq:flow}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: add Greenshields and Papageorgiou
\begin_inset Note Note
status open

\begin_layout Plain Layout
J: Our approach is only valid for flat free flow regime, should we limit
 our diagrams as so, to avoid confusion?
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/fundamentaldiagram.png
	scale 35

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Fundamental diagram of traffic on link 
\begin_inset Formula $n$
\end_inset

.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:fundametal_diagram"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We assume that the network is subject to flow demand or rate 
\begin_inset Formula $r$
\end_inset

 that represents a set of non-atomic players
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: will people know what this means?
\end_layout

\end_inset

.
 We denote by 
\begin_inset Formula $(\NLinks,\qdemand)$
\end_inset

 a network instance with 
\begin_inset Formula $\NLinks$
\end_inset

 links, rate 
\begin_inset Formula $r$
\end_inset

, and no compliant flow
\begin_inset Note Note
status open

\begin_layout Plain Layout
this needs to be explained
\end_layout

\end_inset

.
 We next define feasible flow assignments for network instance 
\begin_inset Formula $(\NLinks,\qdemand)$
\end_inset

.
\end_layout

\begin_layout Definition
A flow assignment 
\begin_inset Formula $\flow\in\mathbb{R}_{+}^{\NLinks}$
\end_inset

 is feasible for instance 
\begin_inset Formula $(\NLinks,\qdemand)$
\end_inset

 if 
\begin_inset Formula $\forall n$
\end_inset

 
\begin_inset Formula $\flow[\link]\leq\flow[\link]^{\max}$
\end_inset

 and 
\begin_inset Formula $\sum_{\link}\flow[\link]=\qdemand$
\end_inset

 
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $\flow$
\end_inset

 is a feasible flow assignment for 
\begin_inset Formula $(\NLinks,\qdemand)$
\end_inset

, we denote by 
\begin_inset Formula $\Supp{\flow}$
\end_inset

the support of 
\begin_inset Formula $\flow$
\end_inset

, that is the set of links that are used by the flow assignment 
\begin_inset Formula 
\[
\Supp{\flow}=\{\link|\flow[\link]>0\}
\]

\end_inset


\end_layout

\begin_layout Subsection
Deriving the Latency Function for a Horizontal Queueing Network
\end_layout

\begin_layout Standard
The 
\begin_inset Quotes eld
\end_inset

velocity
\begin_inset Quotes erd
\end_inset

 on link 
\begin_inset Formula $\link$
\end_inset

 is defined by 
\begin_inset Formula $\flow[\link]/\mass[\link]$
\end_inset

 (flux over density), and the latency incurred by every non-atomic player
 on link 
\begin_inset Formula $n$
\end_inset

 is given by 
\begin_inset Formula 
\[
\latency[\link](\mass[\link],\flow[\link])=\frac{\Length[\link]\mass[\link]}{\flow[\link]}
\]

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
A: There is an abuse of notation on the latencies
\end_layout

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\Length[\link]$
\end_inset

 is the length of link 
\begin_inset Formula $n$
\end_inset

.
 In the context of traffic, velocity corresponds to physical speed of vehicles
 on a freeway, and latency to delay incurred while traveling through the
 network.
\end_layout

\begin_layout Standard
Using the expression 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:flow"

\end_inset

 of flow as a function of the density, we can write
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
\latency[\link](\mass[\link])=\begin{cases}
\frac{\Length[\link]}{\speedFF[\link]} & \mass[\link]\leq\masscrit[\link]\\
\frac{\Length[\link]}{\speedCong[\link](\massmax[\link]/\mass[\link]-1)} & \masscrit[\link]<\mass[\link]\leq\massmax[\link]
\end{cases}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
The total latency incurred by all players on a link is 
\begin_inset Formula $\flow[\link]\latency[\link](\mass[\link])=\Length[\link]\mass[\link]$
\end_inset

, and the total latency incurred by all players on the network is 
\begin_inset Formula 
\begin{equation}
C(\mass)=\sum_{n}\Length[\link]\mass[\link]\label{eq:cost_function}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsubsection
Latency as a function of flow
\end_layout

\begin_layout Standard
We can express the latency as a function of flow by introducing an integer
 
\begin_inset Formula $\Mode[n]\in\{0,1\}$
\end_inset

 that specifies whether link 
\begin_inset Formula $n$
\end_inset

 is congested (
\begin_inset Formula $\Mode[n]=1$
\end_inset

 if 
\begin_inset Formula $n$
\end_inset

 is congested and 
\begin_inset Formula $\Mode[n]=0$
\end_inset

 if 
\begin_inset Formula $n$
\end_inset

 is in free-flow); for this, we first extract density from flow and mode
\begin_inset Note Note
status open

\begin_layout Plain Layout
J: added 
\begin_inset Quotes eld
\end_inset

and mode
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset

: 
\begin_inset Formula 
\[
\mass[\link](\flow[n],\Mode[n])=\begin{cases}
\frac{\flow[n]}{\freeflow n} & \Mode[n]=0\\
\frac{1}{\speedCong[n]}(\flowMax[n]-\flow[n])+\masscrit[\link] & \Mode[n]=1
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
this corresponds to inverting the fundamental diagram that gives the flow
 as a function of density.
 The latency is then given by the following expression: 
\begin_inset Formula 
\begin{align*}
l_{n}(\flow[n],\Mode[n])=\frac{\lenCell[n]\mass[\link]}{\flow[n]}=\begin{cases}
\frac{\lenCell[n]}{v_{n}} & m_{n}=0\\
\lenCell[n]\left(\frac{\massmax[\link]}{x_{n}}-\frac{1}{w_{n}}\right) & m_{n}=1
\end{cases}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
For convenience of notation, we introduce constants 
\begin_inset Formula $\parA[n]$
\end_inset

, 
\begin_inset Formula $\parB[n]$
\end_inset

 such that
\begin_inset Formula 
\begin{align}
l_{n}(x_{n},m_{n})=\begin{cases}
\parA[n] & m_{n}=0\\
\parB[n]\left(\frac{1}{x_{n}}-\frac{1}{x_{n}^{\max}}\right)+\parA[n] & m_{n}=1
\end{cases}\label{eq:latency}
\end{align}

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
A: ok, i did not have a chance to redo the maths on the plane, we have to
 do this.
 ok for now
\end_layout

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\parA[n]=\frac{\lenCell[n]}{\freeflow n}$
\end_inset

 is the free-flow latency and 
\begin_inset Formula $\parB[n]=\lenCell[n]\massmax[\link]$
\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
A: is there any physical interpretation for this? 
\begin_inset Note Note
status open

\begin_layout Plain Layout
J: corresponds directly to larger w (backwave propagation speed).
\end_layout

\end_inset


\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/latency.png
	scale 35

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Latency function resulting from the a triangular flux function.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:traffic_latency"

\end_inset


\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
A: have same for greenshields,....
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Properties of the latency function for a triangular flux function
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: you should say: this is specific to triangular latency 
\begin_inset Note Note
status open

\begin_layout Plain Layout
J: I've added this to the title and in the paragraph
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note that the latency function resulting from a concave flux function does
 not satisfy properties usually assumed in the Stackelberg routing literature
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: be specific about what you are referring to
\end_layout

\end_inset

.
 In particular, if we consider a triangular flux function, the latency is
 not an increasing function of flow: it is a constant function if the link
 is in free-flow, and a 
\emph on
decreasing
\emph default
 function when the link is congested.
 And for a given flow 
\begin_inset Formula $\flow[\link]$
\end_inset

, there are up to two possible latencies, one corresponding to the free-flow
 regime (low density, few agents on the link moving fast) and one to the
 congested regime (high density, many cars on the link moving slowly).
 These properties motivate the choice of the class of latency functions.
\end_layout

\begin_layout Subsection
A Class of Congestion Latency Functions
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sub:latency_class"

\end_inset


\end_layout

\begin_layout Standard
We consider the class of latency functions 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
l_{n}:[0,\flowMax[n]]\times\left\{ 0,1\right\}  & \longrightarrow\mathbb{{R}}_{+}\\
(\flow[n],\Mode[n]) & \longmapsto l_{n}(\flow[n],\Mode[n])
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\flow[n]\in[0,\flowMax[n]]$
\end_inset

 is the flow and 
\begin_inset Formula $\Mode[n]\in\left\{ 0,1\right\} $
\end_inset

 is the congestion state.
 We assume that 
\begin_inset Formula $l_{n}$
\end_inset

 satisfies the following properties:
\end_layout

\begin_layout Standard

\series bold
P1: 
\series default
The
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 latency is constant in free-flow.
 We denote by 
\begin_inset Formula $\parA[n]$
\end_inset

 the free-flow latency where 
\begin_inset Formula $l_{n}(x_{n},0)=\parA[n]$
\end_inset

 
\begin_inset Formula $\forall\flow[n]\in[0,\flowMax[n]]$
\end_inset

.
\end_layout

\begin_layout Standard

\series bold
P2:
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 The latency is decreasing in congestion: 
\begin_inset Formula $\flow[n]\longmapsto l_{n}(\flow[n],1)$
\end_inset

 is decreasing invertible, and 
\begin_inset Formula $l_{n}(\flowMax[n],1)=\parA[n]$
\end_inset

.
\begin_inset Note Note
status open

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
A: invertible in polynomial time?
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Some of the known results on congestion networks 
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: again be specific, references
\end_layout

\end_inset

do not apply to our setting: for example, the network may have multiple
 Nash equilibria that have different costs.
 In the next section we specify this result and address the issue of having
 multiple Nash equilibria.
\end_layout

\begin_layout Section
Nash Equilibria
\end_layout

\begin_layout Standard
In this section, we characterize pure non-atomic Nash equilibria
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: again, this nonatomic business needs to be explained
\end_layout

\end_inset

 of the network (also called Wardrop equilibria in the traffic literature
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: references
\end_layout

\end_inset

), which we simply refer to as Nash equilibria.
 We first review the essential uniqueness of Nash equilibria in the case
 of increasing latency functions (in the sense that all Nash equilibria
 have the same cost
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: put a reference if this is standard definition
\end_layout

\end_inset

).
 Then we show that our class of latency functions induce multiple Nash equilibri
a with different costs.
 We show that the set of Nash equilibria can be computed in polynomial time
 (with respect to the number of parallel links), and we characterize the
 best Nash equilibrium.
\end_layout

\begin_layout Subsection
Characterization of Nash Equilibria
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: One sentence to explain what the section is about
\end_layout

\end_inset

The basic notion of Nash equilibrium on a network flow problem with a single
 source and single destination is given.
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:ne"

\end_inset

An assignment 
\begin_inset Formula $(\flow,\Mode)\in\mathbb{R}_{+}^{\NLinks}\times\{0,1\}^{\NLinks}$
\end_inset

 for a parallel network instance 
\begin_inset Formula $(\NLinks,\qdemand)$
\end_inset

 is at Nash equilibrium, if 
\begin_inset Formula $\forall n$
\end_inset

 
\begin_inset Formula 
\[
\flow[\link]>0\Rightarrow\forall k,\latency[\link](\flow[\link],\Mode[\link])\leq\latency[k](\flow[k],\Mode[k])
\]

\end_inset


\end_layout

\begin_layout Standard
In particular, every non-atomic agent cannot improve her/his latency by
 switching to another link.
 As a consequence, all links that are in the support of 
\begin_inset Formula $\flow$
\end_inset

 have the same latency 
\begin_inset Formula $\latency[0]$
\end_inset

, and links that are not in the support have latency greater than 
\begin_inset Formula $\latency[0]$
\end_inset

.
 Note that to fully characterize the equilibrium, one needs to specify the
 congestion state 
\begin_inset Formula $m$
\end_inset

, since the latency on a link depends on whether the link is congested or
 not.
 The following Lemma gives an equivalent characterization of pure Nash equilibri
a
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: need to define pure Nash
\end_layout

\end_inset


\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:nash_eq"

\end_inset

 If 
\begin_inset Formula $(\flow,\Mode)$
\end_inset

 is an assignment for a parallel network instance 
\begin_inset Formula $(\NLinks,\qdemand)$
\end_inset

 at Nash equilibrium, then 
\begin_inset Formula 
\begin{align*}
\flow[\link]>0 & \Rightarrow\latency[\link](\flow[\link],\Mode[\link])=\latency[0]\\
\flow[\link]=0 & \Rightarrow\latency[\link](0,0)\geq\latency[0]
\end{align*}

\end_inset

 and the total latency incurred by the network is 
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: where is 
\begin_inset Formula $m$
\end_inset

 a vector defined? 
\begin_inset Note Note
status open

\begin_layout Plain Layout
J: I believe it is in definition 2
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $\Latency(\flow,\Mode)=\qdemand\latency[0]$
\end_inset

.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: C is already defined previously in terms of 
\begin_inset Formula $\rho$
\end_inset

, need to manage notation.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note that links that have zero flow are necessarily in free-flow 
\begin_inset Formula $\flow[\link]=0\Rightarrow\Mode[\link]=0$
\end_inset

.
\end_layout

\begin_layout Subsection
Nash Equilibria for non-decreasing latency functions
\end_layout

\begin_layout Standard
Assuming the latency functions 
\begin_inset Formula $\flow[\link]\rightarrow\latency[\link](\flow[\link])$
\end_inset

 are non-decreasing, one can show that all Nash equilibria have the same
 cost.
 Let 
\begin_inset Formula $\flow$
\end_inset

 and 
\begin_inset Formula $\flow'$
\end_inset

 be two assignments for 
\begin_inset Formula $(\NLinks,\qdemand)$
\end_inset

 at Nash equilibrium.
 Let 
\begin_inset Formula $\latency[0]$
\end_inset

, respectively 
\begin_inset Formula $\latency[0]'$
\end_inset

 denote the common latency of all links in the support of 
\begin_inset Formula $\flow$
\end_inset

, respectively 
\begin_inset Formula $\flow'$
\end_inset

.
 The cost of the Nash equilibria are respectively 
\begin_inset Formula $\qdemand\latency[0]$
\end_inset

 and 
\begin_inset Formula $\qdemand\latency[0]'$
\end_inset

.
\end_layout

\begin_layout Standard
Assume 
\begin_inset Formula $\flow\neq\flow'$
\end_inset

.
 Then 
\begin_inset Formula $\exists\link_{1},\link_{2}$
\end_inset

 such that 
\begin_inset Formula 
\begin{align*}
\flow[\link_{1}]>\flow[\link_{1}]'\geq0 &  & \flow[\link_{2}]'>\flow[\link_{2}]\geq0
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Since 
\begin_inset Formula $\flow$
\end_inset

 is at Nash equilibrium and 
\begin_inset Formula $\link_{1}\in\Supp{\flow}$
\end_inset

, 
\begin_inset Formula $\latency[\link_{1}](\flow[\link_{1}])\leq\latency[\link_{2}](\flow[\link_{2}])$
\end_inset

.
 And since 
\begin_inset Formula $\latency[\link_{2}]$
\end_inset

 is non-decreasing 
\begin_inset Formula $\latency[\link_{2}](\flow[\link_{2}])\leq\latency[\link_{2}](\flow[\link_{2}]')$
\end_inset

.
 Thus 
\begin_inset Formula $\latency[0]=\latency[\link_{1}](\flow[\link_{1}])\leq\latency[\link_{2}](\flow[\link_{2}])\leq\latency[\link_{2}](\flow[\link_{2}]')=\latency[0]'$
\end_inset

.
 Exchanging the roles of 
\begin_inset Formula $\flow$
\end_inset

 and 
\begin_inset Formula $\flow'$
\end_inset

 we have 
\begin_inset Formula $\latency[0]'\leq\latency[0]$
\end_inset

.
 Therefore 
\begin_inset Formula $\latency[0]=\latency[0]'$
\end_inset

 and both equilibria have the same cost.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Traffic-Networks-Have"

\end_inset

Existence of multiple Nash equilibria for horizontal queueing networks
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\NashEq{\NLinks}{\qdemand}$
\end_inset

 denote the set of pure Nash Equilibria for network instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

.
 To simplify the discussion, we assume without loss of generality, that
 the links are ordered by increasing free-flow latencies, and that free-flow
 latencies are different to avoid degenerate cases where the set of Nash
 equilibria is infinite
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\parA[1]<\parA[2]<\ldots<\parA[\NLinks]
\]

\end_inset


\end_layout

\begin_layout Standard
Consider an assignment 
\begin_inset Formula $(x,m)$
\end_inset

 under Nash equilibrium.
 Then it is clear that if link 
\begin_inset Formula $j$
\end_inset

 is in the support, then links 
\begin_inset Formula $\left\{ 1,\ldots,j-1\right\} $
\end_inset

 are congested.
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: we need to discuss this
\end_layout

\end_inset


\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:filluplower"

\end_inset

Let 
\begin_inset Formula $\left(\flow,\Mode\right)\in\NashEq{\NLinks}{\qdemand}$
\end_inset

.
 Then 
\begin_inset Formula $j\in\Supp{\flow}\implies\Mode[i]=1\quad\forall i\in\left\{ 1,\ldots,j-1\right\} $
\end_inset


\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $i\in\left\{ 1,\ldots,j-1\right\} $
\end_inset

.
 Then 
\begin_inset Formula $\Mode[i]=0\implies\latency[i]=\parA[i]<a_{j}\le\latency[j]$
\end_inset

, which violates 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:nash_eq"

\end_inset

.
 Therefore, 
\begin_inset Formula $m_{i}=1\quad\forall i\in\left\{ 1,\ldots,j-1\right\} $
\end_inset

.
\end_layout

\begin_layout Corollary
\begin_inset CommandInset label
LatexCommand label
name "cor:atmost1ff"

\end_inset

 Let 
\begin_inset Formula $\left(\flow,\Mode\right)\in\NashEq{\NLinks}{\qdemand}$
\end_inset

.
 Assume that 
\begin_inset Formula $\exists k\in\Supp{\flow}$
\end_inset

 such that 
\begin_inset Formula $m_{k}=0$
\end_inset

.
 Then 
\begin_inset Formula $m=(1,\dots,\stackrel{k-1}{1},\stackrel{k}{0},\dots,0)$
\end_inset

 and 
\begin_inset Formula $\Supp{\flow}=\left\{ 1,\dots,k\right\} $
\end_inset

.
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: I do not understand this cor.
 if i pick such a k, the prop is stil ltrue for k + 1, so how do i know
 this was the smallest?
\begin_inset Note Note
status open

\begin_layout Plain Layout
J: the key is that k is in the support, which means that there is flow on
 k.
 k+1 mustnt be in the support.
 this part may not be clear (and therefore maybe shouldn't be a corollary).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The corollary states that if some link 
\begin_inset Formula $k$
\end_inset

 in the support of a Nash Equilibrium is in free flow, this completely determine
s the equilibrium: links 
\begin_inset Formula $\left\{ 1,\dots,k-1\right\} $
\end_inset

 are in the support and are congested, and links 
\begin_inset Formula $\left\{ k+1,\dots,N\right\} $
\end_inset

 are not in the support.
 We will call such a Nash equilibrium (where one link in the support is
 in free flow) a single-link free-flow Nash equilibrium.
 It is clear that there are at most 
\begin_inset Formula $N$
\end_inset

 such equilibria since specifying which link is in free flow completely
 determines the equilibrium.
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: we need to talk about this
\end_layout

\end_inset


\end_layout

\begin_layout Standard
There may be equilibria that are completely congested, i.e.
 such that 
\begin_inset Formula $m=(1,\dots,1)$
\end_inset

.
 We first show that there may be at most one such equilibrium.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:uniquemode"

\end_inset

For a given congestion state 
\begin_inset Formula $\Mode$
\end_inset

, there is at most one assignment 
\begin_inset Formula $x$
\end_inset

 such that 
\begin_inset Formula $(x,m)$
\end_inset

 is at Nash equilibrium.
\end_layout

\begin_layout Proof
In the case in which 
\begin_inset Formula $\left|\Supp{\flow}\right|<2$
\end_inset

, the result is trivial, so we assume 
\begin_inset Formula $\left|\Supp{\flow}\right|\ge2$
\end_inset

.
 Assume 
\begin_inset Formula $\exists\flow,\flow',\flow\neq\flow'$
\end_inset

 such that 
\begin_inset Formula $\left(\flow,\Mode\right),\left(\flow',\Mode\right)\in\NashEq{\NLinks}{\qdemand}$
\end_inset

.
 Then 
\begin_inset Formula $\exists i,j\in\Supp{\flow}:\flow[i]<\flow[i]',\flow[j]>\flow[j]'$
\end_inset

.
 From Corollary 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:atmost1ff"

\end_inset

, we know that 
\begin_inset Formula $\Mode[i]+\Mode[j]>0$
\end_inset

, and without loss of generality, we assume that 
\begin_inset Formula $\Mode[i]=1$
\end_inset

.
 With this assumption, we have that 
\begin_inset Formula $\latency[i]>\latency[i]'$
\end_inset

.
 For the 
\begin_inset Formula $j$
\end_inset

 case, we need to consider 
\begin_inset Formula $\Mode[j]=\left\{ 0,1\right\} $
\end_inset

.
 If 
\begin_inset Formula $\Mode[j]=0$
\end_inset

, then 
\begin_inset Formula $\latency[j]=\latency[j]'$
\end_inset

.
 If 
\begin_inset Formula $\Mode[j]=1$
\end_inset

, then 
\begin_inset Formula $ $
\end_inset


\begin_inset Formula $\latency[j]'>\latency[j]$
\end_inset

.
 Therefore, 
\begin_inset Formula $\latency[j]'\ge\latency[j]$
\end_inset

.
 From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:nash_eq"

\end_inset

, 
\begin_inset Formula $\latency[i]'=\latency[j]'$
\end_inset

, and
\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{equation}
\latency[i]>\latency[i]'=\latency[j]'\ge\latency[j]\label{eq:contradiction}
\end{equation}

\end_inset


\end_layout

\begin_layout Proof
yet from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:nash_eq"

\end_inset

, we also have 
\begin_inset Formula $\latency[i]=\latency[j]$
\end_inset

, which a contradiction of 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:contradiction"

\end_inset

.
\end_layout

\begin_layout Standard
We have shown so far that there are at most 
\begin_inset Formula $\NLinks$
\end_inset

+1 Nash equilibria for instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

 (
\begin_inset Formula $\NLinks$
\end_inset

 single-link free-flow equilibria, and one completely congested equilibrium).
 Next we characterize single link free flow equilibria.
\end_layout

\begin_layout Subsubsection
Single link free flow Nash Equilibria
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: initially, when i read this page, i had a hard time until i realized
 this is induction on the 
\series bold
size 
\series default
of the network?
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Consider a Nash equilibrium 
\begin_inset Formula $(x,m)$
\end_inset

 and let 
\begin_inset Formula $k=\max\left\{ \Supp{\flow}\right\} $
\end_inset

 Assume 
\begin_inset Formula $m_{k}=0$
\end_inset

 (i.e.
 
\begin_inset Formula $(x,m)$
\end_inset

 is a free flow Nash equilibrium).
 We have from Corollary 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:atmost1ff"

\end_inset

 that links 
\begin_inset Formula $\left\{ 1,\dots,k-1\right\} $
\end_inset

 are congested and link 
\begin_inset Formula $k$
\end_inset

 is in free flow.
 Therefore we must have 
\begin_inset Formula $\forall n\in\left\{ 1,\dots,k-1\right\} $
\end_inset

, 
\begin_inset Formula $l_{n}(x_{n},1)=l_{k}(x_{k},0)=a_{k}$
\end_inset

.
 This uniquely determines the flow on links 
\begin_inset Formula $n\in\left\{ 1,\dots,k-1\right\} $
\end_inset

.
 We define this flow to be 
\begin_inset Formula $\cffFlow nk$
\end_inset

.
 More precisely, for 
\begin_inset Formula $1\leq n<k\leq N$
\end_inset

, 
\begin_inset Formula $\cffFlow nk$
\end_inset

 is the unique flow that satisfies
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
l_{n}(\cffFlow nk,1)=a_{k}\label{eq:x_hat}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Note that 
\begin_inset Formula $\cffFlow{\link}k$
\end_inset

 is a decreasing function of 
\begin_inset Formula $k$
\end_inset

.
\end_layout

\begin_layout Standard
Now we can characterize single-link free flow equilibria.
 All single link free flow equilibria are of the form 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\left(\opneFlow kr,\cffMode k\right)$
\end_inset

 where
\end_layout

\begin_layout Standard
\begin_inset Formula $ $
\end_inset


\begin_inset Formula 
\begin{equation}
\bar{\Mode}^{k}\coloneqq(1,\dots,\stackrel{k-1}{1},\stackrel{k}{0},\dots,0)\label{eq:m_bar}
\end{equation}

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
A: same thing we need to discuss
\end_layout

\end_inset

 
\begin_inset Formula 
\begin{equation}
\opneFlow k{\qdemand}=(\cffFlow 1k,\dots,\overset{k-1}{\cffFlow{k-1}k},\overset{k}{r-\sum_{\link=1}^{k-1}\cffFlow{\link}k},0,\dots,0)\label{eq:x_bar}
\end{equation}

\end_inset


\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:xhat"

\end_inset


\begin_inset Formula $r-\sum_{\link=1}^{k-1}\cffFlow{\link}k\in\left[0,\flowMax[k]\right]\implies\left(\opneFlow kr,\cffMode k\right)\in\NashEq{\NLinks}{\qdemand}$
\end_inset

.
\end_layout

\begin_layout Proof
From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:m_bar"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:x_bar"

\end_inset

, we have that 
\begin_inset Formula $\forall i<k$
\end_inset

, 
\begin_inset Formula $\latency[i]=\parA[j]$
\end_inset

 and 
\begin_inset Formula $\opneFlow[i]k{\qdemand}\in\left[0,\flowMax[i]\right]\quad\forall i\in\left\{ 1,\ldots,\NLinks\right\} $
\end_inset

.
 By the assumption that 
\begin_inset Formula $\cffMode[k]k=0$
\end_inset

, we also have 
\begin_inset Formula $\latency[k]=\parA[k]$
\end_inset

.
 All links 
\begin_inset Formula $\link>k$
\end_inset

 are not in 
\begin_inset Formula $\Supp{\opneFlow k{\qdemand}},$
\end_inset

 and have a latency greater than 
\begin_inset Formula $\parA[k]$
\end_inset

.
 Therefore, we have that 
\begin_inset Formula $\forall\link\in\Supp{\opneFlow k{\qdemand}}$
\end_inset

, 
\begin_inset Formula $\latency[\link]=\parA[k]$
\end_inset

 and 
\begin_inset Formula $\forall\link\notin\Supp{\opneFlow k{\qdemand}}$
\end_inset

 
\begin_inset Formula $l_{n}>a_{k}$
\end_inset

, which satisfies Definition 
\begin_inset CommandInset ref
LatexCommand formatted
reference "def:ne"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Existence of a single-link free-flow Nash Equilibrium
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: I do not understand m bar N + 1.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
J: If taken literally, it means that link 1 through N + 1 - 1 = 1 through
 N are congested, while all other links are not congested.
 This may lead to confusion but notation overkill would be the other option.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:xhat"

\end_inset

, we have an analytical representation of free flow Nash equilibria.
 Next, we show that if the set of Nash equilibria is non-empty, then it
 contains a single link free flow Nash equilibrium (i.e.
 a Nash equilibrium for which there is a single link in free flow).
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lemma:slff"

\end_inset

Consider instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

.
 If there exists a completely congested Nash equilibrium 
\begin_inset Formula $\left(\flow,\cffMode{\NLinks+1}\right)\in\NashEq{\NLinks}{\qdemand}$
\end_inset

, then there also exists a free flow Nash equilibrium 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\left(\opneFlow j{\qdemand},\cffMode j\right)\in\NashEq{\NLinks}{\qdemand}$
\end_inset

 for some 
\begin_inset Formula $j$
\end_inset

.
\end_layout

\begin_layout Proof
We first observe that the maximum demand 
\begin_inset Formula $r$
\end_inset

 such that there exists a completely congested Nash equilibrium is 
\begin_inset Formula $\sum_{\link=1}^{\NLinks-1}\cffFlow{\link}{\NLinks}+\flowMax[\NLinks]$
\end_inset

.
 Therefore, from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:filluplower"

\end_inset

, it suffices to show the following property: 
\end_layout

\begin_layout Proof
\begin_inset Formula $\mathbf{P_{N}}$
\end_inset

: 
\begin_inset Formula $\forall r\in[0,\sum_{\link=1}^{\NLinks-1}\cffFlow{\link}{\NLinks}+\flowMax[\NLinks]]$
\end_inset

, there exists a single-link free flow Nash equilibrium for instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

.
 
\end_layout

\begin_layout Proof
We show 
\begin_inset Formula $P_{N}$
\end_inset

 by induction on 
\begin_inset Formula $N$
\end_inset

, the size of the network.
 For 
\begin_inset Formula $N=1$
\end_inset

, it is clear that if 
\begin_inset Formula $0\le\qdemand\le\flowMax[1]$
\end_inset

, there is a single-link free flow Nash equilibrium 
\begin_inset Formula $(x,m)=(r,0)$
\end_inset

.
 Now let 
\begin_inset Formula $N\geq1$
\end_inset

, assume 
\begin_inset Formula $P_{N}$
\end_inset

 is true and let us show 
\begin_inset Formula $P_{N+1}$
\end_inset

.
 Let 
\begin_inset Formula $0\le\qdemand\le\sum_{\link=1}^{N}\cffFlow{\link}{N+1}+\flowMax[N+1]$
\end_inset

.
 If 
\begin_inset Formula $0\le\qdemand\le\sum_{\link=1}^{N-1}\cffFlow{\link}N+\flowMax[N]$
\end_inset

, then by the induction hypothesis there exists a single link free flow
 Nash equilibrium 
\begin_inset Formula $(x,m)$
\end_inset

 for instance 
\begin_inset Formula $(N,r)$
\end_inset

.
 Then assignment 
\begin_inset Formula $(x',m')$
\end_inset

 defined as 
\begin_inset Formula $x'=(x_{1},\dots,x_{N},0)$
\end_inset

 and 
\begin_inset Formula $m'=(m_{1},\dots,m_{N},0)$
\end_inset

 is clearly a single-link free flow Nash equilibrium for instance 
\begin_inset Formula $(N+1,r)$
\end_inset

.
\end_layout

\begin_layout Proof
Now if
\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{equation}
\sum_{\link=1}^{N-1}\cffFlow{\link}N+\flowMax[N]\le\qdemand\le\sum_{\link=1}^{N}\cffFlow{\link}{N+1}+\flowMax[N+1]\label{eq:im1}
\end{equation}

\end_inset

, we can show that 
\begin_inset Formula $\left(\opneFlow{N+1}{\qdemand},\cffMode{N+1}\right)\in\NashEq{\NLinks+1}{\qdemand}$
\end_inset

.
 From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:xhat"

\end_inset

, we only need to show that 
\begin_inset Formula $0\leq\qdemand-\sum_{\link=1}^{N}\cffFlow{\link}{N+1}\leq\flowMax[N+1]$
\end_inset

.
 We readily have the second inequality.
 To show the first inequality, we have
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula 
\begin{align*}
r & \ge\sum_{\link=1}^{N-1}\cffFlow{\link}N+\flowMax[N] & \text{using \eqref{eq:im1}}\\
 & \ge\sum_{\link=1}^{N-1}\cffFlow{\link}{N+1}+\flowMax[N] & \text{since \cffFlow nN\geq\cffFlow n{N+1}}\\
 & \geq\sum_{\link=1}^{N-1}\cffFlow{\link}{N+1}+\cffFlow N{N+1} & \text{since \flowMax[N]\geq\cffFlow N{N+1}}
\end{align*}

\end_inset


\end_layout

\begin_layout Proof
thus we obtain the desired inequalities and 
\begin_inset Formula $\left(\opneFlow{N+1}{\qdemand},\cffMode{N+1}\right)$
\end_inset

 is a single link free flow Nash equilibrium for instance 
\begin_inset Formula $(\NLinks+1,r)$
\end_inset

.
 This achieves the induction.
\end_layout

\begin_layout Subsection
Best Nash Equilibria
\begin_inset CommandInset label
LatexCommand label
name "sub:Best-Nash-Equilibria"

\end_inset


\end_layout

\begin_layout Standard
In Section 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:Traffic-Networks-Have"

\end_inset

, we showed that any assignment at Nash equilibrium has at most one link
 in free flow.
 We also showed that if there exists a completely congested Nash equilibrium,
 then there also exists a single-link free flow Nash equilibrium
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: corresponding to the same optimal cost? 
\begin_inset Note Note
status open

\begin_layout Plain Layout
J: I don't think I understand, but I believe the answer is no.
\end_layout

\end_inset


\end_layout

\end_inset

.
 We define the best Nash equilibrium to be the Nash equilibrium of least
 total latency
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:bne"

\end_inset


\begin_inset Formula $\BestNashEq{\NLinks}{\qdemand}=\underset{\left(\flow,\Mode\right)\in\NashEq{\NLinks}{\qdemand}}{\arg\min}\Latency\left(\flow,\Mode\right)$
\end_inset


\end_layout

\begin_layout Standard
We now show some interesting properties of the best Nash equilibrium:
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\BestNashEq{\NLinks}{\qdemand}$
\end_inset

 is unique.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\BestNashEq{\NLinks}{\qdemand}$
\end_inset

 must have a link in free flow.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\BestNashEq{\NLinks}{\qdemand}$
\end_inset

 has the smallest support of all Nash equilibria for demand 
\begin_inset Formula $\qdemand$
\end_inset

.
\end_layout

\begin_layout Standard
Next we show property 3.
 Properties 1 and 2 follow immediately.
\end_layout

\begin_layout Theorem
\begin_inset CommandInset label
LatexCommand label
name "theorem:minsupport"

\end_inset

 For a parallel network instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

, the best Nash equilibrium is the one that has smallest support
\begin_inset Formula 
\[
\BestNashEq{\NLinks}{\qdemand}=\underset{\left(\flow,\Mode\right)\in\NashEq{\NLinks}{\qdemand}}{\arg\min}\left\{ \max\left[\Supp{\flow}\right]\right\} 
\]

\end_inset


\end_layout

\begin_layout Proof
To prove Theorem 
\begin_inset CommandInset ref
LatexCommand formatted
reference "theorem:minsupport"

\end_inset

, we use two intermediate results.
 The first result says that a fully congested Nash equilibrium will never
 be the best Nash equilibrium (because there always exists a single-link
 free flow equilibrium, and it is better).
 The second result says that the better of two single-link free flow Nash
 equilibria will be the one with the free flow link that has a smaller index.
\end_layout

\begin_deeper
\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:conworseff"

\end_inset

If 
\begin_inset Formula $(x,\cffMode{\NLinks+1})$
\end_inset

 is a completely congested Nash equilibrium and 
\begin_inset Formula $(\flow',\cffMode j)$
\end_inset

 is a free flow Nash equilibrium, then 
\begin_inset Formula $\Latency\left(\flow',\cffMode j\right)\le\Latency\left(\flow,\cffMode{\NLinks+1}\right)$
\end_inset

.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:smalleri"

\end_inset

If 
\begin_inset Formula $\left(\opneFlow{\qdemand}i,\cffMode i\right),\left(\opneFlow{\qdemand}j,\cffMode j\right)\in\NashEq{\NLinks}{\qdemand}$
\end_inset

 are two free flow Nash equilibria for instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

, then 
\begin_inset Formula $i<j\Rightarrow\Latency\left(\opneFlow{\qdemand}i,\cffMode i\right)<\Latency\left(\opneFlow{\qdemand}j,\cffMode j\right)$
\end_inset


\end_layout

\end_deeper
\begin_layout Proof
The proofs for the lemmas above are omitted for brevity.
\end_layout

\begin_layout Proof
From Corollary 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:atmost1ff"

\end_inset

, the complete set of candidate Nash equilibria with demand 
\begin_inset Formula $\qdemand,$
\end_inset

 are the flows with one link in free flow 
\begin_inset Formula $\left\{ \opneFlow{\qdemand}i:i\in\left\{ 1,\ldots,\NLinks\right\} \right\} $
\end_inset

 and the flow with all links in congestion (
\begin_inset Formula $\flow'$
\end_inset

 such that 
\begin_inset Formula $\left(\flow',\cffMode{\NLinks+1}\right)\in\NashEq{\Network}{\qdemand}$
\end_inset

).
 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:conworseff"

\end_inset

 says that 
\begin_inset Formula $\flow'$
\end_inset

 cannot be the unique minimum, and therefore a minimizing flow must exist
 in the set of flows with one link in free flow.
 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:smalleri"

\end_inset

 then says that the total latencies will decrease with decreasing free flow
 link index, and therefore the minimizing flow must be the Nash equilibrium
 flow that minimizes the index of the free flow link.
\end_layout

\begin_layout Standard
Theorem 
\begin_inset CommandInset ref
LatexCommand formatted
reference "theorem:minsupport"

\end_inset

 provides a simple characterization of the best Nash equilibrium for any
 instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

.
 This characterization will also be useful when describing Stackelberg equilibri
a in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Optimal-Stackelberg-strategies"

\end_inset

.
\end_layout

\begin_layout Subsection
Computational complexity of finding best Nash equilibria
\end_layout

\begin_layout Standard
In this section, we present a very simple algorithm for finding 
\begin_inset Formula $\BestNashEq{\NLinks}{\qdemand}$
\end_inset

, the best Nash equilibrium of a network instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

 and then show the running time to be in 
\begin_inset Formula $O\left(\NLinks^{2}\right)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "../algo.raw"
lstparams "mathescape"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Best Nash Equilibrium
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "alg:bestNE"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
A: you need to give the context of alg.
 1
\end_layout

\end_inset

We first note from Algorithm 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:bestNE"

\end_inset

 that from the definition of 
\begin_inset Formula $\cffFlow ij$
\end_inset

, we can precompute 
\begin_inset Formula $\cffFlow ij\forall(i,j)\in\NLinks\times\NLinks$
\end_inset

 in 
\begin_inset Formula $O\left(\NLinks^{2}\right)$
\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
A: OK This computation needs to be clarified in context
\end_layout

\end_inset

.
 The subroutine 
\begin_inset Formula $ $
\end_inset


\begin_inset Formula $freeFlowConfig$
\end_inset

 runs in 
\begin_inset Formula $O\left(\NLinks\right)$
\end_inset

 time.
 Finally, for each loop of the 
\begin_inset Formula $bestNE$
\end_inset

 outer routine (with 
\begin_inset Formula $\NLinks$
\end_inset

 iterations), the running time is a constant plus the running time of 
\begin_inset Formula $freeFlowConfig$
\end_inset

.
 Therefore, the overall running time of the algorithm is 
\begin_inset Formula $O(\NLinks^{2})+\NLinks O(\NLinks)=O(\NLinks^{2})$
\end_inset

.
\end_layout

\begin_layout Section
Social Optima
\end_layout

\begin_layout Standard
Consider an instance 
\begin_inset Formula $(N,\qdemand)$
\end_inset

 where the flow demand 
\begin_inset Formula $r$
\end_inset

 does not exceed the maximum capacity of the network 
\begin_inset Formula $r\leq\sum_{n}\flow[\link]^{\max}$
\end_inset

.
 Since the total cost function is 
\begin_inset Formula $C(\mass)=\sum_{n}\Length[\link]\mass[\link]$
\end_inset

, the social optimum of the network is a solution to the following optimization
 problem, 
\begin_inset Formula $\textit{Social Optimum }(SO)$
\end_inset

 
\begin_inset Formula 
\begin{flalign*}
\underset{\flow,\Mode}{\text{minimize}} & \sum_{n}\flow[n]l_{n}(\flow[n],\Mode[n])\\
\text{subject to} & \sum_{n}\flow[\link]=r\\
 & \flow[n]\in[0,\flowMax[n]]
\end{flalign*}

\end_inset


\end_layout

\begin_layout Standard
The objective function is non-convex.
 However, we show that the solutions to this optimization problem are necessaril
y in free-flow (
\begin_inset Formula $\Mode=0$
\end_inset

), thus the social optimum can be computed by solving an equivalent linear
 program.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lemma:socialOpt_is_ff"

\end_inset

 
\begin_inset Formula $(x^{*},\Mode^{*})$
\end_inset

 is optimal for 
\begin_inset Formula $(SO)$
\end_inset

 only if 
\begin_inset Formula $\Mode[i]{}^{*}=0\quad\forall i\in\left\{ 1,\ldots,\NLinks\right\} $
\end_inset

 
\end_layout

\begin_layout Proof
This follows immediately from the fact the latency on a link in congestion
 is always greater than the latency of the link in free-flow 
\begin_inset Formula $l_{n}(\flow[n],1)\geq l_{n}(\flow[n],0)$
\end_inset

 
\begin_inset Formula $\forall\flow[n]\in[0,\flowMax[n]]$
\end_inset

.
\end_layout

\begin_layout Subsection
Simple characterization of social optima
\end_layout

\begin_layout Standard
As a consequence of the previous Lemma, and using the fact that the latency
 is constant in free-flow 
\begin_inset Formula $l_{n}(\flow[n],0)=\parA[n]$
\end_inset

, the social optimum can be computed by solving the following equivalent
 linear program 
\begin_inset Formula 
\begin{alignat*}{1}
\underset{\flow}{\text{minimize}} & \sum_{n}\flow[n]\parA[n]\\
\text{subject to } & \sum_{n}\flow[\link]=r\\
 & \flow[n]\in[0,\flowMax[n]]
\end{alignat*}

\end_inset


\end_layout

\begin_layout Standard
Then since the links are ordered by increasing free-flow latency 
\begin_inset Formula $a_{1}\leq\dots\leq a_{N}$
\end_inset

, the social optimum is simply given by the assignment that saturates most
 efficient links first.
 Formally, if 
\begin_inset Formula $k_{0}=\max\{k|r>\sum_{n=1}^{k}x_{n}^{\max}\}$
\end_inset

 then the social optimal assignment 
\begin_inset Formula $x^{*}$
\end_inset

 is given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\flow^{*}=(\flowMax[1],\dots,\flowMax[k_{0}],\qdemand-\sum_{n=1}^{k_{0}}\flowMax[n],0,\dots,0)\label{eq:so}
\end{align}

\end_inset


\end_layout

\begin_layout Section
Price of Stability on a Two-Link Network
\end_layout

\begin_layout Standard
In this section, we characterize the loss of efficiency of Nash equilibria
 by comparing them to the social optimum on a simple two-link parallel network.
 To characterize the loss of efficiency of Nash equilibria several metrics
 have been used including Price of Anarchy 
\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2004bounding,roughgarden2002bad"

\end_inset

 and Price of Stability 
\begin_inset CommandInset citation
LatexCommand cite
key "koutsoupias1999worst"

\end_inset

.
 The Price of Anarchy is defined as the ratio between the cost of the worst
 Nash equilibrium and the the social optimum cost, while the Price of Stability
 is defined as the ratio between the best Nash equilibrium and the social
 optimum cost.
 For the case of non-decreasing latency functions, the Price of Anarchy
 and the Price of Stability coincide since all Nash equilibria have the
 same cost by the essential uniqueness property
\begin_inset Note Note
status open

\begin_layout Plain Layout
add reference for the essential uniqueness property
\end_layout

\end_inset

.
 Since we focus our analysis on the best Nash equilibrium, we use as a metric
 the Price of Stability.
\end_layout

\begin_layout Standard
Consider a network instance 
\begin_inset Formula $(2,r)$
\end_inset

 such that 
\begin_inset Formula $\parA[1]<\parA[2]$
\end_inset

 and 
\begin_inset Formula $\flowMax[2]+\cffFlow 12>\flowMax[1]$
\end_inset

.
 Let 
\begin_inset Formula $\BestNashEq 2{\qdemand}=\left(\flow[\text{BNE}](r),\Mode[\text{BNE}](r)\right)$
\end_inset

 be the best Nash equilibrium and 
\begin_inset Formula $\left(x_{\text{SO}}(r),0\right)$
\end_inset

 be the social optimum, as defined by 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:so"

\end_inset

.
 The Price of Stability is then defined as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\POS Nr=\frac{\Latency\left(\flow[\text{BNE}](r),\Mode[\text{BNE}](r)\right)}{\Latency\left(\flow[\text{SO}],0\right)}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Alex: is it contingent on 
\begin_inset Formula $r\leq\sum\flowMax[n]$
\end_inset


\end_layout

\end_inset

From the analysis of 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:so"

\end_inset

 and Algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:bestNE"

\end_inset

, we only need to consider the following two cases:
\end_layout

\begin_layout Paragraph
Case 1: 
\begin_inset Formula $0\le\qdemand\le\flowMax[1]$
\end_inset

:
\end_layout

\begin_layout Standard
Using 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:so"

\end_inset

, we have 
\begin_inset Formula $k_{0}=0$
\end_inset

, and all the demand will be on link 1 in free flow.
 Similarly, from Theorem 
\begin_inset CommandInset ref
LatexCommand formatted
reference "theorem:minsupport"

\end_inset

 we have that since link 1 can accomodate 
\begin_inset Formula $\qdemand$
\end_inset

 in free flow and the support cannot be smaller than a single link, then
 
\begin_inset Formula $\BestNashEq 2{\qdemand}$
\end_inset

 has all flow demand on link 1 in free flow, and is equivalent to the social
 optimum.
 This is depicted in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "fig:ff"

\end_inset

.
 In this case, the Price of Stability is equal to 1, i.e there is no drop
 in efficiency due to selfish routing.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/freeflow.pdf
	height 3in

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Flow configuration when demand is under the capacity of the fastest link.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:ff"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
\begin_inset Note Note
status open

\begin_layout Plain Layout
Alex: explain in the caption what you see in the figure.
 Figure: replace Link 1 with latency of link 1.
 Figure not pretty (different fonts)
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Case 2: 
\begin_inset Formula $\qdemand>\flowMax[1]$
\end_inset

:
\end_layout

\begin_layout Standard
We know that all flow demand cannot be accomodated by link 1, and the results
 become more interesting.
 From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:so"

\end_inset

, the social optimum assignment is given by 
\begin_inset Formula $x_{SO}(r)=(\flowMax[1],\qdemand-\flowMax[1])$
\end_inset

.
 From Theorem 
\begin_inset CommandInset ref
LatexCommand formatted
reference "theorem:minsupport"

\end_inset

 we have that 
\begin_inset Formula $\BestNashEq 2{\qdemand}$
\end_inset

 has a single link in free flow.
 Since the total demand exceeds the capacity of link 
\begin_inset Formula $1$
\end_inset

, then link 2 is in free flow, and link 1 is congested.
 Therefore 
\begin_inset Formula $\Mode[NE](r)=(1,0)$
\end_inset

.
 From Algorithm 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:bestNE"

\end_inset

, the corresponding flow 
\begin_inset Formula $\flow[\text{NE}](r)$
\end_inset

 will be 
\begin_inset Formula $(\cffFlow 12,\qdemand-\cffFlow 12)$
\end_inset

 (where we also tacitely assume that 
\begin_inset Formula $\flowMax[2]\ge\qdemand-\cffFlow 12$
\end_inset

).
 The comparison of the social optimum and Nash equilibrium conditions are
 depicted in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:sone"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/socialopplot.pdf
	width 3.5in
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Social optimum
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/neplot.pdf
	width 3.5in
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Nash equilibrium
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Differences in flow assignments between social optimum and Nash equilibrium
 when first link is beyond capacity.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:sone"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Computing the Price of Stability when 
\begin_inset Formula $\qdemand>\flowMax[1]$
\end_inset

 reveals where the inefficiencies lie in the Nash equilibrium
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\POS 2r & = & \frac{\parA[2]\cffFlow 12+\parA[2]\left(\qdemand-\cffFlow 12\right)}{\parA[1]\flowMax[1]+\parA[2]\left(\qdemand-\flowMax[1]\right)}\\
 & = & \frac{\parA[2]\qdemand}{\qdemand\parA[2]-\flowMax[1]\left(\parA[2]-\parA[1]\right)}\\
 & = & \frac{1}{1-\frac{\flowMax[1]}{\qdemand}\left(1-\frac{\parA[1]}{\parA[2]}\right)}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
First, we note that as 
\begin_inset Formula $\parA[2]\rightarrow\parA[1]$
\end_inset

, the Price of Stability goes to 1.
 Intuitively, what this says is that inefficiencies in Nash equilibrium
 can be directly attributed to the difference in free-flow latency between
 the links.
 As the differences in free flow latency increases, so will the Price of
 Stability.
 Additionally, as the demand 
\begin_inset Formula $r\geq\flowMax[1]$
\end_inset

 increases, the Price of Stability decreases.
 This occurs because the absolute difference in total latency between social
 optimum and Nash equilibrium is constant for 
\begin_inset Formula $r\geq\flowMax[1]$
\end_inset

.
 Note the discontinuity in total latency for Nash equilibrium that occurs
 when demand exceeds the capacity of the first link (
\begin_inset Formula $\qdemand>\flowMax[1]$
\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Alex: Rephrase in non-transportation network.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
What we can conclude from the Price of Stability analysis of the two-link
 case is that selfish routing is most costly in the demand region where
 a free flow link is near capacity.
 If a controller were to anticipate a scenario where demand was slightly
 above this capacity, they could dramatically reduce the inefficiency of
 the Nash equilibrium by rerouting a small fraction of the flow.
\end_layout

\begin_layout Section
Stackelberg routing
\end_layout

\begin_layout Standard
In order to reduce the inefficiency of the network, we assume that a fraction
 of the flow is centrally controlled, and we investigate possible strategies
 for improving the equilibria of the network.
 Leader-follower routing games have been considered in the transportation
 literature 
\begin_inset CommandInset citation
LatexCommand cite
key "harker1988multiple,haurie1985relationship"

\end_inset

 and more recently 
\begin_inset CommandInset citation
LatexCommand cite
key "aswani2011game,joksimovicdifferent"

\end_inset

.
 The previous literature does not consider a decrease in flow on a link
 as a result of density buildup, while the work presented here considers
 the more-realistic modeling assumptions made in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:The-Model"

\end_inset

.
\end_layout

\begin_layout Subsection
Stackelberg strategy
\end_layout

\begin_layout Standard
We consider the following problem: given a network under constant flow demand
 
\begin_inset Formula $r$
\end_inset

, assume a coordinator (a central authority) has control over a fraction
 
\begin_inset Formula $\beta$
\end_inset

 of the flow: the corresponding agents are 
\emph on
compliant
\emph default
 and willing to change their routing according to the instructions they
 are given.
 The coordinator (who plays the role of the leader in the Stackelberg game)
 assigns the compliant flow 
\begin_inset Formula $\beta r$
\end_inset

 according to a Stackelberg strategy 
\begin_inset Formula $s$
\end_inset

 that is a feasible flow assignment for instance 
\begin_inset Formula $(\NLinks,\beta\qdemand)$
\end_inset

, i.e.
 
\begin_inset Formula $s$
\end_inset

 satisfies the followin relations: 
\begin_inset Formula 
\begin{align*}
\cFlow[\link]\leq\flow[\link]^{\max}\,\forall n &  & \sum_{n}\cFlow[\link]=\beta r
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
We assume that the remaining flow 
\begin_inset Formula $(1-\beta)r$
\end_inset

 represents selfish players (who play the role of followers in the Stackelberg
 game), who will choose their routes after the Stackelberg strategy 
\begin_inset Formula $s$
\end_inset

 is revealed.
 This induces an assignment 
\begin_inset Formula $(\ncFlow(\cFlow),m(\cFlow))$
\end_inset

 of the selfish flow at Nash equilibrium, and we assume that the assignment
 
\begin_inset Formula $s$
\end_inset

 of compliant agents 
\emph on
is not affected
\emph default
 after introducing the non-compliant flow on the network.
 Since 
\begin_inset Formula $s$
\end_inset

 may induce multiple Nash equilibria, we define the assignment 
\begin_inset Formula $(t(s),m(s))$
\end_inset

 to be the best such equilibrium.
\end_layout

\begin_layout Standard
To characterize this Nash equilibrium, which we refer to as the 
\emph on
induced equilibrium
\emph default
 by strategy 
\begin_inset Formula $s$
\end_inset

, we note that the flow on link 
\begin_inset Formula $n$
\end_inset

 is simply 
\begin_inset Formula $\cFlow[\link]+\ncFlow[\link](\cFlow)$
\end_inset

, and we have for all 
\begin_inset Formula $n$
\end_inset

: 
\begin_inset Formula 
\[
\ncFlow[\link](\cFlow)>0\Rightarrow\forall k,\latency[\link]\left(\cFlow[\link]+\ncFlow[\link](\cFlow),\Mode[\link](\cFlow)\right)\leq\latency[k]\left(\cFlow[k]+\ncFlow[k](\cFlow),\Mode[k](\cFlow)\right)
\]

\end_inset

 and bBy 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:nash_eq"

\end_inset

, all links that are in the support of the selfish flow assignment 
\begin_inset Formula $t(s)$
\end_inset

 have a common latency 
\begin_inset Formula $\latency[0]$
\end_inset

 in the induced equilibrium, and links that are not in the support have
 latency greater than or equal to 
\begin_inset Formula $\latency[0]$
\end_inset

.
\end_layout

\begin_layout Standard
This can be summarized in the following definition of a Stackelberg strategy
 for instance 
\begin_inset Formula $(\NLinks,r,\beta)$
\end_inset

 of a network with 
\begin_inset Formula $\NLinks$
\end_inset

 links under flow demand 
\begin_inset Formula $r$
\end_inset

, and fraction of compliance 
\begin_inset Formula $\beta$
\end_inset

.
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:stack"

\end_inset

A Stackelberg strategy for instance 
\begin_inset Formula $(\NLinks,r,\beta)$
\end_inset

 is an assignment 
\begin_inset Formula $s$
\end_inset

 of the compliant flow 
\begin_inset Formula $\beta r$
\end_inset

 that is feasible for the instance 
\begin_inset Formula $(\NLinks,\beta\qdemand)$
\end_inset

, and which induces best Nash equilibrium 
\begin_inset Formula $(\ncFlow(\cFlow),m(\cFlow))$
\end_inset

 of the non-compliant flow such that 
\begin_inset Formula $s+t(s)$
\end_inset

 is feasible for instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

 and 
\begin_inset Formula 
\begin{align*}
\forall n\in\Supp{\ncFlow(\cFlow)},\, & \latency[\link]\left(\cFlow[\link]+\ncFlow[\link](\cFlow),\Mode[\link](\cFlow)\right)=\latency[0]\\
\forall n\notin\Supp{\ncFlow(\cFlow)},\, & \latency[\link]\left(\cFlow[\link],\Mode[\link](\cFlow)\right)\geq\latency[0]
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
This extends the definition usually used in the congestion games literature,
 see for example 
\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2001stackelberg"

\end_inset


\end_layout

\begin_layout Standard
We will denote by 
\begin_inset Formula $\text{S}(\NLinks,r,\beta)\subset\mathbb{{R}}^{\NLinks}$
\end_inset

 the set of Stackelberg strategies for network instance 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $(\NLinks,r,\beta)$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
.
\end_layout

\begin_layout Subsection
Example of a feasible assignment that is not a Stackelberg strategy
\end_layout

\begin_layout Standard
Note that a feasible flow assignment 
\begin_inset Formula $s$
\end_inset

 of compliant flow may fail to induce a pure Nash equilibrium 
\begin_inset Formula $(t,m)$
\end_inset

.
\end_layout

\begin_layout Standard
To see this, consider the following 2-link network where such that link
 
\begin_inset Formula $1$
\end_inset

 is faster 
\begin_inset Formula $\parA[1]<\parA[2]$
\end_inset

 and has larger capacity 
\begin_inset Formula $\flow[1]^{\max}>\flow[2]^{\max}$
\end_inset

.
 Now assume that the network is subject to flow demand 
\begin_inset Formula $r=\flow[1]^{\max}+\epsilon$
\end_inset

 and most of the flow is compliant 
\begin_inset Formula $\beta r=\flow[1]^{\max}$
\end_inset

.
 Consider the following assignment: 
\begin_inset Formula $s=(\flow[1]^{\max},0)$
\end_inset

.
\end_layout

\begin_layout Standard
Assuming that the assignment of compliant agents is not affected by introducing
 the non-compliant flow, we have for any assignment 
\begin_inset Formula $t$
\end_inset

 of non-compliant flow, 
\begin_inset Formula $t_{1}=0$
\end_inset

 and 
\begin_inset Formula $t_{2}>0$
\end_inset

.
 Therefore 
\begin_inset Formula $t$
\end_inset

 is not at Nash equilibrium since 
\begin_inset Formula $\Supp t=\{2\}$
\end_inset

 and 
\begin_inset Formula $\latency[2](s_{2}+t_{2},\Mode[2])>\latency[1](s_{1},0)$
\end_inset

 (non compliant agents are forced to use less efficient link 2).
\end_layout

\begin_layout Subsection
Characterization of the induced Nash Equilibrium
\end_layout

\begin_layout Standard
We next show that the induced Nash equilibrium has one link in free-flow:
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lemma:inducedNCeq"

\end_inset

Let 
\begin_inset Formula $s\in\StackSet$
\end_inset

 be a Stackelberg strategy for network instance 
\begin_inset Formula $(\NLinks,r,\beta)$
\end_inset

, and 
\begin_inset Formula $(t(s),m(s))$
\end_inset

 its induced best Nash equilibrium.
 Then 
\begin_inset Formula $\Mode[\max\Supp{t(s)}]=0$
\end_inset

.
\end_layout

\begin_layout Standard
In other words, the last link in the support of 
\begin_inset Formula $t(s)$
\end_inset

 is in free-flow.
\end_layout

\begin_layout Proof
Note that 
\begin_inset Formula $t(s)$
\end_inset

 is an assignment at Nash for instance 
\begin_inset Formula $(N,\beta r)$
\end_inset

 and latencies
\begin_inset Formula 
\begin{align*}
\tilde{{l}}_{n}:[0,\flowMax[n]-s_{n}]\times\left\{ 0,1\right\}  & \longrightarrow\mathbb{{R}}_{+}\\
(\flow[n],\Mode[n]) & \longmapsto l_{n}(s_{n}+\flow[n],\Mode[n])
\end{align*}

\end_inset

by Theorem
\begin_inset CommandInset ref
LatexCommand formatted
reference "theorem:minsupport"

\end_inset

, we immediately have 
\begin_inset Formula $\Mode[\max\Supp{t(s)}]=0$
\end_inset

.
\end_layout

\begin_layout Subsection
Optimal Stackelberg strategies
\begin_inset CommandInset label
LatexCommand label
name "sec:Optimal-Stackelberg-strategies"

\end_inset


\end_layout

\begin_layout Standard
In this section we solve for optimal Stackelberg strategies, i.e.
 Stackelberg strategies that induce Nash equilibria of minimal cost.
 This is described by the following optimization problem 
\begin_inset Formula 
\begin{align*}
\min_{s\in\StackSet}C\left(s+\ncFlow(\cFlow),m(\cFlow)\right)
\end{align*}

\end_inset

 where 
\begin_inset Formula $s$
\end_inset

 is a Stackelberg strategy and 
\begin_inset Formula $(\ncFlow(\cFlow),m(\cFlow))$
\end_inset

 is the non-compliant flow assignment at the equilibrium induced by 
\begin_inset Formula $s$
\end_inset

.
\end_layout

\begin_layout Standard
We define an optimal Stackelberg strategy 
\begin_inset Formula $s^{*}$
\end_inset

 to be a solution to the optimization problem 
\begin_inset Formula 
\begin{align*}
s^{*}=\arg\min_{s\in\StackSet}C\left(s+\ncFlow(\cFlow),m(\cFlow)\right)
\end{align*}

\end_inset

 and a Stackelberg equilibrium to be the Nash equilibrium 
\begin_inset Formula $(\ncFlow(s^{*}),m(s^{*}))$
\end_inset

 induced by optimal strategy 
\begin_inset Formula $s*$
\end_inset

.
\end_layout

\begin_layout Section
Computing the optimal Stackelberg strategy
\end_layout

\begin_layout Standard
In this section, we show the following result: the optimal Stackelberg strategy
 can be computed in polynomial time for parallel networks with 
\begin_inset Formula $N$
\end_inset

 links for the class of congestion functions defined in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:latency_class"

\end_inset

.
 This result contrasts with the class of non-decreasing latency functions
 where the optimal Stackelberg strategy is shown to be NP-hard to compute,
 see
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2001stackelberg"

\end_inset

.
\end_layout

\begin_layout Standard
The optimal Stackelberg strategy in our case corresponds to:
\end_layout

\begin_layout Itemize
First computing the best Nash equilibrium of non-compliant users alone,
 
\begin_inset Formula $(\bar{t},\bar{m)}=\BestNashEq N{(1-\beta)r}$
\end_inset


\end_layout

\begin_layout Itemize
Then assigning the compliant flow by filling the remaining links, i.e.
 those that are not congested under 
\begin_inset Formula $(\bar{t},\bar{m})$
\end_inset

, up to maximum capacity, starting with the faster links.
 
\end_layout

\begin_layout Standard
Intuitively, the best induced Nash equilibrium 
\begin_inset Formula $t(s)$
\end_inset

 of any Stackelberg strategy 
\begin_inset Formula $s$
\end_inset

 will be more congested than the best Nash equilibrium 
\begin_inset Formula $(\bar{t},\bar{\Mode})$
\end_inset

 of instance 
\begin_inset Formula $(\NLinks,(1-\beta)r)$
\end_inset

 (when the non-compliant flow is is the only flow on the network).
 So if we can find a strategy 
\begin_inset Formula $\bar{s}$
\end_inset

 that induces equilibrium 
\begin_inset Formula $(\bar{t},\bar{\Mode})$
\end_inset

 and that has minimal cost, then one expects this strategy to be optimal.
 Next, we detail this idea by defining a candidate Stackelberg strategy
 
\begin_inset Formula $\bar{s}$
\end_inset

 that will later be shown to be optimal.
\end_layout

\begin_layout Standard
We first introduce a definition that will be useful in proving the main
 result.
 Consider a network under feasible flow assignment 
\begin_inset Formula $(\flow,\Mode)$
\end_inset

.
 A link 
\begin_inset Formula $n$
\end_inset

 is said to be 
\emph on
exactly
\emph default
 
\begin_inset Formula $i$
\end_inset


\emph on
-congested
\emph default
 if it is congested 
\begin_inset Formula $(\Mode[n]=1)$
\end_inset

 and its latency is exactly 
\begin_inset Formula $\parA[i]$
\end_inset

.
 It is said to be 
\emph on
at least 
\emph default

\begin_inset Formula $i$
\end_inset


\emph on
-congested
\emph default
 (
\begin_inset Formula $i\geq n+1$
\end_inset

) if 
\begin_inset Formula $n$
\end_inset

 is congested and its latency is at least 
\begin_inset Formula $\parA[i]$
\end_inset

.
\end_layout

\begin_layout Definition
Link 
\begin_inset Formula $n$
\end_inset

 is exactly 
\begin_inset Formula $i$
\end_inset

-congested (
\begin_inset Formula $i\geq n+1$
\end_inset

) under assignment 
\begin_inset Formula $(\flow,\Mode)$
\end_inset

 if 
\begin_inset Formula 
\begin{align*}
\Mode[n] & =1\\
l_{n}(\flow[n],\Mode[n]) & =\parA[i]
\end{align*}

\end_inset

 which is equivalent to 
\begin_inset Formula 
\begin{align*}
\Mode[n] & =1\\
\flow[n] & =\cffFlow ni
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Note that in a network under best Nash assignment 
\begin_inset Formula $(t,\Mode)$
\end_inset

, if 
\begin_inset Formula $i=\max\Supp t$
\end_inset

, then all links 
\begin_inset Formula $n\in\{1,\dots,i-1\}$
\end_inset

 are exactly 
\begin_inset Formula $i$
\end_inset

-congested.
\end_layout

\begin_layout Definition
Link 
\begin_inset Formula $n$
\end_inset

 is at least 
\begin_inset Formula $i$
\end_inset

-congested (
\begin_inset Formula $i\geq n+1$
\end_inset

) under assignment 
\begin_inset Formula $(\flow,\Mode)$
\end_inset

 if 
\begin_inset Formula 
\begin{align*}
\Mode[n] & =1\\
l_{n}(\flow[n],\Mode[n]) & \geq\parA[i]
\end{align*}

\end_inset

 which is equivalent to 
\begin_inset Formula 
\begin{align*}
\Mode[n] & =1\\
\flow[n] & \leq\cffFlow ni
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Note that if 
\begin_inset Formula $j\geq i\geq n+1$
\end_inset

, then if link 
\begin_inset Formula $n$
\end_inset

 is at least 
\begin_inset Formula $j$
\end_inset

-congested under 
\begin_inset Formula $(x,m)$
\end_inset

, then it is also at least 
\begin_inset Formula $i$
\end_inset

-congested under 
\begin_inset Formula $(x,\Mode)$
\end_inset

.
\end_layout

\begin_layout Subsection
A candidate Stackelberg strategy: Non-Compliant First
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $(\bar{t},\bar{m})$
\end_inset

 denote the best Nash equilibrium for the instance 
\begin_inset Formula $(\NLinks,(1-\beta)\qdemand)$
\end_inset

.
 Let 
\begin_inset Formula $k=\max\Supp{\bar{t}}$
\end_inset

.
 We have
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\bar{m}=(1,\dots,1,\stackrel{k}{0},\dots,0)
\]

\end_inset

 and 
\begin_inset Formula 
\[
\bar{t}=\left(\cffFlow 1k,\dots,\cffFlow{k-1}k,(1-\beta)\qdemand-\sum_{n=1}^{k-1}\cffFlow nk,0,\dots,0\right)
\]

\end_inset


\end_layout

\begin_layout Standard
i.e.
 links 
\begin_inset Formula $\{1,\dots,k-1\}$
\end_inset

 are 
\begin_inset Formula $k$
\end_inset

-congested, and link 
\begin_inset Formula $k$
\end_inset

 is in free-flow.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:optimal_stackelberg_nc"

\end_inset

 shows the assignment at Nash equilibrium 
\begin_inset Formula $(\bar{t},\bar{\Mode})$
\end_inset

 on a sample network, where the latency in congestion 
\begin_inset Formula $l_{n}(x_{n},1)$
\end_inset

 is taken to be affine for simplicity.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/optimal_stackelberg2.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Best Nash equilibrium 
\begin_inset Formula $(\bar{t},\bar{\Mode})$
\end_inset

 of non-compliant flow 
\begin_inset Formula $(1-\beta)r$
\end_inset

.
 All links in the support 
\begin_inset Formula $\left\{ 1,\dots,k\right\} $
\end_inset

 have the same latency 
\begin_inset Formula $a_{k}$
\end_inset

.
 Links 
\begin_inset Formula $\left\{ 1,\dots k-1\right\} $
\end_inset

 are exactly 
\begin_inset Formula $k$
\end_inset

-congested, and link 
\begin_inset Formula $k$
\end_inset

 is in free-flow.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:optimal_stackelberg_nc"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Now define Stackelberg strategy 
\begin_inset Formula $\bar{s}$
\end_inset

 as the optimal assignment of compliant flow 
\begin_inset Formula $\beta\qdemand$
\end_inset

 that induces equilibrium 
\begin_inset Formula $(\bar{t},\bar{m})$
\end_inset

.
 It is easy to see that 
\begin_inset Formula $\bar{s}$
\end_inset

 is simply given by assigning the compliant flow to remaining links 
\begin_inset Formula $\{k,k+1,\dots,\NLinks\}$
\end_inset

 successively, each up to maximum capacity.
 The strategy 
\begin_inset Formula $\bar{s}$
\end_inset

 will assign 
\begin_inset Formula $\flowMax[k]-t_{k}$
\end_inset

 on link 
\begin_inset Formula $k$
\end_inset

, then 
\begin_inset Formula $\flowMax[k+1]$
\end_inset

 on link 
\begin_inset Formula $k+1$
\end_inset

, 
\begin_inset Formula $\flowMax[k+2]$
\end_inset

 on link 
\begin_inset Formula $k+2$
\end_inset

 and so on.
 Let 
\begin_inset Formula $l=\min\{n|\beta\qdemand-(\sum_{n=k}^{l-1}\flowMax[n]-t_{k})\geq0\}$
\end_inset

 be the least efficient link used by the Stackelberg assignment.
 Then 
\begin_inset Formula $\bar{s}$
\end_inset

 is given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\bar{s}=\left(0,\dots,\stackrel{k-1}{0},\flowMax[k]-\bar{t}_{k},\flowMax[k+1],\dots,\flowMax[l-1],\beta\qdemand-(\sum_{n=k}^{l-1}\flowMax[n]-t_{k}),\stackrel{l+1}{0},\dots,0\right)\label{eq:opt_stack_strategy}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Equivalently, the total assignment 
\begin_inset Formula $\bar{x}=\bar{s}+\bar{t}$
\end_inset

 is given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\bar{x}=\left(\cffFlow 1k,\dots,\cffFlow{k-1}k,\flowMax[k],\flowMax[k+1],\dots,\flowMax[l-1],\qdemand-\sum_{n=1}^{k-1}\cffFlow nk-\sum_{n=k}^{l-1}\flowMax[n],\stackrel{l+1}{0},\dots,0\right)\label{eq:opt_stack_flows}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
and the corresponding latencies are
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\bar{l}=\left(\parA[k],\dots,\parA[k],\parA[k+1],\dots,\parA[l],\stackrel{l+1}{0},\dots,0\right)\label{eq:opt_stack_latencies}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/optimal_stackelberg1.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Equilibrium induced by candidate Stackelberg strategy 
\begin_inset Formula $\bar{s}$
\end_inset

.
 Flows that correspond to the Stackelberg strategy 
\begin_inset Formula $\bar{s}$
\end_inset

 are highlighted.
 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:optimal_stackelberg_total"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:optimal_stackelberg_total"

\end_inset

 shows the total flow 
\begin_inset Formula $\bar{x}_{n}=\bar{s}_{n}+\bar{t}_{n}$
\end_inset

 on each link.
 Links 
\begin_inset Formula $\left\{ 1,\dots,k-1\right\} $
\end_inset

 are exactly 
\begin_inset Formula $k$
\end_inset

-congested, links 
\begin_inset Formula $\left\{ k,\dots,l-1\right\} $
\end_inset

 are in free-flow and at maximum capacity, and the remaining flow goes on
 link 
\begin_inset Formula $l$
\end_inset

.
\end_layout

\begin_layout Standard
In the next section we show that strategy 
\begin_inset Formula $\bar{s}$
\end_inset

 is indeed an optimal Stackelberg strategy.
\end_layout

\begin_layout Subsection
The Non-Compliant First strategy is optimal
\end_layout

\begin_layout Theorem
\begin_inset Formula $\bar{s}$
\end_inset

 is an optimal Stackelberg strategy.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{proof}
\end_layout

\end_inset

 Let 
\begin_inset Formula $s\in S(\NLinks,r,\beta)$
\end_inset

 be a Stackelberg strategy for instance 
\begin_inset Formula $(N,r,\beta)$
\end_inset

 and 
\begin_inset Formula $(t,\Mode)$
\end_inset

 be the best induced Nash equilibrium for the non-compliant flow.
 We will show that 
\begin_inset Formula $C(x,\Mode)\geq C(\bar{x},\bar{\Mode})$
\end_inset

, where 
\begin_inset Formula $x=s+t$
\end_inset

 and 
\begin_inset Formula $\bar{x}=\bar{s}+\bar{t}$
\end_inset

.
\end_layout

\begin_layout Standard
\noindent
The proof proceeds as follows: we first show that links 
\begin_inset Formula $\{1,\dots,l-1\}$
\end_inset

 are more congested under assignment 
\begin_inset Formula $(x,m)$
\end_inset

 than under 
\begin_inset Formula $(\bar{x},\bar{m})$
\end_inset

, in the following sense: these links have worse latency 
\begin_inset Formula 
\begin{align*}
\latency[n](x_{n},m_{n}) & \geq\latency[n](\bar{x}_{n},\bar{m}_{n}) & \forall n\in\{1,\dots,l-1\}
\end{align*}

\end_inset

 and hold less flow 
\begin_inset Formula 
\begin{align*}
x_{n} & \leq\bar{x}_{n} & \forall n\in\{1,\dots,l-1\}
\end{align*}

\end_inset

 Then we conclude by lower bounding the cost 
\begin_inset Formula $C(x,m)$
\end_inset

.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $k'=\max\Supp t$
\end_inset

 be the link with largest free-flow latency, in the support of the non-compliant
 flow.
 By Lemma 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lemma:inducedNCeq"

\end_inset

, we have 
\begin_inset Formula $\Mode[k']=0$
\end_inset

, i.e.
 link 
\begin_inset Formula $k'$
\end_inset

 is in free-flow under assignment 
\begin_inset Formula $(x,\Mode)$
\end_inset

.
 We start by showing that 
\begin_inset Formula $k'\geq k$
\end_inset

 where 
\begin_inset Formula $k=\max\Supp{\bar{t}}$
\end_inset


\end_layout

\begin_layout Lemma
The last link in the support of 
\begin_inset Formula $t$
\end_inset

 is less efficient than the last link in the support of 
\begin_inset Formula $\bar{t}$
\end_inset

.
 
\begin_inset Formula $k'\geq k$
\end_inset

 
\end_layout

\begin_layout Standard
Intuitively, since 
\begin_inset Formula $\bar{t}$
\end_inset

 is the best Nash equilibrium of the non-compliant agents when they are
 not sharing the network with any other flow, the assignment 
\begin_inset Formula $(\bar{t},\bar{\Mode})$
\end_inset

 will use more efficient links than any Nash assignment 
\begin_inset Formula $(t,\Mode)$
\end_inset

 of non-compliant agents when they are sharing the network with additional
 flow 
\begin_inset Formula $s$
\end_inset

.
 
\end_layout

\begin_layout Proof
First note that 
\begin_inset Formula $s+t$
\end_inset

 restricted to 
\begin_inset Formula $\Supp t$
\end_inset

 is at Nash equilibrium, and it is by definition the best such Nash equilibrium.
 Then since link 
\begin_inset Formula $k'$
\end_inset

 is in free-flow and 
\begin_inset Formula $k'\in\Supp t$
\end_inset

, the cost of this Nash equilibrium is simply 
\begin_inset Formula $r'a_{k'}$
\end_inset

 where 
\begin_inset Formula $r'=\sum_{n\in\Supp t}s_{n}+t_{n}$
\end_inset

 is the total flow restricted to 
\begin_inset Formula $\Supp t$
\end_inset

.
\end_layout

\begin_layout Proof
We have 
\begin_inset Formula $\bar{t}$
\end_inset

 is the best Nash equilibrium of flow 
\begin_inset Formula $(1-\beta)\qdemand$
\end_inset

 with cost 
\begin_inset Formula $(1-\beta)\qdemand a_{k}$
\end_inset

, and 
\begin_inset Formula $(1-\beta)r=\sum_{n\in\Supp t}t_{n}\leq\sum_{n\in\Supp t}s_{n}+t_{n}=r'$
\end_inset

.
 Then since the average cost of the best Nash equilibrium is increasing
 in the total flow, we have 
\begin_inset Formula 
\[
\frac{r'a_{k'}}{r'}\geq\frac{(1-\beta)ra_{k}}{(1-\beta)r}
\]

\end_inset

Therefore we must have 
\begin_inset Formula $a_{k'}\geq a_{k}$
\end_inset

, i.e.
 
\begin_inset Formula $k'\geq k$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
Using the lemma, we can now show that links 
\begin_inset Formula $\{1,\dots,l-1\}$
\end_inset

 are more congested under assignment 
\begin_inset Formula $(x,m)$
\end_inset

 than candidate assignment 
\begin_inset Formula $(\bar{x},\bar{m})$
\end_inset

.
\end_layout

\begin_layout Standard
We have from Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:stack"

\end_inset

 of a Stackelberg strategy and its induced equilibrium, 
\begin_inset Formula $\forall n\in\{1,\dots,k'-1\}$
\end_inset

, 
\begin_inset Formula $l_{n}(x_{n},m_{n})\geq l_{k'}(x_{k'},m_{k'})\geq a_{k'}$
\end_inset

, i.e.
 
\begin_inset Formula $\forall n\in\{1,\dots,k'-1\}$
\end_inset

, 
\begin_inset Formula $n$
\end_inset

 is at least 
\begin_inset Formula $k'$
\end_inset

-congested under assignment 
\begin_inset Formula $(x,m)$
\end_inset

.
 We also have by 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:opt_stack_latencies"

\end_inset

 
\begin_inset Formula $\forall n\in\{1,\dots,k-1\}$
\end_inset

, 
\begin_inset Formula $n$
\end_inset

 is exactly 
\begin_inset Formula $k$
\end_inset

-congested under assignment 
\begin_inset Formula $(\bar{x},\bar{m})$
\end_inset

.
 Thus using the fact that 
\begin_inset Formula $k'\geq k$
\end_inset

 
\begin_inset Formula 
\begin{align*}
l_{n}(x_{n},m_{n}) & \geq a_{k'}\geq a_{k}=l_{n}(\bar{x}_{n},\bar{m}_{n}) & \forall n\in\{1,\dots,k-1\}\\
x_{n} & \leq\cffFlow n{k'}\leq\cffFlow nk=\bar{x}_{n} & \forall n\in\{1,\dots,k-1\}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
and we have from 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:opt_stack_flows"

\end_inset

 that 
\begin_inset Formula $\forall n\in\{k,\dots,l-1\}$
\end_inset

, 
\begin_inset Formula $n$
\end_inset

 is in free flow and at maximum capacity under assignment 
\begin_inset Formula $(\bar{x},\bar{m})$
\end_inset

 (i.e.
 
\begin_inset Formula $\bar{x}_{n}=\flowMax[n]$
\end_inset

 and 
\begin_inset Formula $l_{n}(\bar{x}_{n})=a_{n}$
\end_inset

).
 Thus 
\begin_inset Formula 
\begin{align*}
l_{n}(x_{n},m_{n}) & \geq a_{n}=l_{n}(\bar{x}_{n},\bar{m}_{n}) & \forall n\in\{k,\dots,l-1\}\\
x_{n} & \leq\flowMax[n]=\bar{x}_{n} & \forall n\in\{k,\dots,l-1\}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Therefore we have
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
l_{n}(x_{n},m_{n}) & \geq l_{n}(\bar{x}_{n},\bar{m}_{n}) & \forall n\in\{1,\dots,l-1\}\label{eq:cong_latency}\\
x_{n} & \leq\bar{x}_{n} & \forall n\in\{1,\dots,l-1\}\label{eq:cong_flow}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
Note that 
\begin_inset Formula $\forall n\in\{1,\dots,k\}$
\end_inset

, 
\begin_inset Formula $l_{n}(\bar{x}_{n},\bar{m}_{n})=a_{k}\leq a_{l}$
\end_inset

, and 
\begin_inset Formula $\forall n\in\{k,\dots,l-1\}$
\end_inset

, 
\begin_inset Formula $l_{n}(\bar{x}_{n},\bar{m}_{n})=a_{n}\leq a_{l}$
\end_inset

, thus we have 
\begin_inset Formula 
\begin{align}
l_{n}(\bar{x}_{n},\bar{m}_{n}) & \leq a_{l} & \forall n\in\{1,\dots,l-1\}\label{eq:cong_latencybar}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
Also note that links 
\begin_inset Formula $n\in\{l,\dots,N\}$
\end_inset

 have latency at least 
\begin_inset Formula $a_{n}$
\end_inset

 (the latency on a link is always greater than the free-flow latency) and
 
\begin_inset Formula $a_{n}\geq a_{l}$
\end_inset

, thus
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
l_{n}(x_{n},m_{n}) & \geq a_{l} & \forall n\in\{l,\dots,N\}\label{eq:ff_latency}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
We can now lower-bound the cost of the assignment 
\begin_inset Formula $(x,m)$
\end_inset

 where 
\begin_inset Formula $x=s+t$
\end_inset

 and 
\begin_inset Formula $(t,m)$
\end_inset

 is the best Nash equilibrium induced by 
\begin_inset Formula $s$
\end_inset

.
 For conciseness, we use 
\begin_inset Formula $l_{n}$
\end_inset

 as a shorthand for 
\begin_inset Formula $l_{n}(x_{n},m_{n})$
\end_inset

 and 
\begin_inset Formula $\bar{l}_{n}$
\end_inset

 as a shorthand for 
\begin_inset Formula $l_{n}(\bar{x}_{n},\bar{m}_{n})$
\end_inset

.
 We have
\begin_inset Formula 
\begin{align*}
C(x,m)-C(\bar{x},\bar{m}) & =\sum_{n=1}^{N}x_{n}l_{n}-\sum_{n=1}^{l}\bar{x}_{n}\bar{l}_{n} & \text{since }\Supp{\bar{x}}=\{1,\dots,l\}\\
 & =\sum_{n=1}^{l-1}(x_{n}l_{n}-\bar{x}_{n}\bar{l}_{n})+\sum_{n=l}^{N}x_{n}l_{n}-\bar{x}_{l}a_{l} & \text{since }\bar{l}_{l}=a_{l}\\
 & \geq\sum_{n=1}^{l-1}(x_{n}l_{n}-\bar{x}_{n}\bar{l}_{n})+\sum_{n=l}^{N}x_{n}a_{l}-\bar{x}_{l}a_{l} & \text{using \eqref{eq:ff_latency}}\\
 & =\sum_{n=1}^{l-1}(x_{n}-\bar{x}_{n})l_{n}+\sum_{n=1}^{l-1}x_{n}(l_{n}-\bar{l}_{n})+\sum_{n=l}^{N}x_{n}a_{l}-\bar{x}_{l}a_{l}\\
 & \geq\sum_{n=1}^{l-1}(x_{n}-\bar{x}_{n})l_{n}+\sum_{n=l}^{N}x_{n}a_{l}-\bar{x}_{l}a_{l}\text{ } & \text{using \eqref{eq:cong_latency}}
\end{align*}

\end_inset

Then using 
\begin_inset Formula $\eqref{eq:cong_flow}$
\end_inset

 and 
\begin_inset Formula $\eqref{eq:cong_latencybar}$
\end_inset

 we have 
\begin_inset Formula $\forall n\in\{k,\dots,l-1\}$
\end_inset

, 
\begin_inset Formula $x_{n}-\bar{x}_{n}\geq0$
\end_inset

 and 
\begin_inset Formula $l_{n}\leq a_{l}$
\end_inset

, thus 
\begin_inset Formula $\sum_{n=1}^{l-1}(x_{n}-\bar{x}_{n})l_{n}\geq\sum_{n=1}^{l-1}(x_{n}-\bar{x}_{n})a_{l}$
\end_inset

.
 Therefore 
\begin_inset Formula 
\begin{align*}
C(x,m)-C(\bar{x},\bar{m}) & \geq\sum_{n=1}^{l-1}(x_{n}-\bar{x}_{n})a_{l}+\sum_{n=l}^{N}x_{n}a_{l}-\bar{x}_{l}a_{l}\\
 & =\left(\sum_{n=1}^{N}x_{n}-\sum_{n=1}^{l}\bar{x}_{n}\right)a_{l}\\
 & =0
\end{align*}

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{proof}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "jabtex"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
@


1.1
log
@Initial revision
@
text
@d61 1
a61 1
\tracking_changes false
d81 87
a167 1
Stackelberg Routing on Transportation Networks
d171 3
a173 3
We study inefficiencies of transportation networks due to the selfish behaviour
 and lack of coordination of drivers, by comparing social optima to Nash
 equilibria.
d204 12
d223 30
d267 10
d284 2
a285 2
The class of latency functions that have been studied so far satisfies two
 important properties: if 
d303 1
a303 1
 on a considerable range of networks, such as communication networks, it
d314 2
a315 2
either many drivers moving slowly (high density on a congested road), in
 which case the latency is large
d319 1
a319 1
or few cars moving fast (low density), in which case the latency is small
d325 2
a326 2
 One simple way of modeling this is to have an additional binary argument
 
d343 2
a344 2
 We then consider a macroscopic model of traffic flow inspired by the model
 developed by Lighthill and Whitham, and Richards
d351 12
a362 1
, and show that the resulting latency function can be expressed in the above
d377 2
a378 2
 Intuitively, as the link becomes more congested, drivers slow down, so
 their latency increases, and the amount of flow on the link decreases.
d383 30
d420 11
a430 2
We show that for this class we do not have essential uniqueness of Nash
 equilibria.
d438 1
a438 1
 This results contrasts with the class of non-decreasing latency functions,
d443 4
d458 14
d474 11
d488 1
a488 1
Traffic Network
d579 3
a581 1
, given by a triangular fundamental diagram that specifies the flow 
d589 34
a622 1
, with the following parameters:
d626 1
d630 1
a630 1
 the free-flow speed on the link 
d634 1
d638 1
a638 1
 the congestion wave speed 
d642 1
d646 1
a646 1
 the maximum capacity of the link 
d650 10
d688 1
a688 1
 and the velocity is decreasing
d713 21
d738 1
a738 1
status open
d784 11
a794 1
 that represnts a set of non-atomic players.
d807 11
a817 1
, and no compliant flow.
d859 1
a859 1
\begin_inset Formula $Supp(\flow)$
d862 1
a862 1
 the support of 
d869 1
a869 1
Supp(\flow)=\{\link|\flow[\link]>0\}
d878 1
a878 1
Deriving the Latency Function for a Traffic Network
d882 9
a890 1
The velocity on link 
d894 1
a894 1
 is given by 
d898 2
a899 1
, and the latency incurred by every non-atomic player on link 
d912 10
d934 3
d1010 19
a1028 1
 is in free-flow) 
d1045 1
a1045 1
 The latency is then given by 
a1068 3
\end_layout

\begin_layout Standard
d1080 12
d1103 20
d1148 1
a1148 1
Latency function resulting from the fundamental diagram of traffic.
d1166 10
d1179 21
a1199 1
Properties of the latency function
d1203 15
a1217 4
Note that the resulting latency function does not satisfy properties usually
 assumed in the Stackelberg routing literature.
 In particular, the latency is not an increasing function of flow: it is
 a constant function if the link is in free-flow, and a 
d1227 2
a1228 2
 regime (low density, few cars on the link moving fast) and one to the congested
 regime (high density, many cars on the link moving slowly).
d1279 1
a1279 1
\begin_layout Itemize
d1281 4
d1296 1
a1296 1
the latency is constant in free-flow.
d1301 1
a1301 2
 the free-flow latency.
 
d1309 1
a1309 1

d1312 1
a1312 1
\begin_layout Itemize
d1314 2
d1327 1
a1327 1
the latency is decreasing in congestion: 
d1331 1
a1331 1
 is decreasing, can be inverted in polynomial time, and 
d1335 22
d1361 12
a1372 3
Some of the known results on congestion networks do not apply to our setting:
 for instance, the network may have multiple Nash equilibria that have different
 costs.
d1382 21
a1402 3
In this section we characterize pure non-atomic Nash equilibria of the network
 (also called Wardrop equilibria in the traffic literature), which we simply
 refer to as Nash equilibria.
d1405 11
a1415 1
 have the same cost).
d1418 3
a1420 2
 We show that the set of Nash equilibria can be computed in polynomial time,
 and we characterize the best Nash equilibrium.
d1427 14
d1452 1
a1452 1
 for instance 
d1472 2
a1473 2
In particular, every non-atomic user cannot improve her latency by switching
 to another link.
d1487 1
a1487 1
 Note that to fully characterize the equilibrium one needs to specify the
d1492 2
a1493 1
, since the latency on a link depends on whether the link is congested.
d1496 10
d1519 1
a1519 1
 is an assignment for instance 
d1533 24
d1562 14
d1665 1
a1665 1
\begin_inset Formula $\link_{1}\in Supp(\flow)$
d1714 1
a1714 1
Traffic networks have multiple Nash Equilibria
d1727 1
a1727 1
 To simplify our discussion, we assume without loss of generality, that
d1759 10
d1784 1
a1784 1
\begin_inset Formula $j\in Supp\left(\flow\right)\implies\Mode[i]=1\forall i\in\left\{ 1,\ldots,j-1\right\} $
d1809 1
a1809 1
\begin_inset Formula $m_{i}=1\forall i\in\left\{ 1,\ldots,j-1\right\} $
d1823 39
a1861 1
\begin_inset Formula $\left(\flow,\Mode\right)\in\NashEq{\NLinks}{\qdemand}$
a1863 4
.
 Assume that 
\begin_inset Formula $\exists k\in Supp(x)$
\end_inset
d1865 1
a1865 3
 such that 
\begin_inset Formula $m_{k}=0$
\end_inset
a1866 3
.
 Then 
\begin_inset Formula $m=(1,\dots,\stackrel{k-1}{1},\stackrel{k}{0},\dots,0)$
a1868 3
 and 
\begin_inset Formula $Supp(x)=\left\{ 1,\dots,k\right\} $
\end_inset
a1869 1
.
d1893 12
a1904 2
 such equilibria since spcifying which link is in free flow completely determine
s the equilibrim.
d1940 2
a1941 2
In the case where 
\begin_inset Formula $\left|Supp\left(\flow\right)\right|<2$
d1945 1
a1945 1
\begin_inset Formula $\left|Supp\left(\flow\right)\right|\ge2$
d1959 1
a1959 1
\begin_inset Formula $\exists i,j\in Supp\left(\flow\right):\flow[i]<\flow[i]',\flow[j]>\flow[j]'$
d1963 1
a1963 1
 From 
d2086 15
d2109 1
a2109 1
\begin_inset Formula $k=\max Supp(x).$
d2121 2
a2122 2
 is a free flow Nash Equilibrium).
 We have from 
d2224 10
d2237 1
a2237 1
\opneFlow k{\qdemand}=(\cffFlow 1k,\dots,\cffFlow{k-1}k,r-\sum_{\link=1}^{k-1}\cffFlow{\link}k,0,\dots,0)\label{eq:x_bar}
d2275 1
a2275 1
\begin_inset Formula $\latency[i]=\parA[j]\forall i<k,$
d2278 3
d2282 2
a2283 1
\begin_inset Formula $\opneFlow[i]k{\qdemand}\in\left[0,\flowMax[i]\right]\forall i\in\left\{ 1,\ldots,\NLinks\right\} $
d2301 1
a2301 1
\begin_inset Formula $Supp\left(\opneFlow k{\qdemand}\right),$
d2310 1
a2310 1
\begin_inset Formula $\forall\link\in Supp\left(\opneFlow k{\qdemand}\right)$
d2318 1
a2318 1
\begin_inset Formula $\forall\link\notin Supp\left(\opneFlow k{\qdemand}\right)$
d2325 1
a2325 1
, which satisfies 
d2337 23
d2371 3
a2373 2
 Next we show that if the set of Nash equilibria is non-empty, then it contains
 a single link free flow Nash equilibrium.
d2392 1
a2392 1
, then there also exists free flow Nash equilibrium 
d2420 1
a2420 1
 such that there exists a completely congested Nash equilibrim is 
d2433 4
a2436 1
\begin_inset Formula $P_{N}$
d2439 1
a2439 1
 
d2448 5
a2452 1
 We show 
d2460 2
a2461 5
:
\end_layout

\begin_layout Proof
For 
d2474 1
a2474 4
\end_layout

\begin_layout Proof
Now let 
d2492 1
a2492 5
 
\end_layout

\begin_layout Proof
If 
d2537 1
a2537 1
We will show that 
d2555 1
a2555 1
 And to show the first inequality, we have
d2627 21
a2647 1
 then there is also a single-link free flow Nash equilibrium.
d2707 2
a2708 2
 For network instance 
\begin_inset Formula $(N,r)$
d2714 1
a2714 1
\BestNashEq{\NLinks}{\qdemand}=\underset{\left(\flow,\Mode\right)\in\NashEq{\Network}{\qdemand}}{\arg\min}\left\{ \max\left[Supp\left(\flow\right)\right]\right\} 
d2735 1
a2735 1
 equilibria will be the one with the smaller-index free flow link.
d2889 1
d2930 10
a2950 7
 in Definition 
\begin_inset CommandInset ref
LatexCommand formatted
reference "def:hat"

\end_inset

d2959 10
d3026 2
a3027 2
 problem 
\begin_inset Formula $(SO)$
d3032 3
a3034 3
\begin{align*}
\min_{\flow,\Mode} & \sum_{n}\flow[n]l_{n}(\flow[n],\Mode[n])\\
\text{subject to } & \sum_{n}\flow[\link]=r\\
d3036 1
a3036 1
\end{align*}
d3102 2
a3103 2
\begin{align*}
\min_{\flow} & \sum_{n}\flow[n]\parA[n]\\
d3106 1
a3106 1
\end{align*}
d3114 1
a3114 1
Then assuming the links are ordered by increasing free-flow latency 
d3118 1
a3118 1
 the social optimum is simply given by the assignment that saturates most
d3147 2
a3148 2
In this section we characterize the loss of efficiency of Nash equilibria
 by comparing them to the social optimum on a simple 2 link parallel network.
d3150 1
a3150 1
 have been used including Price of Anarchy
d3157 1
a3157 1
 and Price of Stability
d3171 11
a3181 1
 same cost by the essential uniqueness property.
d3201 1
a3201 1
\begin_inset Formula $\BestNashEq 2{\qdemand}=\left(\flow[NE](r),\Mode[BNE](r)\right)$
d3205 1
a3205 1
\begin_inset Formula $\left(x_{SO}(r),0\right)$
d3208 1
a3208 1
 be the social optimum, as defined in 
d3222 1
a3222 1
POS(\NLinks,\qdemand)=\frac{\Latency\left(\flow[NE](r),\Mode[NE](r)\right)}{\Latency\left(\flow[SO],0\right)}
d3231 13
d3258 1
a3258 1
, we need only to consider the following two cases:
d3261 2
a3262 1
\begin_layout Enumerate
d3266 1
a3266 8

\end_layout

\begin_layout Enumerate
\begin_inset Formula $\qdemand>\flowMax[1]$
\end_inset


d3270 1
a3270 1
For the first case, using 
d3282 1
a3282 1
 Similarly, from Theorem
d3333 1
a3333 1
Flow configuration when demand is under the capacity of the fastest link
d3356 17
a3372 2
\begin_layout Standard
If we now consider the case where 
d3376 6
a3381 2
, we know that all flow demand cannot be accomodated by link 1, and the
 results become more interesting.
d3394 1
a3394 1
 And from Theorem 
d3405 2
a3406 2
 will occur with one link in free flow, and since the total demand exceeds
 the capacity of link 
d3410 2
a3411 2
, then we must have link 1 in congestion and link 2 in free flow, i.e.
 
d3424 1
a3424 1
\begin_inset Formula $\flow[NE](r)$
d3437 1
a3437 1
 depicted in 
d3439 1
a3439 1
LatexCommand formatted
d3515 1
a3515 1
 when first link is beyond capacity
d3546 1
a3546 1
POS\left(2,\qdemand\right) & = & \frac{\parA[2]\cffFlow 12+\parA[2]\left(\qdemand-\cffFlow 12\right)}{\parA[1]\flowMax[1]+\parA[2]\left(\qdemand-\flowMax[1]\right)}\\
d3587 14
a3600 1
What we can conclude from the Price of Stability analysis of the two link
d3659 6
a3664 2
 of the flow: the corresponding users are compliant and willing to change
 their routes according to the instructions they are given.
d3683 1
a3683 1
 satisfies 
d3686 1
a3686 1
\cFlow[\link]\leq\flow[\link]^{\max}\forall n &  & \sum_{n}\cFlow[\link]=\beta r
d3714 1
a3714 1
 of compliant users 
d3747 2
a3748 2
, and we have 
\begin_inset Formula $\forall n$
d3751 1
a3751 1
 
d3759 1
a3759 1
 and by 
d3788 1
a3788 1
 of network 
d3792 1
a3792 1
 under flow demand 
d3800 1
a3800 1

d3841 2
a3842 2
\forall n\in Supp\left(\ncFlow(\cFlow)\right),\, & \latency[\link]\left(\cFlow[\link]+\ncFlow[\link](\cFlow),\Mode[\link](\cFlow)\right)=\latency[0]\\
\forall n\notin Supp\left(\ncFlow(\cFlow)\right),\, & \latency[\link]\left(\cFlow[\link],\Mode[\link](\cFlow)\right)\geq\latency[0]
d3851 12
d3864 1
a3864 1
\begin_inset Formula $S(\NLinks,r,\beta)\subset\mathbb{{R}}^{\NLinks}$
d3946 1
a3946 1
Assuming that the assignment of compliant users is not affected by introducing
d3965 1
a3965 1
\begin_inset Formula $Supp(t)=\{2\}$
d3972 1
a3972 1
 (non compliant users are forced to use less efficient link 2).
d3991 1
a3991 1
\begin_inset Formula $s\in S(\NLinks,r,\beta)$
d4004 1
a4004 1
\begin_inset Formula $\Mode[\max Supp(t(s))]=0$
d4044 1
a4044 1
\begin_inset Formula $\Mode[\max Supp(t(s))]=0$
d4067 1
a4067 1
\min_{s\in S(\NLinks,r,\beta)}C\left(s+\ncFlow(\cFlow),m(\cFlow)\right)
d4095 1
a4095 1
s^{*}=\arg\min_{s\in S(\NLinks,r,\beta)}C\left(s+\ncFlow(\cFlow),m(\cFlow)\right)
d4116 1
a4116 1
In this section we show the following result: the optimal Stackelberg strategy
d4146 1
a4146 2
Roughly speaking, the optimal Stackelberg strategy in our case corresponds
 to
d4150 1
a4150 1
first computing the best Nash equilibrium of non-compliant users alone,
d4152 1
a4152 1
\begin_inset Formula $(\bar{t},\bar{m)}=BNE(N,(1-\beta)r)$
d4159 1
a4159 1
then assigning the compliant flow by filling the remaining links, i.e.
d4195 2
a4196 1
 Next we detail this idea by defining a candidate Stackelberg strategy 
d4307 1
a4307 1
\begin_inset Formula $i=\max Supp(t)$
d4402 1
a4402 1
\begin_inset Formula $k=\max Supp(\bar{t})$
d4443 1
a4443 1
 
d4445 1
a4445 1
LatexCommand formatted
d4491 21
d4513 1
d4668 3
a4670 2
 
\begin_inset Formula $ $
d4673 2
a4674 1

d4698 1
d4700 1
a4700 1
LatexCommand formatted
d4731 1
a4731 1
Next we show that strategy 
d4806 3
a4808 3
\[
\latency[n](x_{n},m_{n})\geq\latency[n](\bar{x}_{n},\bar{m}_{n})
\]
d4814 3
a4816 3
\[
x_{n}\leq\bar{x}_{n}
\]
d4829 1
a4829 1
\begin_inset Formula $k'=\max Supp(t)$
d4860 1
a4860 1
\begin_inset Formula $k=\max Supp(\bar{t})$
d4867 10
d4888 2
a4889 2
 is the best Nash equilibrium of the non-compliant flow when they are not
 sharing the network with any other flow, the assignment 
d4897 1
a4897 1
 of non-compliant flow when they are sharing the network with additional
d4903 1
a4903 1
 The proof makes this argument more precise.
d4912 1
a4912 1
\begin_inset Formula $Supp(t)$
d4921 1
a4921 1
\begin_inset Formula $k'\in Supp(t)$
d4929 1
a4929 1
\begin_inset Formula $r'=\sum_{n\in Supp(t)}s_{n}+t_{n}$
d4933 1
a4933 1
\begin_inset Formula $Supp(t)$
d4953 1
a4953 1
\begin_inset Formula $(1-\beta)r=\sum_{n\in Supp(t)}t_{n}\leq\sum_{n\in Supp(t)}s_{n}+t_{n}=r'$
d5037 1
a5037 1
LatexCommand ref
d5078 1
a5078 1
LatexCommand ref
d5083 1
a5083 1
 
d5138 1
a5138 1
 
d5146 1
a5146 1
 
d5227 1
a5227 1
C(x,m)-C(\bar{x},\bar{m}) & =\sum_{n=1}^{N}x_{n}l_{n}-\sum_{n=1}^{l}\bar{x}_{n}\bar{l}_{n} & \text{since }Supp(\bar{x})=\{1,\dots,l\}\\
d5229 1
a5229 1
 & \geq\sum_{n=1}^{l-1}(x_{n}l_{n}-\bar{x}_{n}\bar{l}_{n})+\sum_{n=l}^{N}x_{n}a_{l}-\bar{x}_{l}a_{l} & \text{using \ref{eq:ff_latency}}\\
d5231 1
a5231 1
 & \geq\sum_{n=1}^{l-1}(x_{n}-\bar{x}_{n})l_{n}+\sum_{n=l}^{N}x_{n}a_{l}-\bar{x}_{l}a_{l}\text{ } & \text{using \ref{eq:cong_latency}}
d5237 1
a5237 1
\begin_inset Formula $\ref{eq:cong_flow}$
d5241 1
a5241 1
\begin_inset Formula $\ref{eq:cong_latencybar}$
@
