#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass IEEEconf
\begin_preamble
\overrideIEEEmargins
\end_preamble
\options letterpaper, 10 pt, conference
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "../common-files/lyx_commands.lyx"

\end_inset


\end_layout

\begin_layout Title
Nash Equilibria and Stackelberg Routing on Horizontal Queueing Networks
\end_layout

\begin_layout Author
Walid Krichene
\begin_inset Newline newline
\end_inset

walid@eecs.berkeley.edu 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 Jack Reilly
\begin_inset Newline newline
\end_inset

jackdreilly@berkeley.edu 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 Saurabh Amin
\begin_inset Newline newline
\end_inset

amins@mit.edu 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 Alexandre Bayen
\begin_inset Newline newline
\end_inset

bayen@berkeley.edu
\end_layout

\begin_layout Abstract
We study inefficiencies of capacity constrained networks due to the selfish
 behavior and lack of coordination of agents, by comparing social optima
 to Nash equilibria.
 Then we investigate possible strategies to reduce the inefficiency by studying
 the Stackelberg routing game: assuming a coordinator has control over a
 fraction of the flow on the network, what is a good way of routing that
 compliant flow so that the induced Nash equilibrium is closer to the social
 optimum than the initial Nash equilibrium?
\end_layout

\begin_layout Abstract
Stackelberg routing on parallel networks has been studied extensively for
 the class of non-decreasing latency functions, and it is shown in 
\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2001stackelberg"

\end_inset

 that computing the optimal Stackelberg strategy is NP-hard in the number
 of links for linear latency functions.
 
\end_layout

\begin_layout Abstract
We study Stackelberg routing for a new class of latency functions, that
 introduces a new model of congestion on a link.
 This class of latency functions arises in transportation networks for example,
 and better models congestion on horizontal queuing networks.
 We show that in our setting, there are multiple Nash equilibria, and we
 characterize the best Nash equilibrium.
 Then we study the Stackelberg routing game and show that the optimal Stackelber
g strategy can be computed in polynomial time for this class of latency
 functions on parallel networks.
 This work is applied for modeling transportation networks in which a coordinato
r can choose the routes of fraction of compliant agents, while the rest
 of the agents choose their routes selfishly.
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Congestion Games and Stackelberg Routing
\end_layout

\begin_layout Standard
Routing games form an important class of non-atomic games that is used to
 model the interaction of agents who are using resources on a network, where
 the cost on each edge depends on the fraction of agents using that edge.
 Extensive work has been dedicated to studying Nash equilibria (or user
 optimal assignments) of routing games 
\begin_inset CommandInset citation
LatexCommand cite
key "lo2002cell,papadimitriou2010new,roughgarden2002bad"

\end_inset

, where all players are assumed to choose the routes that minimize their
 respective individual costs.
 Under some assumptions on the latency functions, Nash equilibria can be
 computed as a solution of a convex optimization problem 
\begin_inset CommandInset citation
LatexCommand cite
key "kelly2001mathematical"

\end_inset

.
 Nash equilibria of routing games are known to be inefficient compared to
 the system optimal assignments, where a coordinator, or a central authority,
 assigns flow as to minimize a cost function over all players 
\begin_inset CommandInset citation
LatexCommand cite
key "aswani2011game,roughgarden2004bounding,zheng2011network,ziliaskopoulos2000linear"

\end_inset

.
 
\end_layout

\begin_layout Standard
In order to address this inefficiency, Stackelberg routing games have been
 proposed, where a fraction of the agents is centrally controlled, while
 the rest is free to act selfishly 
\begin_inset CommandInset citation
LatexCommand cite
key "aswani2011game,roughgarden2001stackelberg"

\end_inset

.
 The objective of the coordinator in the Stackelberg game is to route the
 compliant flow in a manner that minimizes a system-wide cost function in
 anticipation of the rest of the flow's selfish response.
 Other variants of routing games exist in the game theory literature 
\begin_inset CommandInset citation
LatexCommand cite
key "babaioff2009congestion,morgan2003spite"

\end_inset

.
\end_layout

\begin_layout Standard
Routing games and Stackelberg routing on parallel networks have been studied
 extensively for the class of non-decreasing latency functions, and it is
 known that computing the optimal Stackelberg strategy is NP-hard in the
 number of links.
 This led to considering polynomial time approximate strategies such as
 Largest Latency First and Scale (see 
\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2001stackelberg"

\end_inset

), and several bounds have been shown on the efficiency of these strategies.
\end_layout

\begin_layout Subsection
A New Class of Latency Functions
\begin_inset CommandInset label
LatexCommand label
name "sub:A-New-Class"

\end_inset


\end_layout

\begin_layout Standard
The class of latency functions that have been studied so far in Stackelberg
 routing literature rely on the following assumptions: if 
\begin_inset Formula $l(\flow)$
\end_inset

 is the latency on a link, where 
\begin_inset Formula $\flow$
\end_inset

 is the flow, then 
\begin_inset Formula $l$
\end_inset

 is assumed to be non-decreasing, and 
\begin_inset Formula $\flow\longmapsto\flow l(\flow)$
\end_inset

 is assumed to be convex 
\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2001stackelberg"

\end_inset

.
 While this class of latency functions provides a good model of congestion
 for a considerable range of networks, such as communication networks, it
 does not accurately model horizontal queueing congestion, such as congestion
 on transportation networks 
\begin_inset CommandInset citation
LatexCommand cite
key "lebacque1996godunov,daganzo1994cell,work2010traffic,lighthill1955kinematic,richards1956shock"

\end_inset

.
 Intuitively, a given flow 
\begin_inset Formula $x$
\end_inset

 on a road segment can correspond to
\end_layout

\begin_layout Itemize
either a large concentration of agents moving slowly (high density on a
 congested road), in which case the latency is large,
\end_layout

\begin_layout Itemize
or few cars moving quickly (low density), in which case the latency is small.
\end_layout

\begin_layout Standard
This means that the latency is not uniquely determined by the flow, and
 depends on the congestion state of the link.
 One simple way of modeling this phenomenon is to have an additional binary
 argument 
\begin_inset Formula $m$
\end_inset

 in the latency function 
\begin_inset Formula $l(\flow,\Mode)$
\end_inset

 to specify whether the link is congested 
\begin_inset Formula $(\Mode=1)$
\end_inset

 or is in free-flow 
\begin_inset Formula $(\Mode=0)$
\end_inset

.
 We show for example that in transportation networks, latency functions
 derived from a macroscopic model of traffic flow developed by Lighthill
 and Whitham, and Richards 
\begin_inset CommandInset citation
LatexCommand cite
key "lighthill1955kinematic,richards1956shock"

\end_inset

, can be expressed in the above form 
\begin_inset Formula $l(\flow,\Mode)$
\end_inset

.
 One interesting result is that the latency under congestion 
\begin_inset Formula $l(\flow,1)$
\end_inset

 is a 
\emph on
decreasing 
\emph default
function of flow.
 Intuitively, as the link becomes more congested, agents slow down, so their
 latency increases, and the amount of flow on the link decreases.
\end_layout

\begin_layout Standard
A large body of literature in horizontal queueing theory has studied game-theore
tic concepts, such as dynamic traffic assignment for user equilibria 
\begin_inset CommandInset citation
LatexCommand cite
key "friesz2006solving,lo2002cell,wang2001freeway"

\end_inset

 and system optimal assignments 
\begin_inset CommandInset citation
LatexCommand cite
key "zheng2011network,ziliaskopoulos2000linear"

\end_inset

.
 However, to the knowledge of the authors, optimal Stackelberg routing on
 horizontal queuing networks has not been addressed so far.
\end_layout

\begin_layout Subsection
Motivating Application: Compliant and Non-compliant Drivers on Highway Networks
\begin_inset CommandInset label
LatexCommand label
name "sub:Motivating-Example"

\end_inset


\end_layout

\begin_layout Standard
Advances in technology have made it possible to interact with individual
 drivers on a traffic network and exchange information through GPS-enabled
 smartphone applications or before and after-market vehicular navigation
 systems.
 This offers an opportunity to not only provide the driver with relevant
 traffic information and collect anonymized data that help improve traffic
 estimation, but also to provide routing advice that can improve the overall
 efficiency of the network by relieving congestion.
 
\end_layout

\begin_layout Standard
However, when providing routing advice, one needs to take into account the
 possible impact of rerouting drivers on the traffic conditions of the network,
 and the response of other drivers to this change in traffic conditions.
 Failing to account for the response of the system may possibly result in
 creating congestion.
 This fits into the framework of Stackelberg routing, where a fraction of
 the population of drivers is assumed to be 
\emph on
compliant
\emph default
 to routing suggestions, and the rest of the drivers are considered to be
 
\emph on
non-compliant
\emph default
.
 
\end_layout

\begin_layout Standard
We call compliant a driver who is connected to a central coordinator, through
 a smartphone application or a navigation system, and is willing (or has
 an external incentive) to follow routing suggestions provided by the coordinato
r.
 Other drivers (drivers who are not connected or who are simply not willing
 to follow alternative routes) are described as non-compliant.
 These two populations form respectively the leader and the followers in
 the Stackelberg routing game.
\end_layout

\begin_layout Standard
In many networks, drivers have a number of alternative disjoint paths to
 reach their destination.
 For example, parallel highway networks often exist between two heavily-populate
d cities (the San Francisco bay area has numerous examples of such networks).
 Therefore, Stackelberg routing strategies on simple parallel networks becomes
 a matter of practical importance to traffic planners in the near future.
 However, due to the limitations of congestion models discussed above, the
 existing literature on Stackelberg routing is not readily applicable to
 real traffic networks.
 We start to address these limitations by considering a new class of latency
 functions that better models congestion for horizontal queuing network,
 in particular traffic networks.
\end_layout

\begin_layout Subsection
Contributions of This Article
\end_layout

\begin_layout Standard
We introduce a new class of latency functions that is expressive enough
 to model congestion on horizontal queuing networks, and study, under this
 new class of latency, the Nash equilibria of the routing game on parallel
 networks, as well as optimal strategies for the Stackelberg routing game.
 We consider a routing game on a parallel network, where each link has a
 dual-mode latency function: latency is constant in free-flow, and a decreasing
 function of flow in congestion.
 This leads to novel theoretical and algorithmic results for characterizing
 and computing Nash equilibria and optimal Stackelberg strategies:
\end_layout

\begin_layout Itemize
We show that there is no essential uniqueness of Nash equilibria (there
 may exist Nash equilibria with different total costs), unlike point-queueing
 models usually considered in routing games 
\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2002bad"

\end_inset

.
\end_layout

\begin_layout Itemize
We show that for a given instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

 of a parallel network of 
\begin_inset Formula $\NLinks$
\end_inset

 links, subject to a constant demand 
\begin_inset Formula $\qdemand$
\end_inset

, the set of all pure Nash equilibria can be computed in time polynomial
 in 
\begin_inset Formula $\NLinks$
\end_inset

, and we characterize the 
\emph on
best Nash equilibrium 
\emph default
(the Nash equilibrium that minimizes the total network latency) and show
 that it can be computed in 
\begin_inset Formula $O\left(\NLinks^{2}\right)$
\end_inset

 time.
\end_layout

\begin_layout Itemize
We study the Stackelberg routing game and show that the optimal Stackelberg
 strategy can be computed in 
\begin_inset Formula $O\left(\NLinks^{2}\right)$
\end_inset

 time.
 This result contrasts with the class of non-decreasing latency functions,
 for which computing the optimal Stackelberg strategy is NP-hard 
\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2001stackelberg"

\end_inset

.
\end_layout

\begin_layout Standard
These results are an encouraging and necessary step towards a scalable,
 accurate model for optimal route assignment on horizontal queueing networks
 with partial compliance.
\end_layout

\begin_layout Subsection
Organization of Article
\end_layout

\begin_layout Standard
We start by defining the model and introducing a new class of latency functions
 in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:The-Model"

\end_inset

, and show as an example how such latency functions can be derived from
 known macroscopic models of traffic flow.
 In Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Nash-Equilibria"

\end_inset

, we study Nash equilibria of routing games for this new class of latency,
 and show that the essential uniqueness property does not hold.
 We then bound the number of Nash equilibria and give a tractable algorithm
 for computing the set of Nash equilibria, then characterize in particular
 the best Nash equilibrium to study its inefficiency using price of stability
 as a measure of inefficiency.
 In Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Inefficiency"

\end_inset

, we derive the price of stability for the case of two link parallel networks.
 The main results on optimal Stackelberg routing are presented in Sections
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Stackelberg-routing"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Computing-the-optimal"

\end_inset

, where a tractable algorithm is presented for computing a provably optimal
 Stackelberg strategy on 
\begin_inset Formula $\NLinks$
\end_inset

 link parallel networks.
 This is followed by numerical results that illustrate the effects of optimal
 Stackelberg routing in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Numerical-Results"

\end_inset

.
 We conclude with a summary of our results and directions for future work
 in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Discussion"

\end_inset

.
\end_layout

\begin_layout Section
The Model
\begin_inset CommandInset label
LatexCommand label
name "sec:The-Model"

\end_inset


\end_layout

\begin_layout Subsection
Congestion Games on on Parallel Edge Network
\end_layout

\begin_layout Standard
We consider a non-atomic
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
When fractional flows are allowed, the players are said to be non-atomic
 
\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2004bounding,schmeidler1973equilibrium"

\end_inset

.
 The choice of atomic versus non-atomic players in routing games is similar
 to the modeling choice of microscopic versus macroscopic flow framework
 in traffic modeling 
\begin_inset CommandInset citation
LatexCommand cite
key "lighthill1955kinematic,richards1956shock"

\end_inset

.
\end_layout

\end_inset

 routing game on a parallel network similar to the one studied in 
\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2001stackelberg"

\end_inset

, shown in Figure
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:nparlink"

\end_inset

.
 The network has a single source and a single sink.
 Connecting the source and sink are 
\begin_inset Formula $\NLinks$
\end_inset

 parallel edges (or links) indexed by 
\begin_inset Formula $\link\in\left\{ 1,\ldots,\NLinks\right\} $
\end_inset

.
 The network is subject to a constant positive flow demand 
\begin_inset Formula $\qdemand$
\end_inset

 at the source.
 We will denote by 
\begin_inset Formula $(\NLinks,r)$
\end_inset

 an instance of a network with 
\begin_inset Formula $\NLinks$
\end_inset

 parallel links subject to demand 
\begin_inset Formula $r$
\end_inset

.
 A feasible flow assignment for the instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

 is a vector 
\begin_inset Formula $x\in\Rea[\NLinks]_{+}$
\end_inset

 such that 
\begin_inset Formula $\sum_{n=1}^{\NLinks}\flow[n]=\qdemand$
\end_inset

 where 
\begin_inset Formula $\flow[n]$
\end_inset

 is the flow on link 
\begin_inset Formula $n$
\end_inset

.
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/ParLinkNetwork.pdf
	height 0.5in

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\size footnotesize
Network instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

.
 
\begin_inset Formula $N$
\end_inset

 links from 
\begin_inset Formula $O$
\end_inset

 to 
\begin_inset Formula $D$
\end_inset

 with demand 
\begin_inset Formula $\qdemand$
\end_inset

.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:nparlink"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We then introduce a cost function, or latency function 
\begin_inset Formula $l_{n}$
\end_inset

, on each link 
\begin_inset Formula $n$
\end_inset

.
 A link's cost can be thought of as the latency experienced by a job assigned
 to a particular machine 
\begin_inset Formula $n$
\end_inset

 in the case of job scheduling 
\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2001stackelberg"

\end_inset

, or the travel time of a vehicle using a particular road 
\begin_inset Formula $n$
\end_inset

 in the case of traffic assignment 
\begin_inset CommandInset citation
LatexCommand cite
key "wardrop1952some"

\end_inset

.
\end_layout

\begin_layout Subsection
Modeling congestion with Latency Functions
\end_layout

\begin_layout Standard
To model the effects of queueing on a given link 
\begin_inset Formula $n$
\end_inset

, the latency 
\begin_inset Formula $l_{n}$
\end_inset

 on the link is typically assumed to be a non-decreasing function of the
 amount of flow 
\begin_inset Formula $x_{n}$
\end_inset

 on link 
\begin_inset Formula $n$
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "aswani2011game,babaioff2009congestion,friesz1985transportation,harker1988multiple,papadimitriou2010new,roughgarden2002bad,roughgarden2005selfish"

\end_inset

.
 While this class of latency accurately models congestion on a broad range
 of networks (such as the internet, and more generally communication networks),
 it fails to correctly model congestion for a large class of networks.
 For example, consider a link (or road) 
\begin_inset Formula $n$
\end_inset

 in a traffic network.
 A given flow 
\begin_inset Formula $\flow[n]$
\end_inset

 may correspond to two different scenarios : few vehicles on the road are
 moving quickly (the road is in 
\emph on
free-flow
\emph default
), in which case the latency on the road is low, or a large number of vehicles
 on the road are moving slowly (the road is 
\emph on
congested
\emph default
), in which case the latency on the road is high.
 It is clear that this phenomenon is not captured if the latency is only
 a function of flow.
 One way to address this limitation is to have two latency functions: one
 describes the latency on a link 
\emph on
in free-flow
\emph default
, while the other describes the latency on a link 
\emph on
in congestion.
 
\emph default
Equivalently, one may introduce a second binary argument 
\begin_inset Formula $m_{n}\in\left\{ 0,1\right\} $
\end_inset

 to the latency function, designed to specify whether the link is in free-flow
 or in congestion.
\end_layout

\begin_layout Standard
We next show that such latency functions can be derived from macroscopic
 models of flow on Horizontal Queuing networks.
\end_layout

\begin_layout Subsection
Deriving Latency Functions for Horizontal Queuing Networks
\begin_inset CommandInset label
LatexCommand label
name "sub:Deriving-a-Class"

\end_inset


\end_layout

\begin_layout Standard
The relationship between the speed of flow on a network and the 
\emph on
density
\emph default
 of flow (or amount of flow in the static sense) is usually expressed by
 a function called the flux function in the physical sciences and conservation
 law theory 
\begin_inset CommandInset citation
LatexCommand cite
key "evans1998partial,leveque2007finite"

\end_inset

 and fundamental diagram in traffic flow theory 
\begin_inset CommandInset citation
LatexCommand cite
key "daganzo1994cell,greenshields1935study,papageorgiou1989macroscopic"

\end_inset

.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:permfds"

\end_inset

 depicts a triangular relationship between density and flow on a link, while
 similarly shaped diagrams have been developed for certain applications.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
J: something about h-queues.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
While such flow models have been popular for many decades in specific domains
 (such as traffic and fluid mechanics
\begin_inset Note Note
status open

\begin_layout Plain Layout
J: how do we motivate the generality of the approach beyond traffic? Sources
 to cite?
\end_layout

\end_inset

), less attention has been given to these models in the literature studying
 routing games, which focuses on modeling latency as a non-decreasing function
 of flow, and assumes flow and density to have a one-to-one relation.
 This article describes the required theoretical work required to characterize
 Nash equilibria and their extensions to Stackelberg framework for this
 class of horizontal queuing latency functions.
\end_layout

\begin_layout Standard
Consider a link 
\begin_inset Formula $\link$
\end_inset

 with length 
\begin_inset Formula $\Length[\link],$
\end_inset

 and assume the flow 
\begin_inset Formula $\flow[n]$
\end_inset

 on the link is given by a function 
\begin_inset Formula 
\begin{eqnarray*}
x_{n}^{\rho}:D_{n} & \rightarrow & \Rea_{+}\\
\rho_{n} & \mapsto & x_{n}=x_{n}^{\rho}(\rho_{n})
\end{eqnarray*}

\end_inset

 of the density 
\begin_inset Formula $\rho_{n}$
\end_inset

 on the link.
 The domain of 
\begin_inset Formula $\mass[\link]$
\end_inset

, 
\begin_inset Formula $D_{\link}$
\end_inset

, is non-negative and potentially unbounded.
 The latency is given by a function 
\begin_inset Formula 
\begin{eqnarray*}
\latency[\link]^{\rho}:D_{n} & \rightarrow & \Rea_{+}\\
\rho_{n} & \mapsto & l_{n}^{\rho}(\rho_{n})
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
The function 
\begin_inset Formula $x_{\link}^{\rho}$
\end_inset

 maps density to flow, and is defined on the domain 
\begin_inset Formula $D_{n}\subset\Rea_{+}$
\end_inset

, and corresponds to the fundamental diagram of traffic
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fn:papa"

\end_inset

Note, this allows for fundamental diagrams with unbounded density support,
 for example as in Papageorgiou 
\begin_inset Formula $\flow\left(\mass\right)=\mass e^{-\mass}$
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "papageorgiou1989macroscopic"

\end_inset


\end_layout

\end_inset

.
 First, we observe that latency is related to flow and density through the
 relation
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\latency[\link]^{\mass}\left(\mass[\link]\right)=\frac{\Length[\link]\mass[\link]}{x_{n}^{\rho}\left(\mass[\link]\right)},\label{eq:latency-relation}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
We make three assumptions on the flow and latency functions 
\begin_inset Formula $x_{n}^{\rho}$
\end_inset

 and 
\begin_inset Formula $l_{n}^{\rho}$
\end_inset

 for horizontal queues, which are illustrated in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:permfds"

\end_inset

.
\end_layout

\begin_layout Enumerate
There exists a critical density 
\begin_inset Formula $\masscrit[\link]>0$
\end_inset

, such that the latency is constant and minimal on the interval 
\begin_inset Formula $\left[0,\masscrit[n]\right]$
\end_inset

.
 This is equivalent to the flow function 
\begin_inset Formula $\flow[\link]^{\rho}$
\end_inset

 being linear on that interval.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $x_{n}^{\rho}$
\end_inset

 is maximal at 
\begin_inset Formula $\masscrit[\link]$
\end_inset

.
 The value of the flow at critical density is denoted 
\begin_inset Formula $\flowMax[\link]=x_{n}^{\rho}(\masscrit[\link])$
\end_inset

 and referred to as maximum flow or 
\emph on
capacity
\emph default
 of the link.
\end_layout

\begin_layout Enumerate
The latency function 
\begin_inset Formula $\latency[\link]^{\rho}$
\end_inset

, is continuous, non-decreasing.
\end_layout

\begin_layout Standard
We define the free-flow region as 
\begin_inset Formula $\mass[\link]\in\left[0,\masscrit[\link]\right]$
\end_inset

 and congested region as 
\begin_inset Formula $\mass[\link]>\masscrit[\link]$
\end_inset

.
 These assumptions define a class of supported fundamental diagrams.
 Assumption 2 just states that 
\begin_inset Formula $\forall\mass[\link]\ge0$
\end_inset

, 
\begin_inset Formula $\flow[\link]^{\rho}\left(\mass[\link]\right)\in\left[0,\flowMax[\link]\right]$
\end_inset

.
 From Equation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:latency-relation"

\end_inset

, Assumption 3 can be expressed equivalently in terms of the flow function
 
\begin_inset Formula $x_{n}^{\rho}$
\end_inset

 as 
\begin_inset Formula $\frac{d\flow[\link]^{\rho}\left(\mass[\link]\right)}{d\mass[\link]}\le\frac{x_{n}^{\rho}\left(\mass[\link]\right)}{\mass[\link]}$
\end_inset

.
 This gives reasonable restrictions on the shape of fundamental diagrams
 in the congestion region, and flexible enough to allow non-concavity, and
 even increasing functions 
\begin_inset Formula $\flow[\link]^{\rho}$
\end_inset

 under certain conditions.
 Examples of allowable fundamental diagrams are given in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:permfds"

\end_inset

, and corresponding examples of latency functions are given in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:example-rho-latency"

\end_inset

.
\end_layout

\begin_layout Standard
Note that from these assumptions, we can write the latency function for
 the horizontal queueing model as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\latency[\link]^{\mass}\left(\mass[\link]\right)=\begin{cases}
\frac{\Length[\link]\masscrit[\link]}{\flowMax[\link]} & \mass[\link]\in\left[0,\masscrit[\link]\right]\\
\frac{\Length[\link]\mass[\link]}{\flow[\link]\left(\mass[\link]\right)} & \textup{otherwise}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/AnnotatedFundamentalDiagramMatched.pdf
	height 3.5cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Fundamental diagram examples.
\begin_inset CommandInset label
LatexCommand label
name "fig:Fundamental-diagram-examples."

\end_inset


\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:permfds"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align left
\begin_inset Graphics
	filename ../figures/LatencyasFunctionofDensityMatched.pdf
	width 1.5in

\end_inset


\end_layout

\begin_layout Plain Layout
\align left
\begin_inset Caption

\begin_layout Plain Layout
Latency as a function of density examples.
\begin_inset CommandInset label
LatexCommand label
name "fig:example-rho-latency"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $\,\,\,$
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align right
\begin_inset Graphics
	filename ../figures/LatencyasFunctionofFlowModeMatched.pdf
	width 1.5in

\end_inset


\end_layout

\begin_layout Plain Layout
\align right
\begin_inset Caption

\begin_layout Plain Layout
Examples of latency as a function of flow and congestion state.
\begin_inset CommandInset label
LatexCommand label
name "fig:example-flow-latency"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Examples of flux functions and derived relationships that satisfy the assumption
s in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Deriving-a-Class"

\end_inset

.
 The dotted line describes a flux function which reacts less severely to
 increasing density than the dashed and dot-dashed lines.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Example

\emph on
Triangular fundamental diagrams
\end_layout

\begin_layout Example
One particular class of fundamental diagrams 
\begin_inset Formula $x^{\rho}$
\end_inset

 that satisfy the above assumptions are triangular fundamental diagrams
 
\begin_inset CommandInset citation
LatexCommand cite
key "daganzo1994cell,daganzo1995cell"

\end_inset

, which are linear with positive slope 
\begin_inset Formula $\speedff$
\end_inset

 in the free-flow region, affine with negative slope 
\begin_inset Formula $\speedCong$
\end_inset

 in the congestion region, and have maximum flow 
\begin_inset Formula $\flowMax=\masscrit\speedff$
\end_inset

.
 Assumptions 1 and 2 are satisfied by definition, and Assumption 3 is satisfied
 since 
\begin_inset Formula $\frac{d\flow\left(\mass\right)}{d\mass}=\speedff=\frac{x\left(\mass\right)}{\mass}$
\end_inset

 
\begin_inset Formula $\forall\rho\in[0,\masscrit]$
\end_inset

 and 
\begin_inset Formula $\frac{d\flow\left(\mass\right)}{d\mass}=\speedCong\le0\le\frac{x\left(\mass\right)}{\mass}$
\end_inset

 
\begin_inset Formula $\forall\rho\geq\masscrit$
\end_inset

.
 The dotted line in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Fundamental-diagram-examples."

\end_inset

 shows a triangular fundamental diagram.
 The latency function is then given by:
\end_layout

\begin_layout Example
\begin_inset Formula 
\[
\latency[\triangle]^{\mass}\left(\mass\right)=\begin{cases}
\frac{\Length}{\speedff} & 0\le\mass\le\frac{\flowMax}{\speedff}\\
\frac{\Length\mass}{\speedCong\left(\mass-\massmax\right)} & \frac{\flowMax}{\speedff}<\mass\le\massmax
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Example
where 
\begin_inset Formula $\massmax=\flowMax\left(\frac{1}{\speedff}-\frac{1}{\speedCong}\right)$
\end_inset

.
\end_layout

\begin_layout Subsection
A new class of Latency functions: Horizontal Queuing Latency
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sub:latency_class"

\end_inset


\end_layout

\begin_layout Standard
While expressing latency as a function of density is intuitive and succinct
 for horizontal queues, expressing it as a function of flow proves to be
 more convenient in the study of routing games and Stackelberg routing.
 This is largely due to the fact that total flow must be conserved in traffic
 assignment problems, and not density.
 For this reason, we introduce an equivalent formulation of latency using
 flow and a binary argument that describes congestion state.
 Let the congestion state 
\begin_inset Formula $\Mode[\link]$
\end_inset

 of link 
\begin_inset Formula $\link$
\end_inset

 be defined as:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\Mode[\link]:=\begin{cases}
0 & \text{if }\link\text{ is in free-flow}\\
1 & \text{if }\link\text{ is congested}
\end{cases}
\]

\end_inset

We can now define a general class of latency functions 
\begin_inset Formula $\latency[\link]$
\end_inset

 as a function of both flow and congestion state:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\latency[\link]:\left[0,\flowMax[\link]\right]\times\left\{ 0\right\} \cup(0,\flowMax[n])\times\left\{ 1\right\}  & \rightarrow & \Rea_{+}\\
\left(\flow[\link],\Mode[\link]\right) & \mapsto & \latency[\link]\left(\flow[\link],\Mode[\link]\right),
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Note that the latency in congestion 
\begin_inset Formula $l_{n}(.,1)$
\end_inset

 is defined on the open interval 
\begin_inset Formula $(0,\flowMax[n])$
\end_inset

.
 In particular, if 
\begin_inset Formula $\flow[n]=0$
\end_inset

 then 
\begin_inset Formula $m_{n}=0$
\end_inset

 (a link that is not in the support is considered in free-flow) and if 
\begin_inset Formula $\flow[n]=\flowMax[n]$
\end_inset

 then 
\begin_inset Formula $\Mode[n]=0$
\end_inset

 (if a link is at maximum capacity, it is considered, by convention, to
 be in free-flow.
 It is in fact on the boundary of the free-flow and congestion regions,
 and we choose this convention for simplicity of notation).
 We also assume that 
\begin_inset Formula $\latency[\link]$
\end_inset

 satisfies the following properties, which are equivalent to the assumptions
 in Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Deriving-a-Class"

\end_inset

:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\exists a_{n}>0$
\end_inset

 such that 
\begin_inset Formula $\forall\flow[n]\in[0,\flowMax[n]]$
\end_inset

, 
\begin_inset Formula $\latency[\link]\left(\flow[\link],0\right)=\parA[\link]$
\end_inset

.
 Here 
\begin_inset Formula $a_{n}$
\end_inset

 is the constant free-flow latency.
\end_layout

\begin_layout Itemize

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $\lim_{\flow[n]\rightarrow\flowMax[\link]}\latency[\link]\left(\flow[n],1\right)=\latency[\link]\left(\flowMax[\link],0\right)=a_{n}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $x\mapsto\latency[\link]\left(x,1\right)$
\end_inset

 is decreasing on 
\begin_inset Formula $(0,\flowMax[n])$
\end_inset

.
\end_layout

\begin_layout Standard
Some examples of latency functions in this class are illustrated in Figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:example-flow-latency"

\end_inset

.
 Again, the latency function corresponding to a triangular fundamental diagram
 can be readily expressed in this form:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\latency[\triangle]\left(x,0\right) & = & \frac{\Length}{\speedff}\\
\latency[\triangle]\left(\flow,1\right) & = & L\left(\frac{\massmax}{\flow}+\frac{1}{\speedCong}\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Subsection
Total System Cost
\end_layout

\begin_layout Standard
The cost to a single user is defined as the latency experienced by the user,
 or the latency of the link chosen by the user.
 Therefore, the total cost experienced on a particular link 
\begin_inset Formula $\link$
\end_inset

 is 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
C_{\link}\left(\flow[\link],\Mode[\link]\right)=\latency[\link]\left(\flow[\link],\Mode[\link]\right)\flow[\link]=\Length[\link]\mass[\link].
\]

\end_inset


\end_layout

\begin_layout Standard
Then, the total system cost is the sum of the costs of the individual links
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
C\left(\flow,\Mode\right)=\sum_{i=1}^{\NLinks}C_{i}\left(\flow[i],\Mode[i]\right)\label{eq:total-cost}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\flow=(x_{1},\dots,x_{\NLinks})$
\end_inset

 is the vector of flows, and 
\begin_inset Formula $\Mode=(m_{1},\dots,m_{\NLinks})$
\end_inset

 is the vector of congestion states for the entire network.
\end_layout

\begin_layout Section
Nash Equilibria
\begin_inset CommandInset label
LatexCommand label
name "sec:Nash-Equilibria"

\end_inset


\end_layout

\begin_layout Standard
In this section, we characterize pure non-atomic Nash equilibria of the
 network (also called Wardrop equilibria in the transportation literature
 
\begin_inset CommandInset citation
LatexCommand cite
key "Etudes1985"

\end_inset

), which we simply refer to as Nash equilibria.
 We show that our class of latency functions induce multiple Nash equilibria
 with different costs, and that the set of Nash equilibria can be computed
 in polynomial time (with respect to the number of parallel links).
 Then we characterize the best Nash equilibrium and focus our attention
 on studying the inefficiency of the best Nash equilibrium in Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Inefficiency"

\end_inset

.
\end_layout

\begin_layout Subsection
Characterization of Nash Equilibria
\end_layout

\begin_layout Standard
We first recall the fundamental notion of Nash equilibrium for the network
 instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

.
\end_layout

\begin_layout Definition

\series bold
Nash Equilibrium
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:ne"

\end_inset

An assignment 
\begin_inset Formula $(\flow,\Mode)\in\Rea[\NLinks]_{+}\times\{0,1\}^{\NLinks}$
\end_inset

 for the network instance 
\begin_inset Formula $(\NLinks,\qdemand)$
\end_inset

 is a Nash equilibrium, if 
\begin_inset Formula $\forall n$
\end_inset

 
\begin_inset Formula 
\[
\flow[\link]>0\Rightarrow\forall k\leq N,\ \latency[\link](\flow[\link],\Mode[\link])\leq\latency[k](\flow[k],\Mode[k])
\]

\end_inset


\end_layout

\begin_layout Standard
In particular, every non-atomic agent cannot improve her/his latency by
 switching to another link.
 As a consequence, all links that are in the support of 
\begin_inset Formula $\flow$
\end_inset

 have the same latency 
\begin_inset Formula $\latency[0]$
\end_inset

, and links that are not in the support have latency greater than or equal
 to 
\begin_inset Formula $\latency[0]$
\end_inset

.
 We will denote by 
\begin_inset Formula $\Supp{\flow}$
\end_inset

 the support of 
\begin_inset Formula $\flow$
\end_inset

, i.e.
 the set 
\begin_inset Formula $\left\{ n\in\left\{ 1,\dots,\NLinks\right\} |\flow[n]>0\right\} $
\end_inset

.
\end_layout

\begin_layout Standard
Note that to fully describe the equilibrium, one needs to specify the congestion
 state vector 
\begin_inset Formula $m$
\end_inset

 in addition to the flow assignment 
\begin_inset Formula $x$
\end_inset

, since the latency on a link depends on whether the link is congested or
 not.
 The following Lemma gives an equivalent characterization of Nash equilibria.
\end_layout

\begin_layout Lemma

\series bold
Characterization of a Nash Equilibrium
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:nash_eq"

\end_inset

 A feasible assignment 
\begin_inset Formula $(\flow,\Mode)$
\end_inset

 for a network instance 
\begin_inset Formula $(\NLinks,\qdemand)$
\end_inset

 is a Nash equilibrium if and only if 
\begin_inset Formula $\exists\: l_{0}>0$
\end_inset

 such that 
\begin_inset Formula 
\begin{align*}
\flow[\link]>0 & \Rightarrow\latency[\link](\flow[\link],\Mode[\link])=\latency[0]\\
\flow[\link]=0 & \Rightarrow\latency[\link](0,0)\geq\latency[0]
\end{align*}

\end_inset

 The total latency incurred by the network is 
\begin_inset Formula $\Latency(\flow,\Mode)=\qdemand\latency[0]$
\end_inset

.
\end_layout

\begin_layout Standard
Note that links that have zero flow are necessarily in free-flow 
\begin_inset Formula $\flow[\link]=0\Rightarrow\Mode[\link]=0$
\end_inset

.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Traffic-Networks-Have"

\end_inset

 Horizontal queueing networks have multiple Nash equilibria
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\NashEquilibrium{\NLinks}{\qdemand}{}$
\end_inset

 denote the set of Nash Equilibria for network instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

.
 For our class of latency functions, the essential uniqueness property of
 Nash equilibrium 
\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2002bad,Dafermos1969"

\end_inset

 does not hold.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Note that essential uniqueness of Nash Equilibria holds for the class of
 non decreasing latency functions, i.e.
 all Nash Equilibria have the same cost.
 To show this result, assume that the latency functions 
\begin_inset Formula $\flow[\link]\rightarrow\latency[\link](\flow[\link])$
\end_inset

 are non-decreasing and only depend on the flow 
\begin_inset Formula $\flow[n]$
\end_inset

.
 Let 
\begin_inset Formula $\flow$
\end_inset

 and 
\begin_inset Formula $\flow'$
\end_inset

 be two Nash equilibria for 
\begin_inset Formula $(\NLinks,\qdemand)$
\end_inset

.
 Let 
\begin_inset Formula $\latency[0]$
\end_inset

, respectively 
\begin_inset Formula $\latency[0]'$
\end_inset

 denote the common latency of all links in the support of 
\begin_inset Formula $\flow$
\end_inset

, respectively 
\begin_inset Formula $\flow'$
\end_inset

.
 The cost of the Nash equilibria are respectively 
\begin_inset Formula $\qdemand\latency[0]$
\end_inset

 and 
\begin_inset Formula $\qdemand\latency[0]'$
\end_inset

.
 Assume 
\begin_inset Formula $\flow\neq\flow'$
\end_inset

.
 Then 
\begin_inset Formula $\exists\link_{1},\link_{2}$
\end_inset

 such that 
\begin_inset Formula $\flow[\link_{1}]>\flow[\link_{1}]'\geq0$
\end_inset

 and 
\begin_inset Formula $\flow[\link_{2}]'>\flow[\link_{2}]\geq0$
\end_inset

.
 Since 
\begin_inset Formula $\flow$
\end_inset

 is at Nash equilibrium and 
\begin_inset Formula $\link_{1}\in\Supp{\flow}$
\end_inset

, 
\begin_inset Formula $\latency[\link_{1}](\flow[\link_{1}])\leq\latency[\link_{2}](\flow[\link_{2}])$
\end_inset

.
 And since 
\begin_inset Formula $\latency[\link_{2}]$
\end_inset

 is non-decreasing 
\begin_inset Formula $\latency[\link_{2}](\flow[\link_{2}])\leq\latency[\link_{2}](\flow[\link_{2}]')$
\end_inset

.
 Thus 
\begin_inset Formula $\latency[0]=\latency[\link_{1}](\flow[\link_{1}])\leq\latency[\link_{2}](\flow[\link_{2}])\leq\latency[\link_{2}](\flow[\link_{2}]')=\latency[0]'$
\end_inset

.
 Exchanging the roles of 
\begin_inset Formula $\flow$
\end_inset

 and 
\begin_inset Formula $\flow'$
\end_inset

 we have 
\begin_inset Formula $\latency[0]'\leq\latency[0]$
\end_inset

.
 Therefore 
\begin_inset Formula $\latency[0]=\latency[0]'$
\end_inset

 and both equilibria have the same cost.
\end_layout

\end_inset

 To see this, consider for example a network instance 
\begin_inset Formula $(\mbox{\NLinks=}2,\mbox{\qdemand=}1)$
\end_inset

 where 
\begin_inset Formula $\flowMax[1]=\flowMax[2]=1$
\end_inset

, the free-flow latencies are 
\begin_inset Formula $a_{1}=1$
\end_inset

 and 
\begin_inset Formula $a_{2}=2$
\end_inset

, and the congested latency functions are given respectively by 
\begin_inset Formula $l_{1}(\flow[1],1)=\frac{1}{x_{1}}$
\end_inset

 and 
\begin_inset Formula $l_{2}(\flow[2],1)=\frac{2}{x_{2}}$
\end_inset

.
 Then it is easy to see that 
\begin_inset Formula $(x,m)=((1,0),(0,0))$
\end_inset

, 
\begin_inset Formula $(x',m')=((\frac{1}{2},\frac{1}{2}),(1,0))$
\end_inset

, and 
\begin_inset Formula $(x'',m'')=((\frac{1}{3},\frac{2}{3}),(1,1))$
\end_inset

 are all Nash equilibria for this instance, and they have different costs:
 
\begin_inset Formula $C(x,m)=1$
\end_inset

, 
\begin_inset Formula $C(x',m')=2$
\end_inset

 and 
\begin_inset Formula $C(x'',m'')=3$
\end_inset

.
 This simple example shows that there are at least two types of Nash equilibria:
 equilibria for which every link in the support is congested (this is the
 case for 
\begin_inset Formula $(x'',m'')$
\end_inset

 in the previous example), and equilibria that have one link in free-flow
 in their support (this is the case for both 
\begin_inset Formula $(x,m)$
\end_inset

 and 
\begin_inset Formula $(x',m')$
\end_inset

).
 In this section, we show that these are in fact the only possible types
 of equilibria, and we prove that there are at most 
\begin_inset Formula $2\NLinks$
\end_inset

 such equilibria, assuming free-flow latencies are distinct.
\end_layout

\begin_layout Standard
To simplify the discussion, we assume without loss of generality, that the
 links are ordered by increasing free-flow latencies, and that free-flow
 latencies are different to avoid degenerate cases where the set of Nash
 equilibria is infinite
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\parA[1]<\parA[2]<\ldots<\parA[\NLinks]
\]

\end_inset


\end_layout

\begin_layout Standard
We start by deriving properties that the congestion state vector 
\begin_inset Formula $m$
\end_inset

 needs to satisfy for a Nash equilibrium 
\begin_inset Formula $(x,m)$
\end_inset

.
 We first show that if a link 
\begin_inset Formula $j$
\end_inset

 is in the support of 
\begin_inset Formula $x$
\end_inset

, then links 
\begin_inset Formula $\left\{ 1,\ldots,j-1\right\} $
\end_inset

 are congested.
\end_layout

\begin_layout Lemma

\series bold
Congestion of lower links
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:filluplower"

\end_inset

Let 
\begin_inset Formula $\left(\flow,\Mode\right)\in\NashEquilibrium{\NLinks}{\qdemand}{}$
\end_inset

.
 
\end_layout

\begin_layout Lemma
Then 
\begin_inset Formula $j\in\Supp{\flow}\Rightarrow\Mode[i]=1\quad\forall i\in\left\{ 1,\ldots,j-1\right\} $
\end_inset


\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $i\in\left\{ 1,\ldots,j-1\right\} $
\end_inset

.
 Then 
\begin_inset Formula $\Mode[i]=0\Rightarrow\latency[i](x_{i,}m_{i})=\parA[i]<a_{j}\le\latency[j](x_{j},m_{j})$
\end_inset

, which violates the characterization of Nash equilibrium in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:nash_eq"

\end_inset

.
 Therefore, 
\begin_inset Formula $m_{i}=1\quad\forall i\in\left\{ 1,\ldots,j-1\right\} $
\end_inset

.
\end_layout

\begin_layout Corollary

\series bold
Congestion states under equilibrium
\end_layout

\begin_layout Corollary
\begin_inset CommandInset label
LatexCommand label
name "cor:atmost1ff"

\end_inset

 Let 
\begin_inset Formula $\left(\flow,\Mode\right)\in\NashEquilibrium{\NLinks}{\qdemand}{}$
\end_inset

.
 Assume that 
\begin_inset Formula $\exists j\in\Supp{\flow}$
\end_inset

 such that 
\begin_inset Formula $m_{j}=0$
\end_inset

.
 Then 
\begin_inset Formula $m=(1,\dots,\stackrel{j-1}{1},\stackrel{j}{0},\dots,0)$
\end_inset

 and 
\begin_inset Formula $\Supp{\flow}=\left\{ 1,\dots,j\right\} $
\end_inset

.
\end_layout

\begin_layout Proof
We have from Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:filluplower"

\end_inset

 that 
\begin_inset Formula $\forall i\in\left\{ 1,\dots,j-1\right\} $
\end_inset

, 
\begin_inset Formula $m_{i}=0$
\end_inset

.
 And we have 
\begin_inset Formula $\forall i\in\left\{ j+1,\dots,N\right\} $
\end_inset

, 
\begin_inset Formula $l_{i}(x_{i},m_{i})\geq a_{i}$
\end_inset

 by definition of the latency function, and 
\begin_inset Formula $a_{i}>a_{j}$
\end_inset

 since 
\begin_inset Formula $i>j$
\end_inset

.
 Therefore the latency on link 
\begin_inset Formula $i\in\left\{ j+1,\dots,N\right\} $
\end_inset

 is strictly greater than the latency on link 
\begin_inset Formula $j\in\Supp x$
\end_inset

, therefore 
\begin_inset Formula $i\notin\Supp x$
\end_inset

 (follows from the characterization of Nash equilibrium in Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lem:nash_eq"

\end_inset

) and 
\begin_inset Formula $m_{i}=0$
\end_inset

.
\end_layout

\begin_layout Standard
The corollary states that if some link 
\begin_inset Formula $k$
\end_inset

 in the support of a Nash equilibrium is in free-flow, this completely determine
s the congestion state vector of the equilibrium: links 
\begin_inset Formula $\left\{ 1,\dots,k-1\right\} $
\end_inset

 are in the support and are congested, and links 
\begin_inset Formula $\left\{ k+1,\dots,N\right\} $
\end_inset

 are not in the support.
 We will call such a Nash equilibrium (where a single link in the support
 is in free-flow) a 
\emph on
single link free-flow equilibrium
\emph default
.
 In general a Nash equilibrium does not necessarily have a link in free-flow:
 this defines a second type of equilibria where all links in the support
 are congested, i.e.
 
\begin_inset Formula $m_{\max\Supp x}=1$
\end_inset

.
 We will call such equilibria 
\emph on
congested equilibria
\emph default
.
\end_layout

\begin_layout Standard
The following Lemma shows that given a congestion state vector 
\begin_inset Formula $m$
\end_inset

, there are at most two corresponding Nash equilibria 
\begin_inset Formula $(x,m)$
\end_inset

, one single link free-flow equilibrium, and one congested equilibrium.
\end_layout

\begin_layout Lemma

\series bold
Enumerating Nash Equilibria
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:enumerate_nash_eq"

\end_inset

For a given congestion state 
\begin_inset Formula $\Mode$
\end_inset

, there are at most two assignments 
\begin_inset Formula $x$
\end_inset

 such that 
\begin_inset Formula $(x,m)$
\end_inset

 is a Nash equilibrium.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $m\in\left\{ 0,1\right\} ^{N}$
\end_inset

 be a given congestion state vector and assume 
\begin_inset Formula $x,x'\in\Rea[\NLinks]_{+}$
\end_inset

 are such that 
\begin_inset Formula $(x,m)$
\end_inset

 and 
\begin_inset Formula $(\flow',m)$
\end_inset

 are two different Nash equilibria.
 Then 
\begin_inset Formula $\exists i,j$
\end_inset

, 
\begin_inset Formula $1\leq i<j\leq N$
\end_inset

 such that 
\begin_inset Formula $0\leq\flow[i]<\flow[i]'$
\end_inset

 and 
\begin_inset Formula $0\leq\flow[j]'<\flow[j]$
\end_inset

 (we assume without loss of generality that 
\begin_inset Formula $i<j$
\end_inset

: if this is not the case, exchange 
\begin_inset Formula $\flow$
\end_inset

 and 
\begin_inset Formula $\flow'$
\end_inset

).
 
\end_layout

\begin_layout Proof
We start by noting that since 
\begin_inset Formula $j\in\Supp{\flow}$
\end_inset

 and 
\begin_inset Formula $i<j$
\end_inset

, then 
\begin_inset Formula $i\in\Supp{\flow}$
\end_inset

.
 This follows from the fact that 
\begin_inset Formula $l_{i}(0,m_{i})=a_{i}<a_{j}\leq l_{j}(\flow[j],m_{j})$
\end_inset

, thus if 
\begin_inset Formula $j\in\Supp{\flow}$
\end_inset

, 
\begin_inset Formula $\flow[i]$
\end_inset

 cannot be zero since every link in the support of a Nash equilibrium has
 latency less than or equal to the latency on any other link.
 
\end_layout

\begin_layout Proof
Now since 
\begin_inset Formula $i,j\in\Supp{\flow}$
\end_inset

, then we have 
\begin_inset Formula $l_{i}(x_{i},m_{i})=l_{j}(\flow[j],m_{j})$
\end_inset

.
 And since 
\begin_inset Formula $j\in\Supp{\flow}$
\end_inset

 and 
\begin_inset Formula $i<j$
\end_inset

, then by 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:filluplower"

\end_inset

, we have 
\begin_inset Formula $m_{i}=1$
\end_inset

 (link 
\begin_inset Formula $i$
\end_inset

 is congested).
 Therefore 
\begin_inset Formula $\latency[i](x_{i},m_{i})>\latency[i](x'_{i},m_{i})$
\end_inset

 since 
\begin_inset Formula $l_{i}(.,1)$
\end_inset

 is decreasing.
 Finally we have 
\begin_inset Formula $\latency[j](x_{j},m_{j})\leq\latency[j](x'_{j},m_{j})$
\end_inset

 since 
\begin_inset Formula $l_{j}(.,0)$
\end_inset

 is constant and 
\begin_inset Formula $\latency[j](.,1)$
\end_inset

 is decreasing.
 Combining the above, we have
\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{equation}
\latency[i](x'_{i},m_{i})<l_{i}(x_{i},m_{i})=\latency[j](x_{j},m_{j})\leq\latency[j](x'_{j},m_{j})\label{eq:contradiction}
\end{equation}

\end_inset


\end_layout

\begin_layout Proof
Now we partition the set of Nash Equilibria in two sets 
\begin_inset Formula $\NashEquilibrium{\NLinks}r=\text{NE}_{\text{f}}(\NLinks,r)\sqcup\text{NE}_{\text{c}}(\NLinks,r)$
\end_inset

: equilibria that have a completely congested support, denoted by 
\begin_inset Formula $\text{NE}_{\text{c}}(\NLinks,r)$
\end_inset

, and equilibria that have one link in free-flow in their support, denoted
 by 
\begin_inset Formula $\text{NE}_{\text{f}}(\NLinks,r)$
\end_inset

.
\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{eqnarray*}
\NashEquilibrium{\NLinks}{\qdemand}f & = & \left\{ (\flow,m)\in\NashEquilibrium Nr|m_{\max\Supp{\flow}}=0\right\} \\
\NashEquilibrium{\NLinks}{\qdemand}c & = & \left\{ (\flow,m)\in\NashEquilibrium Nr|m_{\max\Supp{\flow}}=1\right\} 
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
Now we show that for a given congestion state vector 
\begin_inset Formula $m$
\end_inset

, each set contains at most one element.
\end_layout

\begin_deeper
\begin_layout Paragraph
Suppose 
\begin_inset Formula $(\flow,m),(\flow',m)\in\NashEquilibrium{\NLinks}{\qdemand}f$
\end_inset

, where 
\begin_inset Formula $\flow,\flow'$
\end_inset

 are as defined above
\end_layout

\begin_layout Standard
then since 
\begin_inset Formula $j\in\Supp{\flow}$
\end_inset

, we have by 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:filluplower"

\end_inset

, 
\begin_inset Formula $\forall k<j$
\end_inset

 
\begin_inset Formula $m_{k}=1$
\end_inset

.
 Since the last link in the support of 
\begin_inset Formula $\flow'$
\end_inset

 is, by assumption, in free-flow, we have 
\begin_inset Formula $\max\Supp{\flow'}\geq j$
\end_inset

.
 Therefore 
\begin_inset Formula $j\in\Supp{\flow'}$
\end_inset

.
 But from 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:contradiction"

\end_inset

 we have 
\begin_inset Formula $\latency[i](x'_{i},m_{i})<\latency[j](x'_{j},m_{j})$
\end_inset

 which contradicts the definition of a Nash Equilibrium (a link in the support
 of a Nash Equilibrium has latency less than or equal to any other link).
 Thus there is at most one assignment 
\begin_inset Formula $x$
\end_inset

 such that 
\begin_inset Formula $(x,m)\in\NashEquilibrium{\NLinks}{\qdemand}f$
\end_inset

.
\end_layout

\begin_layout Paragraph
Suppose 
\begin_inset Formula $(\flow,m),(\flow',m)\in\NashEquilibrium{\NLinks}{\qdemand}c$
\end_inset

, where 
\begin_inset Formula $\flow,\flow'$
\end_inset

 are as defined above
\end_layout

\begin_layout Standard
then since 
\begin_inset Formula $j\in\Supp{\flow}$
\end_inset

 and every link in the support is congested (by definition of 
\begin_inset Formula $\NashEquilibrium{\NLinks}{\qdemand}c$
\end_inset

), then 
\begin_inset Formula $m_{j}=1$
\end_inset

.
 Therefore 
\begin_inset Formula $ $
\end_inset


\begin_inset Formula $j$
\end_inset

 is also congested under assignment 
\begin_inset Formula $\flow'$
\end_inset

, thus 
\begin_inset Formula $j\in\Supp{\flow'}$
\end_inset

.
 Similarly to the first case, this leads to a contradiction since 
\begin_inset Formula $\latency[i](x'_{i},m_{i})<\latency[j](x'_{j},m_{j})$
\end_inset

, which proves that there is at most one assignment 
\begin_inset Formula $x$
\end_inset

 such that 
\begin_inset Formula $(x,m)\in\NashEquilibrium{\NLinks}{\qdemand}c$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
This shows that there are at most 
\begin_inset Formula $2N$
\end_inset

 Nash equilibria for the instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

: 
\begin_inset Formula $\NLinks$
\end_inset

 single link free-flow equilibria, corresponding to congestion states 
\begin_inset Formula $m=(0,\dots,0)$
\end_inset

, 
\begin_inset Formula $m=(1,0,\dots,0)$
\end_inset

, 
\begin_inset Formula $\dots$
\end_inset

, 
\begin_inset Formula $m=(1,\dots,1,0)$
\end_inset

, and 
\begin_inset Formula $N$
\end_inset

 congested equilibria, corresponding to congestion states 
\begin_inset Formula $m=(1,0,\dots,0)$
\end_inset

, 
\begin_inset Formula $\dots$
\end_inset

, 
\begin_inset Formula $m=(1,\dots,1)$
\end_inset

.
 Next, we characterize single link free-flow equilibria.
\end_layout

\begin_layout Subsection
Single link free-flow Equilibria
\end_layout

\begin_layout Standard
Consider a Nash equilibrium 
\begin_inset Formula $(x,m)$
\end_inset

 and let 
\begin_inset Formula $k=\max\left\{ \Supp{\flow}\right\} $
\end_inset

.
 Assume 
\begin_inset Formula $m_{k}=0$
\end_inset

 (i.e.
 
\begin_inset Formula $(x,m)$
\end_inset

 is a free-flow Nash equilibrium).
 We have from Corollary 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:atmost1ff"

\end_inset

 that links 
\begin_inset Formula $\left\{ 1,\dots,k-1\right\} $
\end_inset

 are congested and link 
\begin_inset Formula $k$
\end_inset

 is in free-flow.
 Therefore we must have 
\begin_inset Formula $\forall n\in\left\{ 1,\dots,k-1\right\} $
\end_inset

, 
\begin_inset Formula $l_{n}(x_{n},1)=l_{k}(x_{k},0)=a_{k}$
\end_inset

.
 This uniquely determines the flow on congested links 
\begin_inset Formula $n\in\left\{ 1,\dots,k-1\right\} $
\end_inset

.
 We define this flow to be 
\begin_inset Formula $\cffFlow nk$
\end_inset

.
 More precisely,
\end_layout

\begin_layout Definition

\series bold
Congestion flow
\end_layout

\begin_layout Definition
For 
\begin_inset Formula $1\leq n<k\leq N$
\end_inset

, the congestion flow 
\begin_inset Formula $\cffFlow nk$
\end_inset

 is defined as the unique flow in 
\begin_inset Formula $(0,\flowMax[n])$
\end_inset

 that satisfies
\end_layout

\begin_layout Definition
\begin_inset Formula 
\begin{equation}
l_{n}(\cffFlow nk,1)=a_{k}\label{eq:x_hat}
\end{equation}

\end_inset


\end_layout

\begin_layout Proposition

\series bold
Congestion Flows are decreasing
\series default
 
\begin_inset Formula 
\begin{equation}
\cffFlow{\link}k=l_{n}(\cdot,1)^{-1}(a_{k})\label{eq:x_hat_alt_def}
\end{equation}

\end_inset

 is a decreasing function of 
\begin_inset Formula $k$
\end_inset

 since 
\begin_inset Formula $a_{k}$
\end_inset

 is increasing in 
\begin_inset Formula $k$
\end_inset

 and 
\begin_inset Formula $l_{n}(\cdot,1)^{-1}$
\end_inset

 is decreasing.
\end_layout

\begin_layout Standard
We can now characterize single link free-flow equilibria.
 All single link free-flow equilibria are of the form 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\left(\opneFlow kr,\cffMode k\right)$
\end_inset

 where
\end_layout

\begin_layout Standard
\begin_inset Formula $ $
\end_inset


\begin_inset Formula 
\begin{equation}
\bar{\Mode}^{k}\coloneqq(\stackrel{1}{1},\dots,\stackrel{k-1}{1},\stackrel{k}{0},\dots,\stackrel{N}{0})\label{eq:m_bar}
\end{equation}

\end_inset

 
\begin_inset Formula 
\begin{equation}
\opneFlow k{\qdemand}:=(\overset{1}{\cffFlow 1k},\dots,\overset{k-1}{\cffFlow{k-1}k},r-\sum_{\link=1}^{k-1}\cffFlow{\link}k,0,\dots,\stackrel{\NLinks}{0})\label{eq:x_bar}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Illustrations of Equations 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:x_hat"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:m_bar"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:x_bar"

\end_inset

 are shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:xbar-and-hat-defns"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/presentation/DefinitionXHat.pdf
	width 1.7in
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Examples of congestion flows 
\begin_inset Formula $\hat{x_{n}(k)}$
\end_inset

.
\begin_inset CommandInset label
LatexCommand label
name "fig:xhat"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/presentation/DefinitionXBar.pdf
	width 1.7in
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Example of a single link free-flow assignment 
\begin_inset Formula $(\bar{x}^{3,\qdemand},\bar{m}^{3})$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption

\begin_layout Plain Layout
Graphical illustration of single link free-flow Nash equilibria.
\begin_inset CommandInset label
LatexCommand label
name "fig:xbar-and-hat-defns"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Proposition

\series bold
Single link free-flow Nash Equilibria
\end_layout

\begin_layout Proposition
\begin_inset CommandInset label
LatexCommand label
name "prop:xbar"

\end_inset

 If 
\begin_inset Formula $\bar{x}^{k,r}$
\end_inset

 is a feasible assignment, i.e.
 
\begin_inset Formula $r-\sum_{\link=1}^{k-1}\cffFlow{\link}k\in\left[0,\flowMax[k]\right]$
\end_inset

, then 
\begin_inset Formula $\left(\opneFlow kr,\cffMode k\right)$
\end_inset

 is a Nash Equilibrium for the instance 
\begin_inset Formula $(N,r)$
\end_inset

.
\end_layout

\begin_layout Proof
From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:m_bar"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:x_bar"

\end_inset

, we have that 
\begin_inset Formula $\forall i<k$
\end_inset

, 
\begin_inset Formula $\opneFlow[i]k{\qdemand}\in\left[0,\flowMax[i]\right]$
\end_inset

 and 
\begin_inset Formula $\latency[i](\opneFlow[i]k{\qdemand},\bar{\Mode}_{i}^{k})=\parA[k]$
\end_inset

.
 And since 
\begin_inset Formula $\cffMode[k]k=0$
\end_inset

 by definition of 
\begin_inset Formula $\bar{m}_{k}$
\end_inset

, we also have 
\begin_inset Formula $\latency[k](\opneFlow[k]k{\qdemand},\bar{\Mode}_{k}^{k})=\parA[k]$
\end_inset

.
 All links 
\begin_inset Formula $\link>k$
\end_inset

 are not in 
\begin_inset Formula $\Supp{\opneFlow k{\qdemand}},$
\end_inset

 and have a latency greater than 
\begin_inset Formula $\parA[k]$
\end_inset

.
 Therefore, we have that 
\begin_inset Formula $\forall\link\in\Supp{\opneFlow k{\qdemand}}$
\end_inset

, 
\begin_inset Formula $\latency[\link](\opneFlow[n]k{\qdemand},\bar{\Mode}_{n}^{k})=\parA[k]$
\end_inset

 and 
\begin_inset Formula $\forall\link\notin\Supp{\opneFlow k{\qdemand}}$
\end_inset

, 
\begin_inset Formula $l_{n}(\opneFlow[n]k{\qdemand},\bar{\Mode}_{n}^{k})>a_{k}$
\end_inset

, which satisfies the definition of a Nash equilibrium.
\end_layout

\begin_layout Subsection
\begin_inset Formula $2\NLinks$
\end_inset

 Nash equilibria is a tight upper bound
\end_layout

\begin_layout Standard
To show that 
\begin_inset Formula $2\NLinks$
\end_inset

 Nash equilibria is a tight upper bound, we consider a class of latencies
 for which the bound is attained.
 Let 
\begin_inset Formula $\epsilon=\frac{1}{\NLinks}\underset{\link\in\left\{ 1,\ldots\NLinks\right\} }{\min}\flowMax[\link]$
\end_inset

.
 Then any network that satisfies 
\begin_inset Formula $\forall i<j,0<\cffFlow ij\le\epsilon$
\end_inset

, the upper bound is attained with demand 
\begin_inset Formula $\qdemand=\NLinks\epsilon$
\end_inset

.
\end_layout

\begin_layout Standard
We first show 
\begin_inset Formula $\NLinks$
\end_inset

 single link free-flow equilibria are attained.
 Using Proposition 
\begin_inset CommandInset ref
LatexCommand ref
reference "prop:xbar"

\end_inset

, we need only to show 
\begin_inset Formula $\forall\link\in\left\{ 1,\ldots,\NLinks\right\} $
\end_inset

, 
\begin_inset Formula $0\le\opneFlow[\link]{\link}{\qdemand}\le\flowMax[\link]$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\flowMax[\link] & \ge & \NLinks\epsilon\ge\NLinks\epsilon-\sum_{i=1}^{\link-1}\cffFlow i{\link}=\opneFlow[\link]{\link}{\qdemand}\\
 & \ge & \NLinks\epsilon-\epsilon\left(\link-1\right)=\epsilon\left(\NLinks-n+1\right)\\
 & \ge & \epsilon\left(\NLinks-\NLinks+1\right)\ge0
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Next, we show 
\begin_inset Formula $\NLinks$
\end_inset

 completely congested equilibria are attained.
 It is clear that the feasible set of demands for a completely congested
 equilibrium with 
\begin_inset Formula $\link$
\end_inset

 links in the support is 
\begin_inset Formula $\left[\sum_{i=1}^{\link}\cffFlow i{\link+1},\sum_{i=1}^{\link-1}\cffFlow i{\link}+\flowMax[\link]\right]$
\end_inset

.
 We show 
\begin_inset Formula $\forall\link$
\end_inset

, 
\begin_inset Formula $\NLinks\epsilon$
\end_inset

 is within these bounds.
 
\begin_inset Formula 
\begin{eqnarray*}
\sum_{i=1}^{\link-1}\cffFlow i{\link}+\flowMax[\link] & \ge & \flowMax[\link]\ge\NLinks\epsilon=\qdemand\\
 & \ge & \link\epsilon\ge\sum_{i=1}^{\link}\cffFlow i{\link+1}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
An example of a set of latency functions that satisfies the assumption are:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\latency[\link]\left(\flow,1\right)=\begin{cases}
\frac{\parA[\link+1]-\parA[\link]}{\flowMax[\link]-\epsilon}\left(\flowMax[\link]-\flow\right)+\parA[\link] & \epsilon\le\flow\le\flowMax[\link]\\
-\frac{\parA[\NLinks]+\delta-\parA[\link+1]}{\epsilon}x+\left(\parA[\NLinks]+\delta\right) & 0\le\flow\le\epsilon
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
for 
\begin_inset Formula $\delta>0$
\end_inset

.
\end_layout

\begin_layout Subsection
Existence of a single-link free-flow Nash Equilibrium
\end_layout

\begin_layout Standard
From property 
\begin_inset CommandInset ref
LatexCommand formatted
reference "prop:xbar"

\end_inset

, we have a simple characterization of single link free-flow equilibria.
 Next, we show that if the set of Nash equilibria is non-empty, then it
 contains a single link free-flow equilibrium.
\end_layout

\begin_layout Lemma

\emph on
Existence of a single link free-flow Nash equilibrium
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lemma:slff"

\end_inset

Consider instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

.
 If the set of Nash equilibria is non empty, 
\begin_inset Formula $\NashEquilibrium{\NLinks}{\qdemand}{}\neq\emptyset$
\end_inset

, then there exists a single link free-flow Nash equilibrium 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\left(\opneFlow j{\qdemand},\cffMode j\right)\in\NashEquilibrium{\NLinks}{\qdemand}{}$
\end_inset

 for some 
\begin_inset Formula $j\leq N$
\end_inset

.
\end_layout

\begin_layout Proof
We first observe that for a network of 
\begin_inset Formula $\NLinks$
\end_inset

 links, the maximum demand 
\begin_inset Formula $r$
\end_inset

 such that 
\begin_inset Formula $\NashEquilibrium{\NLinks}r{}\neq\emptyset$
\end_inset

 is 
\begin_inset Formula $\max_{k\in\left\{ 1,\dots,\NLinks\right\} }\left\{ \flowMax[k]+\sum_{\link=1}^{k-1}\cffFlow{\link}k\right\} $
\end_inset

.
 We denote this quantity with 
\begin_inset Formula $\maxDemand{\NLinks}$
\end_inset

.
 Therefore, from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:filluplower"

\end_inset

, it suffices to show the following property: 
\end_layout

\begin_layout Proof
\begin_inset Formula $\mathbf{P}_{N}$
\end_inset

: 
\begin_inset Formula $\forall r\in\left[0,\maxDemand{\NLinks}\right]$
\end_inset

, there exists a single link free-flow Nash equilibrium for the instance
 
\begin_inset Formula $(\NLinks,r)$
\end_inset

.
\end_layout

\begin_layout Proof
We show 
\begin_inset Formula $\mathbf{P}_{N}$
\end_inset

 by induction on 
\begin_inset Formula $N$
\end_inset

, the size of the network.
 For 
\begin_inset Formula $N=1$
\end_inset

, it is clear that if 
\begin_inset Formula $0\le\qdemand\le\flowMax[1]$
\end_inset

, there is a single-link free-flow equilibrium 
\begin_inset Formula $(x,m)=(r,0)$
\end_inset

.
 
\end_layout

\begin_layout Proof
Now let 
\begin_inset Formula $N\geq1$
\end_inset

, assume 
\begin_inset Formula $\mathbf{P}_{N}$
\end_inset

 is true and let us show 
\begin_inset Formula $\mathbf{P}_{N+1}$
\end_inset

.
 Let 
\begin_inset Formula $0\leq\qdemand\le\maxDemand{\NLinks+1}$
\end_inset

 and consider a network instance 
\begin_inset Formula $(N+1,r)$
\end_inset

.
 
\end_layout

\begin_deeper
\begin_layout Case
If 
\begin_inset Formula $\qdemand\le\maxDemand{\NLinks}$
\end_inset

, then by the induction hypothesis there exists a single link free-flow
 Nash equilibrium 
\begin_inset Formula $(x,m)$
\end_inset

 for the instance 
\begin_inset Formula $(N,r)$
\end_inset

.
 Then assignment 
\begin_inset Formula $(x',m')$
\end_inset

 defined as 
\begin_inset Formula $x'=(x_{1},\dots,x_{N},0)$
\end_inset

 and 
\begin_inset Formula $m'=(m_{1},\dots,m_{N},0)$
\end_inset

 is clearly a single-link free-flow Nash equilibrium for the instance 
\begin_inset Formula $(N+1,r)$
\end_inset

.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Case
If 
\begin_inset Formula $\maxDemand{\NLinks}<\qdemand\le\maxDemand{\NLinks+1}$
\end_inset

 then we can show that 
\begin_inset Formula $\left(\opneFlow{N+1}{\qdemand},\cffMode{N+1}\right)\in\NashEquilibrium{\NLinks+1}{\qdemand}{}$
\end_inset

.
 From Proposition 
\begin_inset CommandInset ref
LatexCommand formatted
reference "prop:xbar"

\end_inset

, we only need to show that
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{-0.10in}
\end_layout

\end_inset

 
\begin_inset Formula 
\begin{equation}
0\leq\qdemand-\sum_{\link=1}^{N}\cffFlow{\link}{N+1}\leq\flowMax[N+1].\label{eq:ff_existence_need_to_show}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
First, we note that since 
\begin_inset Formula $\maxDemand{\NLinks}<\maxDemand{\NLinks+1}$
\end_inset

, then 
\begin_inset Formula $\maxDemand{\NLinks+1}=\flowMax[N+1]+\sum_{\link=1}^{N}\cffFlow{\link}{N+1}$
\end_inset

, thus from 
\begin_inset Formula $\qdemand<\maxDemand{\NLinks+1}$
\end_inset

, we have 
\begin_inset Formula $r\leq\flowMax[N+1]+\sum_{\link=1}^{N}\cffFlow{\link}{N+1}$
\end_inset

 which proves the second inequality of 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:ff_existence_need_to_show"

\end_inset

.
 To show the first inequality, we have 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
small
\end_layout

\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit

\begin_inset Formula 
\begin{align*}
r & \ge\flowMax[N]+\sum_{\link=1}^{N-1}\cffFlow{\link}N & \text{since \maxDemand{\NLinks}<\qdemand}\\
 & \ge\flowMax[N]+\sum_{\link=1}^{N-1}\cffFlow{\link}{N+1} & \text{since }\text{\cffFlow nN\geq\cffFlow n{N+1}}\\
 & \geq\cffFlow N{N+1}+\sum_{\link=1}^{N-1}\cffFlow{\link}{N+1} & \text{since }\text{\flowMax[N]\geq\cffFlow N{N+1}}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
normalsize
\end_layout

\end_inset

 which achieves the induction.
\end_layout

\end_deeper
\begin_layout Standard
Another way to interpret Lemma
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lemma:slff"

\end_inset

 is that the existence of a completely congested Nash equilibria implies
 the existence of a single link free-flow Nash equilibria.
 To show this, one can start from the existence of a completely congested
 Nash equilibria with 
\begin_inset Formula $\NLinks$
\end_inset

 links in the support.
 One can then check the feasibility of 
\begin_inset Formula $\left(\opneFlow i{\qdemand},\cffMode i\right)$
\end_inset

, with 
\begin_inset Formula $i$
\end_inset

 decreasing and starting from 
\begin_inset Formula $i=\NLinks$
\end_inset

.
 The inductive argument tells us that, while 
\begin_inset Formula $\left(\opneFlow{\NLinks}{\qdemand},\cffMode{\NLinks}\right)$
\end_inset

 is not guaranteed to be feasible, there will exist some 
\begin_inset Formula $i\in\left\{ 1,\ldots,\NLinks\right\} $
\end_inset

 such that 
\begin_inset Formula $\left(\opneFlow i{\qdemand},\cffMode i\right)$
\end_inset

 is a feasible Nash equilibrium.
 In Figure
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Illustration-of-SLFF"

\end_inset

, a completely congested Nash equilibrium is shown with 3 links in the support.
 Sequentially checking single-link free flow Nash equilibria shows that
 while 
\begin_inset Formula $i=3$
\end_inset

 turns out to be infeasible in this case (link 3 has negative flow), 
\begin_inset Formula $i=2$
\end_inset

 is able to accommodate all the flow.
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/jdr/Documents/github-projects/AGT-stackelberg/figures/presentation/ExistenceofFreeFlowNashEquilibrium.pdf
	width 2.5in

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Alternative interpretation of Lemma
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "lemma:slff"

\end_inset

.
 Starting from a completely congested equilibrium with 
\begin_inset Formula $\NLinks$
\end_inset

 links in support, one can always discover a single link free-flow equilibrium
 with fewer or equal links in the support.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Illustration-of-SLFF"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Corollary

\series bold
Cost of Equilibria
\end_layout

\begin_layout Corollary
\begin_inset CommandInset label
LatexCommand label
name "cor:ff_eq_better_than_cong_eq"

\end_inset


\end_layout

\begin_layout Corollary
If there exists a congested equilibrium 
\begin_inset Formula $(x,m)\in\NashEquilibrium{\NLinks}r{}$
\end_inset

, then there exists a single-link free-flow equilibrium 
\begin_inset Formula $(x',m')$
\end_inset

 with lower cost.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $(\flow,\Mode)\in\NashEquilibrium{\NLinks}r{}$
\end_inset

 be a congested equilibrium, i.e.
 
\begin_inset Formula $\Mode[k]=1$
\end_inset

 where 
\begin_inset Formula $k=\max\Supp{\flow}$
\end_inset

.
 Then we have 
\begin_inset Formula $r\leq\flowMax[k]+\sum_{\link=1}^{k-1}\cffFlow{\link}k$
\end_inset

 and by the property 
\begin_inset Formula $\mathbf{P}_{k}$
\end_inset

, there exists a single-link free-flow equilibrium 
\begin_inset Formula $(\tilde{x},\tilde{m})\in\NashEquilibrium kr{}$
\end_inset

, and the cost of this equilibrium is 
\begin_inset Formula $C(\tilde{x},\tilde{m})\leq a_{k}r$
\end_inset

.
 But this also provides a single-link free-flow equilibrium 
\begin_inset Formula $(x',m')$
\end_inset

 for the original instance 
\begin_inset Formula $(N,r)$
\end_inset

 defined by 
\begin_inset Formula $x'=(\tilde{x}_{1},\dots,\tilde{x}_{k},0,\dots,0)$
\end_inset

 and 
\begin_inset Formula $m'=(\tilde{m}_{1},\dots,\tilde{m}_{k},0,\dots,0)$
\end_inset

, and 
\begin_inset Formula $C(x',m')=C(\tilde{x},\tilde{m})\leq a_{k}r$
\end_inset

.
 To conclude, we simply note that the cost of the congested equilibrium
 is 
\begin_inset Formula $C(x,m)=l_{k}(x_{k},1)r>a_{k}r$
\end_inset

, thus 
\begin_inset Formula $C(x,m)>C(x',m')$
\end_inset

.
\end_layout

\begin_layout Subsection
Best Nash Equilibria
\begin_inset CommandInset label
LatexCommand label
name "sub:Best-Nash-Equilibria"

\end_inset


\end_layout

\begin_layout Standard
In order to study the inefficiency of Nash equilibria, and the improvement
 of performance that we can achieve using a Stackelberg game (where a fraction
 of the total flow is controlled by a central authority), we focus our attention
 on 
\emph on
best Nash equilibria
\emph default
 and 
\emph on
price of stability 
\emph default
as a measure of their inefficiency (see for example 
\begin_inset CommandInset citation
LatexCommand cite
key "Anshelevich2004"

\end_inset

).
 A best Nash equilibrium (BNE) is defined to be a Nash equilibrium of least
 total latency.
\end_layout

\begin_layout Definition

\series bold
Best Nash Equilibrium
\series default

\begin_inset CommandInset label
LatexCommand label
name "def:bne"

\end_inset


\begin_inset Formula 
\[
\BestNashEquilibrium{\NLinks}{\qdemand}=\underset{\left(\flow,\Mode\right)\in\NashEquilibrium{\NLinks}{\qdemand}{}}{\arg\min}\Latency\left(\flow,\Mode\right)
\]

\end_inset


\end_layout

\begin_layout Standard
We now show some interesting properties of the best Nash equilibrium:
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\BestNashEquilibrium{\NLinks}{\qdemand}$
\end_inset

 is unique.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\BestNashEquilibrium{\NLinks}{\qdemand}$
\end_inset

 is a single-link free-flow equilibrium.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\BestNashEquilibrium{\NLinks}{\qdemand}$
\end_inset

 has the smallest support of all Nash equilibria for demand 
\begin_inset Formula $\qdemand$
\end_inset

.
\end_layout

\begin_layout Standard
These properties are summarized in the following theorem.
\end_layout

\begin_layout Theorem

\series bold
Characterization of Best Nash Equilibria
\end_layout

\begin_layout Theorem
\begin_inset CommandInset label
LatexCommand label
name "theorem:minsupport"

\end_inset

 For a parallel network instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

, the unique best Nash equilibrium is the single-link free-flow equilibrium
 that has smallest support
\begin_inset Formula 
\[
\BestNashEquilibrium{\NLinks}{\qdemand}=\underset{\left(\flow,\Mode\right)\in\text{NE}_{\text{f}}(\NLinks,r)}{\arg\min}\left\{ \max\left[\Supp{\flow}\right]\right\} 
\]

\end_inset


\end_layout

\begin_layout Proof
From Corollary 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:ff_eq_better_than_cong_eq"

\end_inset

 we have that if 
\begin_inset Formula $(x,m)\in\NashEquilibrium{\NLinks}r{}$
\end_inset

 is a congested equilibrium, then these exists a single-link free-flow equilibri
um with lower cost.
 Therefore the Best Nash Equilibrium is a single-link free-flow equilibrium.
 To show that the BNE has smallest support, we simply note that if 
\begin_inset Formula $(x,m)\in\text{NE}_{\text{f}}(\NLinks,r)$
\end_inset

 is a single-link free-flow equilibrium and 
\begin_inset Formula $k=\max\Supp x$
\end_inset

, then its cost is 
\begin_inset Formula $C(x,m)=a_{k}r$
\end_inset

.
 Note that uniqueness is immediate since two single-link free-flow equilibria
 
\begin_inset Formula $(x,m)$
\end_inset

 and 
\begin_inset Formula $(x',m')$
\end_inset

 that have the same support, hence the same congestion state 
\begin_inset Formula $m=m'$
\end_inset

, coincide by Lemma 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:enumerate_nash_eq"

\end_inset

.
\end_layout

\begin_layout Standard
Theorem 
\begin_inset CommandInset ref
LatexCommand formatted
reference "theorem:minsupport"

\end_inset

 therefore provides a simple characterization of the best Nash equilibrium
 for any instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

.
 This characterization results in a simple 
\end_layout

\begin_layout Subsection
Computational complexity of finding Best Nash Equilibria
\begin_inset CommandInset label
LatexCommand label
name "sub:Computational-complexity-of"

\end_inset


\end_layout

\begin_layout Standard
In this section, we present a constructive algorithm for finding the best
 Nash equilibrium of a network instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

 and then show the running time to be in 
\begin_inset Formula $O\left(\NLinks^{2}\right)$
\end_inset

.
\end_layout

\begin_layout Standard
Algorithm 
\begin_inset CommandInset ref
LatexCommand eqref
reference "alg:bestNE"

\end_inset

 relies on the routine 
\begin_inset Formula $\texttt{freeFlowConfig}$
\end_inset

, which outputs a candidate 
\emph on
single-link-free-flow
\emph default
 assignment for the instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

, such that link 
\begin_inset Formula $i$
\end_inset

 is the last link in the support (Equation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:x_bar"

\end_inset

).
 Starting with link 1 in free-flow, 
\begin_inset Formula $\texttt{bestNE}$
\end_inset

 checks if the output of 
\begin_inset Formula $\texttt{freeFlowConfig}$
\end_inset

 is a feasible assignment.
 If this is the case, the candidate assignment is the Best Nash Equilibrium,
 and 
\begin_inset Formula $\texttt{bestNE}$
\end_inset

 terminates.
 If not, the free-flow link index is incremented by one, and the process
 is repeated until either a feasible assignment is found, or the number
 of links exceeds 
\begin_inset Formula $\NLinks$
\end_inset

, in which case no Nash equilibrium exists.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "../common-files/algo.raw"
lstparams "basicstyle={\\ttfamily \\footnotesize},mathescape"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Best Nash Equilibrium
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "alg:bestNE"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We first note from Algorithm 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:bestNE"

\end_inset

 that from the definition of 
\begin_inset Formula $\cffFlow ij$
\end_inset

, we can precompute 
\begin_inset Formula $\cffFlow ij\forall1\leq i<j\leq N)$
\end_inset

 in 
\begin_inset Formula $O\left(\NLinks^{2}\right)$
\end_inset

.
 The subroutine 
\begin_inset Formula $ $
\end_inset


\begin_inset Formula $\texttt{freeFlowConfig}$
\end_inset

 runs in 
\begin_inset Formula $O\left(\NLinks\right)$
\end_inset

 time.
 Finally, for each loop of the 
\begin_inset Formula $\texttt{bestNE}$
\end_inset

 outer routine (with 
\begin_inset Formula $\NLinks$
\end_inset

 iterations), the running time is a constant plus the running time of 
\begin_inset Formula $\texttt{freeFlowConfig}$
\end_inset

.
 Therefore, the overall running time of the algorithm is 
\begin_inset Formula $O(\NLinks^{2})+\NLinks O(\NLinks)=O(\NLinks^{2})$
\end_inset

.
\end_layout

\begin_layout Section
Inefficiency of Best Nash Equilibria
\begin_inset CommandInset label
LatexCommand label
name "sec:Inefficiency"

\end_inset


\end_layout

\begin_layout Standard
To study the inefficiency of Nash equilibria, in particular of the best
 Nash equilibrium, we use price of stability as a measure of inefficiency
 
\begin_inset CommandInset citation
LatexCommand cite
key "Anshelevich2004"

\end_inset

.
 Price of stability is defined as the ratio between the cost of the best
 Nash Equilibrium and the social optimal cost.
 We first compute the cost of the social optimum, then consider a simple
 two link parallel network and derive the price of stability for a triangular
 fundamental diagram.
 We show how this example illustrates the dependency of the price of stability
 on the flow demand and the free-flow latencies.
\end_layout

\begin_layout Subsection
Social Optima
\begin_inset CommandInset label
LatexCommand label
name "sec:Social-Optima"

\end_inset


\end_layout

\begin_layout Standard
Consider an instance 
\begin_inset Formula $(N,\qdemand)$
\end_inset

 where the flow demand 
\begin_inset Formula $r$
\end_inset

 does not exceed the maximum capacity of the network 
\begin_inset Formula $r\leq\sum_{n}\flow[\link]^{\max}$
\end_inset

.
 Since the total cost function is 
\begin_inset Formula $C(\flow,\Mode)=\sum_{n=1}^{\NLinks}\flow[n]l_{n}(\flow[n],\Mode[n])$
\end_inset

, the social optimum of the network is a solution to the following optimization
 problem, 
\begin_inset Formula $\textit{Social Optimum }(SO)$
\end_inset

 
\begin_inset Formula 
\begin{flalign*}
\underset{\flow\in\Rea[\NLinks],\Mode\in\left\{ 0,1\right\} ^{\NLinks}}{\text{minimize}} & \sum_{n=1}^{\NLinks}\flow[n]l_{n}(\flow[n],\Mode[n])\\
\text{subject to} & \sum_{n=1}^{\NLinks}\flow[\link]=r\\
 & \flow[n]\in[0,\flowMax[n]]
\end{flalign*}

\end_inset


\end_layout

\begin_layout Standard
This problem is non-convex since its feasible set is not convex (integer
 constraint on 
\begin_inset Formula $m$
\end_inset

).
 However, we prove that the solutions to this optimization problem are necessari
ly in free-flow (
\begin_inset Formula $\Mode=0$
\end_inset

), thus the social optimum can be computed by solving an equivalent linear
 program.
\end_layout

\begin_layout Lemma

\series bold
Social optima are in free-flow
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lemma:socialOpt_is_ff"

\end_inset

 
\begin_inset Formula $(x^{*},\Mode^{*})$
\end_inset

 is optimal for 
\begin_inset Formula $(SO)$
\end_inset

 only if 
\begin_inset Formula $\Mode[i]{}^{*}=0\quad\forall i\in\left\{ 1,\ldots,\NLinks\right\} $
\end_inset

 
\end_layout

\begin_layout Proof
This follows immediately from the fact the latency on a link in congestion
 is always greater than the latency of the link in free-flow 
\begin_inset Formula $l_{n}(\flow[n],1)>l_{n}(\flow[n],0)$
\end_inset

 
\begin_inset Formula $\forall\flow[n]\in(0,\flowMax[n])$
\end_inset

.
\end_layout

\begin_layout Standard
As a consequence of the previous Lemma, and using the fact that the latency
 is constant in free-flow 
\begin_inset Formula $l_{n}(\flow[n],0)=\parA[n]$
\end_inset

, the social optimum can be computed by solving the following equivalent
 linear program 
\begin_inset Formula 
\begin{alignat*}{1}
\underset{\flow\in\Rea[\NLinks]}{\text{minimize}} & \sum_{n=1}^{\NLinks}\flow[n]\parA[n]\\
\text{subject to } & \sum_{n=1}^{\NLinks}\flow[\link]=r\\
 & \flow[n]\in[0,\flowMax[n]]
\end{alignat*}

\end_inset


\end_layout

\begin_layout Standard
Then since the links are ordered by increasing free-flow latency 
\begin_inset Formula $a_{1}<\dots<a_{N}$
\end_inset

, the social optimum is simply given by the assignment that saturates most
 efficient links first.
 Formally, if 
\begin_inset Formula $k_{0}=\max\{k|r>\sum_{n=1}^{k}x_{n}^{\max}\}$
\end_inset

 then the social optimal assignment 
\begin_inset Formula $x^{*}$
\end_inset

 is given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\flow^{*}=(\flowMax[1],\dots,\flowMax[k_{0}],\qdemand-\sum_{n=1}^{k_{0}}\flowMax[n],0,\dots,0)\label{eq:so}
\end{align}

\end_inset


\end_layout

\begin_layout Subsection
Price of stability on a two-link network
\begin_inset CommandInset label
LatexCommand label
name "sec:Price-of-Stability"

\end_inset


\end_layout

\begin_layout Standard
In this section, we characterize the loss of efficiency of Nash equilibria
 by comparing them to the social optimum on a simple two-link parallel network.
 To characterize the loss of efficiency of Nash equilibria several metrics
 have been used including price of anarchy 
\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2004bounding,roughgarden2002bad"

\end_inset

 and price of stability 
\begin_inset CommandInset citation
LatexCommand cite
key "Anshelevich2004"

\end_inset

.
 The price of anarchy is defined as the ratio between the cost of the worst
 Nash equilibrium and the the social optimum cost, while the price of stability
 is defined as the ratio between the best Nash equilibrium and the social
 optimal cost.
 For the case of non-decreasing latency functions, the price of anarchy
 and the price of stability coincide since all Nash equilibria have the
 same cost by the essential uniqueness property
\begin_inset Note Note
status open

\begin_layout Plain Layout
add reference for the essential uniqueness property
\end_layout

\end_inset

.
 Since we focus our analysis on the best Nash equilibrium, we use as a metric
 the price of stability.
\end_layout

\begin_layout Standard
Consider a network instance 
\begin_inset Formula $(2,r)$
\end_inset

 such that 
\begin_inset Formula $\parA[1]<\parA[2]$
\end_inset

 and 
\begin_inset Formula $\flowMax[2]+\cffFlow 12>\flowMax[1]$
\end_inset

.
 Let 
\begin_inset Formula $\BestNashEquilibrium 2{\qdemand}=\left(\flow[\text{BNE}](r),\Mode[\text{BNE}](r)\right)$
\end_inset

 be the best Nash equilibrium and 
\begin_inset Formula $\left(x_{\text{SO}}(r),0\right)$
\end_inset

 be the social optimum, as defined by 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:so"

\end_inset

.
 The price of stability is then defined as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\POS Nr=\frac{\Latency\left(\flow[\text{BNE}](r),\Mode[\text{BNE}](r)\right)}{\Latency\left(\flow[\text{SO}],0\right)}
\]

\end_inset


\end_layout

\begin_layout Standard
From the expression 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:so"

\end_inset

 of the social optimum and the characterization of the best Nash equilibrium
 in Theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "theorem:minsupport"

\end_inset

, we only need to consider the following two cases:
\end_layout

\begin_layout Paragraph
Case 1: 
\begin_inset Formula $0\le\qdemand\le\flowMax[1]$
\end_inset


\end_layout

\begin_layout Standard
Using 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:so"

\end_inset

, all the demand will be on link 1 in free-flow.
 Similarly, from Theorem 
\begin_inset CommandInset ref
LatexCommand formatted
reference "theorem:minsupport"

\end_inset

 we have that since link 1 can accommodate 
\begin_inset Formula $\qdemand$
\end_inset

 in free-flow and the support cannot be smaller than a single link, then
 
\begin_inset Formula $\BestNashEquilibrium 2{\qdemand}$
\end_inset

 has all flow demand on link 1 in free-flow, and is equivalent to the social
 optimum.
 In this case, the price of stability is equal to 1, i.e there is no decrease
 in efficiency due to selfish routing.
\end_layout

\begin_layout Paragraph
Case 2: 
\begin_inset Formula $\flowMax[1]<\qdemand\leq\flowMax[2]+\cffFlow 12$
\end_inset


\end_layout

\begin_layout Standard
We know that all flow demand cannot be accommodated by link 1.
 From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:so"

\end_inset

, the social optimum assignment is given by 
\begin_inset Formula $x_{\text{SO}}(r)=(\flowMax[1],\qdemand-\flowMax[1])$
\end_inset

.
 From Theorem
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "theorem:minsupport"

\end_inset

 we have that 
\begin_inset Formula $\BestNashEquilibrium 2{\qdemand}$
\end_inset

 has a single link in free-flow.
 Since the total demand exceeds the capacity of link 
\begin_inset Formula $1$
\end_inset

, then under a best Nash equilibrium, link 2 is in free-flow, and link 1
 is congested.
 Therefore 
\begin_inset Formula $\Mode[\text{NE}](r)=(1,0)$
\end_inset

.
 From Algorithm 
\begin_inset CommandInset ref
LatexCommand formatted
reference "alg:bestNE"

\end_inset

, the corresponding flow 
\begin_inset Formula $\flow[\text{NE}](r)$
\end_inset

 will be 
\begin_inset Formula $(\cffFlow 12,\qdemand-\cffFlow 12)$
\end_inset

.
 The comparison of the social optimum and Nash equilibrium assignments are
 depicted in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:sone"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/TwoLinkPOSSO.pdf
	width 1.7in
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Social optimum
\begin_inset CommandInset label
LatexCommand label
name "fig:Social-optimum"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/TwoLinkPOSBNE.pdf
	width 1.7in
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Nash equilibrium
\begin_inset CommandInset label
LatexCommand label
name "fig:Nash-equilibrium"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/POSTwoLink.pdf
	height 1.2in
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
POS as a function of demand.
\begin_inset CommandInset label
LatexCommand label
name "fig:POS-plot"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Visualization of POS on two-link network.
 Differences in flow assignments between social optimum and Nash equilibrium
 are shown in 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Social-optimum"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Nash-equilibrium"

\end_inset

.
 The area of the shaded regions in are the total costs attributed to each
 link.
 In 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:POS-plot"

\end_inset

, the flat region corresponds to Case 1 and the decreasing region to Case
 2.
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:sone"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Computing the price of stability when 
\begin_inset Formula $\qdemand>\flowMax[1]$
\end_inset

 reveals where the inefficiencies lie in the Nash equilibrium
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\POS 2r & = & \frac{\parA[2]\cffFlow 12+\parA[2]\left(\qdemand-\cffFlow 12\right)}{\parA[1]\flowMax[1]+\parA[2]\left(\qdemand-\flowMax[1]\right)}\\
 & = & \frac{\parA[2]\qdemand}{\qdemand\parA[2]-\flowMax[1]\left(\parA[2]-\parA[1]\right)}\\
 & = & \frac{1}{1-\frac{\flowMax[1]}{\qdemand}\left(1-\frac{\parA[1]}{\parA[2]}\right)}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
In this simple two-link parallel network, the price of stability is maximal
 at 
\begin_inset Formula $r=\flowMax[1]$
\end_inset

 and equal to 
\begin_inset Formula $\frac{a_{2}}{a_{1}}$
\end_inset

 (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:POS-plot"

\end_inset

).
 This shows in particular that for the general class of horizontal queuing
 congestion latencies, the price of stability is unbounded, since for any
 demand 
\begin_inset Formula $r$
\end_inset

 and any positive constant 
\begin_inset Formula $A$
\end_inset

, we can design an instance 
\begin_inset Formula $(2,r)$
\end_inset

 such that the price of stability is 
\begin_inset Formula $\frac{a_{2}}{a_{1}}>A$
\end_inset

.
\end_layout

\begin_layout Standard
Also note that for a fixed flow demand 
\begin_inset Formula $r>\flowMax[1]$
\end_inset

, the price of stability is an increasing function of 
\begin_inset Formula $\frac{a_{2}}{a_{1}}$
\end_inset

.
 And as 
\begin_inset Formula $\parA[2]\rightarrow\parA[1]$
\end_inset

, the price of stability goes to 1.
 Intuitively, the inefficiency of Nash equilibria can be directly attributed
 to the difference in free-flow latency between the links.
\end_layout

\begin_layout Standard
Additionally, as the demand 
\begin_inset Formula $r\geq\flowMax[1]$
\end_inset

 increases, the price of stability decreases.
 This occurs because the difference in total latency between social optimum
 and Nash equilibrium is constant for 
\begin_inset Formula $r\geq\flowMax[1]$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Alex: Rephrase in non-transportation network.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This also shows that selfish routing is most costly when a free-flow link
 is near maximum capacity (note the discontinuity in total latency for Nash
 equilibrium that occurs when demand exceeds the capacity of the first link
 
\begin_inset Formula $\qdemand>\flowMax[1]$
\end_inset

).
 If a controller were to anticipate a scenario where demand was slightly
 above this capacity, they could dramatically reduce the inefficiency of
 the Nash equilibrium by rerouting a small fraction of the flow and keeping
 the link in free-flow.
 This leads to defining a Stackelberg game where a leader, or a central
 authority, controls a fraction of the flow in order to improve the total
 latency on the network.
\end_layout

\begin_layout Section
Stackelberg routing
\begin_inset CommandInset label
LatexCommand label
name "sec:Stackelberg-routing"

\end_inset


\end_layout

\begin_layout Standard
In order to reduce the inefficiency of the network due to selfish routing
 and lack of coordination, we assume that a fraction of the flow is centrally
 controlled, and we investigate possible strategies for improving the equilibria
 of the network.
 Leader-follower routing games have been considered in the transportation
 literature 
\begin_inset CommandInset citation
LatexCommand cite
key "harker1988multiple,haurie1985relationship"

\end_inset

 and more recently 
\begin_inset CommandInset citation
LatexCommand cite
key "aswani2011game,joksimovicdifferent"

\end_inset

.
 However, latency functions considered in the previous literature do not
 model decrease in flow on a link as a result of density buildup, while
 the class of latency functions introduced in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:The-Model"

\end_inset

 better models horizontal queuing.
 In this section, we setup the problem and introduce useful definitions.
 In the next section, we show that optimal Stackelberg strategies for this
 new class of latency can be computed in polynomial time, and give a constructiv
e algorithm for computing such an optimal strategy.
\end_layout

\begin_layout Subsection
Stackelberg routing game
\end_layout

\begin_layout Standard
We consider the following problem: given a network instance 
\begin_inset Formula $(N,r)$
\end_inset

 under constant flow demand 
\begin_inset Formula $r$
\end_inset

, assume a coordinator (a central authority) has control over a fraction
 
\begin_inset Formula $\compRate$
\end_inset

 of the flow: the corresponding agents are 
\emph on
compliant
\emph default
 and willing to let the coordinator choose their routes.
 The coordinator (who plays the role of the leader in the Stackelberg game)
 assigns the compliant flow 
\begin_inset Formula $\compRate r$
\end_inset

 according to a Stackelberg strategy 
\begin_inset Formula $s$
\end_inset

 that is a feasible flow assignment for the instance 
\begin_inset Formula $(\NLinks,\compRate\qdemand)$
\end_inset

, i.e.
 
\begin_inset Formula $s$
\end_inset

 satisfies: 
\begin_inset Formula $\cFlow[\link]\leq\flow[\link]^{\max}\,\forall n\leq N$
\end_inset

 and 
\begin_inset Formula $\sum_{n}\cFlow[\link]=\compRate r$
\end_inset

.
\end_layout

\begin_layout Standard
We assume that the remaining flow 
\begin_inset Formula $(1-\compRate)r$
\end_inset

 represents selfish agents (who play the role of followers in the Stackelberg
 game), who will choose their routes after the Stackelberg strategy 
\begin_inset Formula $s$
\end_inset

 is revealed.
 This induces an assignment 
\begin_inset Formula $(\ncFlow(\cFlow),m(\cFlow))$
\end_inset

 of the selfish flow at Nash equilibrium, and we assume that the assignment
 
\begin_inset Formula $s$
\end_inset

 of compliant agents 
\emph on
is not affected
\emph default
 after introducing the non-compliant flow on the network.
 
\end_layout

\begin_layout Standard
Since 
\begin_inset Formula $s$
\end_inset

 may induce multiple Nash equilibria, we define the assignment 
\begin_inset Formula $(t(s),m(s))$
\end_inset

 to be the best such equilibrium (as defined in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Best-Nash-Equilibria"

\end_inset

).
 To characterize this Nash equilibrium, which we refer to as the 
\emph on
induced equilibrium
\emph default
 by strategy 
\begin_inset Formula $s$
\end_inset

, we note that the flow on link 
\begin_inset Formula $n$
\end_inset

 is simply 
\begin_inset Formula $\cFlow[\link]+\ncFlow[\link](\cFlow)$
\end_inset

, and we have for all 
\begin_inset Formula $n\in\Supp{t_{n}(s)}$
\end_inset

 and for all 
\begin_inset Formula $k\in\left\{ 1,\dots,N\right\} $
\end_inset

: 
\begin_inset Formula 
\[
\latency[\link]\left(\cFlow[\link]+\ncFlow[\link](\cFlow),\Mode[\link](\cFlow)\right)\leq\latency[k]\left(\cFlow[k]+\ncFlow[k](\cFlow),\Mode[k](\cFlow)\right)
\]

\end_inset

 Equivalently, all links that are in the support of the selfish flow assignment
 
\begin_inset Formula $t(s)$
\end_inset

 have a common latency 
\begin_inset Formula $\latency[0]$
\end_inset

 in the induced equilibrium, and links that are not in the support have
 latency greater than or equal to 
\begin_inset Formula $\latency[0]$
\end_inset

.
\end_layout

\begin_layout Standard
This can be summarized in the following definition of a Stackelberg strategy.
 Let 
\begin_inset Formula $(\NLinks,r,\compRate)$
\end_inset

 denote an instance of the Stackelberg game played on the network instance
 
\begin_inset Formula $(\NLinks,r)$
\end_inset

 with compliance rate 
\begin_inset Formula $\compRate$
\end_inset

.
\end_layout

\begin_layout Definition

\emph on
Stackelberg Strategy
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:stack"

\end_inset

 A Stackelberg strategy for the instance 
\begin_inset Formula $(\NLinks,r,\compRate)$
\end_inset

 is an assignment 
\begin_inset Formula $s$
\end_inset

 of the compliant flow 
\begin_inset Formula $\compRate r$
\end_inset

 that is feasible for the instance 
\begin_inset Formula $(\NLinks,\compRate\qdemand)$
\end_inset

, and which induces 
\emph on
best Nash equilibrium
\emph default
 
\begin_inset Formula $(\ncFlow(\cFlow),m(\cFlow))$
\end_inset

 of the non-compliant flow, as defined in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Best-Nash-Equilibria"

\end_inset

, such that 
\begin_inset Formula $s+t(s)$
\end_inset

 is feasible for the instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

 and 
\begin_inset Formula $\exists l_{0}>0$
\end_inset

 such that 
\begin_inset Formula 
\begin{align*}
\forall n\in\Supp{\ncFlow(\cFlow)},\, & \latency[\link]\left(\cFlow[\link]+\ncFlow[\link](\cFlow),\Mode[\link](\cFlow)\right)=\latency[0]\\
\forall n\notin\Supp{\ncFlow(\cFlow)},\, & \latency[\link]\left(\cFlow[\link],\Mode[\link](\cFlow)\right)\geq\latency[0]
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
This extends the definition usually used in the routing games literature,
 see for example 
\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2001stackelberg"

\end_inset

.
\end_layout

\begin_layout Standard
We will denote by 
\begin_inset Formula $\text{S}(\NLinks,r,\compRate)\subset\Rea[\NLinks]$
\end_inset

 the set of Stackelberg strategies for network instance 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $(\NLinks,r,\compRate)$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Note that a feasible flow assignment 
\begin_inset Formula $s$
\end_inset

 of compliant flow may fail to induce a Nash equilibrium 
\begin_inset Formula $(t,m)$
\end_inset

 and therefore is not considered to be a Stackelberg strategy.
\end_layout

\begin_layout Plain Layout
To see this, consider the following 2-link network such that link 
\begin_inset Formula $1$
\end_inset

 is faster 
\begin_inset Formula $\parA[1]<\parA[2]$
\end_inset

 and has larger capacity 
\begin_inset Formula $\flow[1]^{\max}>\flow[2]^{\max}$
\end_inset

.
 Now assume that the network is subject to flow demand 
\begin_inset Formula $r=\flow[1]^{\max}+\epsilon$
\end_inset

 and most of the flow is compliant 
\begin_inset Formula $\compRate r=\flow[1]^{\max}$
\end_inset

.
 Consider the following assignment: 
\begin_inset Formula $s=(\flow[1]^{\max},0)$
\end_inset

.
\end_layout

\begin_layout Plain Layout
Assuming that the assignment of compliant agents is not affected by introducing
 the non-compliant flow, we have for any assignment 
\begin_inset Formula $t$
\end_inset

 of non-compliant flow, 
\begin_inset Formula $t_{1}=0$
\end_inset

 and 
\begin_inset Formula $t_{2}>0$
\end_inset

.
 Therefore 
\begin_inset Formula $t$
\end_inset

 is not at Nash equilibrium since 
\begin_inset Formula $\Supp t=\{2\}$
\end_inset

 and 
\begin_inset Formula $\latency[2](s_{2}+t_{2},\Mode[2])>\latency[1](s_{1},0)$
\end_inset

 (non compliant agents are forced to use less efficient link 2).
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We next show that the induced Nash equilibrium has one link in free-flow:
\end_layout

\begin_layout Lemma

\emph on
Characterization of the induced Nash Equilibrium
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lemma:inducedNCeq"

\end_inset

Let 
\begin_inset Formula $s\in\StackSet$
\end_inset

 be a Stackelberg strategy for the Stackelberg instance 
\begin_inset Formula $(\NLinks,r,\compRate)$
\end_inset

, and 
\begin_inset Formula $(t(s),m(s))$
\end_inset

 its induced best Nash equilibrium.
 Then the last link in the support of 
\begin_inset Formula $t(s)$
\end_inset

 is in free-flow, i.e.
 
\begin_inset Formula $\Mode[\max\Supp{t(s)}]=0$
\end_inset

.
\end_layout

\begin_layout Proof
Note that 
\begin_inset Formula $(t(s),m(s))$
\end_inset

 is the best Nash equilibrium for the instance 
\begin_inset Formula $(N,\compRate r)$
\end_inset

 and latencies
\begin_inset Formula 
\begin{align*}
\tilde{{l}}_{n}:[0,\tilde{x}_{n}^{\max}]\times\left\{ 0\right\} \cup(0,\tilde{x}_{n}^{\max})\times\left\{ 1\right\}  & \longrightarrow\Rea_{+}\\
(\flow[n],\Mode[n]) & \longmapsto l_{n}(s_{n}+\flow[n],\Mode[n])
\end{align*}

\end_inset

where 
\begin_inset Formula $\tilde{x}_{n}^{\max}=\flowMax[n]-s_{n}$
\end_inset

.
 Latencies 
\begin_inset Formula $\tilde{l}_{n}$
\end_inset

 satisfy the assumptions of the horizontal queueing latencies class.
 Therefore, by Theorem 
\begin_inset CommandInset ref
LatexCommand formatted
reference "theorem:minsupport"

\end_inset

, we immediately have the result.
\end_layout

\begin_layout Subsection
Optimal Stackelberg strategies
\begin_inset CommandInset label
LatexCommand label
name "sec:Optimal-Stackelberg-strategies"

\end_inset


\end_layout

\begin_layout Standard
In this section we solve for optimal Stackelberg strategies, i.e.
 Stackelberg strategies that induce Nash equilibria of minimal cost.
\end_layout

\begin_layout Definition

\emph on
Optimal Stackelberg strategy
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:stack_eq"

\end_inset

An optimal Stackelberg strategy 
\begin_inset Formula $s^{*}$
\end_inset

 is a solution to the optimization problem 
\begin_inset Formula 
\begin{align*}
s^{*}=\arg\min_{s\in\StackSet}C\left(s+\ncFlow(\cFlow),m(\cFlow)\right)
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Here 
\begin_inset Formula $(\ncFlow(\cFlow),m(\cFlow))$
\end_inset

 is the equilibrium induced by 
\begin_inset Formula $s$
\end_inset

.
\end_layout

\begin_layout Standard
We also introduce a definition that will be useful in proving the main result.
\end_layout

\begin_layout Definition

\emph on
At least 
\begin_inset Formula $i$
\end_inset

-congested link
\end_layout

\begin_layout Definition
Consider a network under feasible flow assignment 
\begin_inset Formula $(\flow,\Mode)$
\end_inset

.
 Link 
\begin_inset Formula $n$
\end_inset

 is said to be at least 
\begin_inset Formula $i$
\end_inset

-congested (
\begin_inset Formula $i\geq n+1$
\end_inset

) under assignment 
\begin_inset Formula $(\flow,\Mode)$
\end_inset

 if it is congested 
\begin_inset Formula $(\Mode[n]=1)$
\end_inset

 and its latency is at least 
\begin_inset Formula $\parA[i]$
\end_inset

 
\begin_inset Formula 
\[
l_{n}(\flow[n],\Mode[n])\geq\parA[i]
\]

\end_inset

This is equivalent to 
\begin_inset Formula $\Mode[n]=1$
\end_inset

 and 
\begin_inset Formula $\flow[n]\leq\cffFlow ni$
\end_inset

.
 If the above holds with equality, we say that the link is exactly 
\begin_inset Formula $i$
\end_inset

-congested.
\end_layout

\begin_layout Standard
Note that if 
\begin_inset Formula $j\geq i\geq n+1$
\end_inset

, then if link 
\begin_inset Formula $n$
\end_inset

 is at least 
\begin_inset Formula $j$
\end_inset

-congested under 
\begin_inset Formula $(x,m)$
\end_inset

, then it is also at least 
\begin_inset Formula $i$
\end_inset

-congested under 
\begin_inset Formula $(x,\Mode)$
\end_inset

.
 And if 
\begin_inset Formula $(t,\Mode)$
\end_inset

 is a single link free-flow equilibrium, and 
\begin_inset Formula $k=\max\Supp t$
\end_inset

, then all links 
\begin_inset Formula $n\in\{1,\dots,k-1\}$
\end_inset

 are exactly 
\begin_inset Formula $k$
\end_inset

-congested from Equation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:x_bar"

\end_inset

.
\end_layout

\begin_layout Section
Computing the optimal Stackelberg strategy
\begin_inset CommandInset label
LatexCommand label
name "sec:Computing-the-optimal"

\end_inset


\end_layout

\begin_layout Standard
In this section, we show the following result: the optimal Stackelberg strategy
 can be computed in polynomial time for parallel networks with 
\begin_inset Formula $N$
\end_inset

 links for the class of horizontal queueing congestion functions defined
 in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:latency_class"

\end_inset

.
 This result contrasts with the class of non-decreasing latency functions
 where the optimal Stackelberg strategy is shown to be NP-hard to compute,
 see
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2001stackelberg"

\end_inset

.
 The optimal Stackelberg strategy in our setting corresponds to:
\end_layout

\begin_layout Itemize
First computing the best Nash equilibrium of non-compliant agents alone,
 
\begin_inset Formula $(\bar{t},\bar{m})=\BestNashEquilibrium N{(1-\compRate)r}$
\end_inset


\end_layout

\begin_layout Itemize
Then assigning the compliant flow by filling the remaining links (i.e.
 those that are not congested under 
\begin_inset Formula $(\bar{t},\bar{m})$
\end_inset

), up to maximum capacity, starting with the lower free-flow latencies.
 
\end_layout

\begin_layout Standard
Intuitively, the best induced Nash equilibrium 
\begin_inset Formula $(t(s),m(s))$
\end_inset

 of any Stackelberg strategy 
\begin_inset Formula $s$
\end_inset

 will be more congested than the best Nash equilibrium 
\begin_inset Formula $(\bar{t},\bar{\Mode})$
\end_inset

 of instance 
\begin_inset Formula $(\NLinks,(1-\compRate)r)$
\end_inset

.
 So if we can find a strategy 
\begin_inset Formula $\bar{s}$
\end_inset

 that induces equilibrium 
\begin_inset Formula $(\bar{t},\bar{\Mode})$
\end_inset

 and that has minimal cost, then one expects this strategy to be optimal.
 Next, we detail this idea by defining a candidate Stackelberg strategy
 
\begin_inset Formula $\bar{s}$
\end_inset

 that will later be shown to be optimal.
\end_layout

\begin_layout Subsection
A candidate Stackelberg strategy: Non-Compliant First
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $(\bar{t},\bar{m})$
\end_inset

 denote the 
\emph on
best Nash equilibrium
\emph default
 for the instance 
\begin_inset Formula $(\NLinks,(1-\compRate)\qdemand)$
\end_inset

.
 Let 
\begin_inset Formula $\bar{k}=\max\Supp{\bar{t}}$
\end_inset

 be the last link in the support of 
\begin_inset Formula $\bar{t}$
\end_inset

.
 Then we have from Equations 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:x_bar"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:m_bar"

\end_inset

, 
\begin_inset Formula $\bar{m}=(1,\dots,1,\stackrel{\bar{k}}{0},\dots,0)$
\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
small
\end_layout

\end_inset

 
\begin_inset Formula 
\[
\bar{t}=\left(\cffFlow 1{\bar{k}},\dots,\cffFlow{\bar{k}-1}{\bar{k}},(1-\compRate)\qdemand-\sum_{n=1}^{\bar{k}-1}\cffFlow n{\bar{k}},0,\dots,0\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
normalsize
\end_layout

\end_inset


\end_layout

\begin_layout Standard
i.e.
 links 
\begin_inset Formula $\{1,\dots,\bar{k}-1\}$
\end_inset

 are 
\begin_inset Formula $\bar{k}$
\end_inset

-congested, and link 
\begin_inset Formula $\bar{k}$
\end_inset

 is in free-flow.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:optimal_stackelberg_nc"

\end_inset

 shows best Nash equilibrium 
\begin_inset Formula $(\bar{t},\bar{\Mode})$
\end_inset

 on a sample network, where the latency in congestion 
\begin_inset Formula $l_{n}(.,1)$
\end_inset

 is taken to be affine for simplicity.
\end_layout

\begin_layout Standard
We now define Stackelberg strategy 
\begin_inset Formula $\bar{s}$
\end_inset

 as the optimal assignment (i.e.
 of least cost) of compliant flow 
\begin_inset Formula $\compRate\qdemand$
\end_inset

 that induces equilibrium 
\begin_inset Formula $(\bar{t},\bar{m})$
\end_inset

.
 It is easy to see that 
\begin_inset Formula $\bar{s}$
\end_inset

 is simply given by assigning the compliant flow to remaining links 
\begin_inset Formula $\{\bar{k},\bar{k}+1,\dots,\NLinks\}$
\end_inset

 successively, each up to maximum capacity.
 The strategy 
\begin_inset Formula $\bar{s}$
\end_inset

 will assign 
\begin_inset Formula $\flowMax[\bar{k}]-\bar{t}_{\bar{k}}$
\end_inset

 on link 
\begin_inset Formula $\bar{k}$
\end_inset

, then 
\begin_inset Formula $\flowMax[\bar{k}+1]$
\end_inset

 on link 
\begin_inset Formula $\bar{k}+1$
\end_inset

, 
\begin_inset Formula $\flowMax[\bar{k}+2]$
\end_inset

 on link 
\begin_inset Formula $\bar{k}+2$
\end_inset

 and so on.
 Let 
\begin_inset Formula $l=\min\{i|\compRate\qdemand-(\sum_{n=\bar{k}}^{i-1}\flowMax[n]-t_{\bar{k}})\geq0\}$
\end_inset

 be the least efficient link used by the Stackelberg assignment.
 Then 
\begin_inset Formula $\bar{s}$
\end_inset

 is given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\bar{s} & = & (0,\dots,\stackrel{\bar{k}-1}{0},\flowMax[\bar{k}]-\bar{t}_{\bar{k}},\flowMax[\bar{k}+1],\dots,\flowMax[l-1],\nonumber \\
 &  & \compRate\qdemand-(\sum_{n=\bar{k}}^{l-1}\flowMax[n]-\bar{t}_{\bar{k}}),\stackrel{l+1}{0},\dots,0)\label{eq:opt_stack_strategy}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Equivalently, the total assignment 
\begin_inset Formula $\bar{x}=\bar{s}+\bar{t}$
\end_inset

 is given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\bar{x} & = & (\cffFlow 1{\bar{k}},\dots,\cffFlow{\bar{k}-1}{\bar{k}},\flowMax[\bar{k}],\flowMax[\bar{k}+1],\dots,\flowMax[l-1],\nonumber \\
 &  & \qdemand-\sum_{n=1}^{\bar{k}-1}\cffFlow n{\bar{k}}-\sum_{n=\bar{k}}^{l-1}\flowMax[n],\stackrel{l+1}{0},\dots,0)\label{eq:opt_stack_flows}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
and the corresponding latencies are
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
(\parA[\bar{k}],\dots,\stackrel{\bar{k}+1}{\parA[\bar{k}]},\parA[\bar{k}+1],\dots,\parA[l],\stackrel{l+1}{0},\dots,0)\label{eq:opt_stack_latencies}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
We will denote by 
\begin_inset Formula $\text{NCF}(\NLinks,r,\compRate)=\bar{s}$
\end_inset

 the 
\emph on
non-compliant first
\emph default
 strategy for the Stackelberg instance 
\begin_inset Formula $(\NLinks,r,\compRate)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/optimal_stackelberg1.pdf
	width 1.6in

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Best Nash equilibrium 
\begin_inset Formula $(\bar{t},\bar{\Mode})$
\end_inset

 of non-compliant flow 
\begin_inset Formula $(1-\compRate)r$
\end_inset

.
 All links in the support 
\begin_inset Formula $\left\{ 1,\dots,k\right\} $
\end_inset

 have the same latency 
\begin_inset Formula $a_{k}$
\end_inset

.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:optimal_stackelberg_nc"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $\quad$
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/optimal_stackelberg2.pdf
	width 1.6in

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Equilibrium induced by candidate Stackelberg strategy 
\begin_inset Formula $\bar{s}$
\end_inset

.
 Flows that correspond to the Stackelberg strategy 
\begin_inset Formula $\bar{s}$
\end_inset

 are highlighted.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:optimal_stackelberg_total"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $\quad$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Non-compliant first (NCF) strategy.
 In this example, latencies are taken to be affine in congestion for simplicity,
 the results hold for the general class of horizontal queueing latencies.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:optimal_stackelberg_total"

\end_inset

 shows the total flow 
\begin_inset Formula $\bar{x}_{n}=\bar{s}_{n}+\bar{t}_{n}$
\end_inset

 on each link.
 Links 
\begin_inset Formula $\left\{ 1,\dots,\bar{k}-1\right\} $
\end_inset

 are exactly 
\begin_inset Formula $\bar{k}$
\end_inset

-congested, links 
\begin_inset Formula $\left\{ \bar{k},\dots,l-1\right\} $
\end_inset

 are in free-flow and at maximum capacity, and the remaining flow goes on
 link 
\begin_inset Formula $l$
\end_inset

.
\end_layout

\begin_layout Standard
In the next section we show that strategy 
\begin_inset Formula $\bar{s}$
\end_inset

 is indeed an optimal Stackelberg strategy.
\end_layout

\begin_layout Subsection
The Non-Compliant First strategy is optimal
\end_layout

\begin_layout Theorem

\emph on
Optimal Stackelberg Strategy
\begin_inset CommandInset label
LatexCommand label
name "theorem:NCFoptimal"

\end_inset


\end_layout

\begin_layout Theorem
\begin_inset Formula $\bar{s}=\text{NCF}(\NLinks,r,\compRate)$
\end_inset

 is an optimal Stackelberg strategy for the Stackelberg instance 
\begin_inset Formula $(\NLinks,r,\compRate)$
\end_inset

.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $s\in S(\NLinks,r,\compRate)$
\end_inset

 be a Stackelberg strategy for the Stackelberg instance 
\begin_inset Formula $(N,r,\compRate)$
\end_inset

 and 
\begin_inset Formula $(t,\Mode)=(t(s),m(s))$
\end_inset

 be the best induced Nash equilibrium for the non-compliant flow.
 We will show that 
\begin_inset Formula $C(x,\Mode)\geq C(\bar{x},\bar{\Mode})$
\end_inset

, where 
\begin_inset Formula $x=s+t$
\end_inset

 and 
\begin_inset Formula $\bar{x}=\bar{s}+\bar{t}$
\end_inset

.
\end_layout

\begin_layout Proof
\noindent
The proof proceeds as follows: we first show that links 
\begin_inset Formula $\{1,\dots,l-1\}$
\end_inset

 are more congested under assignment 
\begin_inset Formula $(x,m)$
\end_inset

 than under 
\begin_inset Formula $(\bar{x},\bar{m})$
\end_inset

, in the following sense: these links have worse latency 
\begin_inset Formula $\latency[n](x_{n},m_{n})\geq\latency[n](\bar{x}_{n},\bar{m}_{n})$
\end_inset

, and hold less flow 
\begin_inset Formula $x_{n}\leq\bar{x}_{n}$
\end_inset

.
 Then we conclude by lower bounding the cost 
\begin_inset Formula $C(x,m)$
\end_inset

.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $k=\max\Supp t$
\end_inset

 be the link with largest free-flow latency, in the support of the non-compliant
 flow.
 By Lemma
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "lemma:inducedNCeq"

\end_inset

, we have 
\begin_inset Formula $\Mode[k]=0$
\end_inset

, i.e.
 link 
\begin_inset Formula $k$
\end_inset

 is in free-flow under assignment 
\begin_inset Formula $(x,\Mode)=(s+t,m)$
\end_inset

.
 We start by showing that 
\begin_inset Formula $k\geq\bar{k}$
\end_inset

 where 
\begin_inset Formula $\bar{k}=\max\Supp{\bar{t}}$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Lemma

\emph on
Comparing the supports of induced equilibria
\end_layout

\begin_layout Lemma
The last link in the support of 
\begin_inset Formula $t(s)$
\end_inset

 has higher free-flow latency than the last link in the support of 
\begin_inset Formula $\bar{t}$
\end_inset

: 
\begin_inset Formula $k\geq\bar{k}$
\end_inset

.
 
\end_layout

\begin_layout Standard
Intuitively, since 
\begin_inset Formula $(\bar{t},\bar{m})$
\end_inset

 is the 
\emph on
best Nash equilibrium
\emph default
 of the non-compliant agents when they are not sharing the network with
 any other flow, the cost of this assignment 
\begin_inset Formula $(\bar{t},\bar{\Mode})$
\end_inset

 is less than the cost of any equilibrium after introducing additional flow
 
\begin_inset Formula $s$
\end_inset

.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Proof
First note that 
\begin_inset Formula $(s+t(s),m)$
\end_inset

 restricted to 
\begin_inset Formula $\Supp{t(s)}$
\end_inset

 is at Nash equilibrium.
 Then since link 
\begin_inset Formula $k$
\end_inset

 is in free-flow we have 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $l_{k}(s_{k}+t_{k}(s),m_{k})=a_{k}$
\end_inset

,
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 and since 
\begin_inset Formula $k\in\Supp{t(s)}$
\end_inset

, we have by Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:stack"

\end_inset

 that any other link has higher latency.
 In particular, 
\begin_inset Formula $\forall i\in\left\{ 1,\dots k-1\right\} $
\end_inset

, 
\begin_inset Formula $l_{i}(s_{i}+t_{i}(s),m_{i})\geq a_{k}$
\end_inset

, thus 
\begin_inset Formula $s_{i}+t_{i}(s)\leq\cffFlow ik$
\end_inset

.
 Therefore we have 
\begin_inset Formula $\sum_{n=1}^{k}s_{n}+t_{n}(s)\leq\sum_{n=1}^{k-1}\cffFlow nk+\flowMax[k]$
\end_inset

.
 But 
\begin_inset Formula $\sum_{n=1}^{k}(s_{n}+t_{n}(s))\geq\sum_{n\in\Supp t}t_{n}(s)=(1-\compRate)r$
\end_inset

 since 
\begin_inset Formula $\Supp t\subseteq\left\{ 1,\dots,k\right\} $
\end_inset

.
 Therefore
\end_layout

\begin_layout Proof
\begin_inset Formula 
\[
(1-\compRate)r\leq\sum_{n=1}^{k-1}\cffFlow nk+\flowMax[k]
\]

\end_inset


\end_layout

\begin_layout Proof
and by Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lemma:slff"

\end_inset

 applied to a network with 
\begin_inset Formula $k$
\end_inset

 links, this guarantees the existence of a single-link free-flow Nash Equilibriu
m for the network instance 
\begin_inset Formula $(k,(1-\compRate)r)$
\end_inset

.
 Let 
\begin_inset Formula $(\tilde{t},\tilde{m})\in\Rea[k]\times\left\{ 0,1\right\} ^{k}$
\end_inset

 be such an equilibrium.
 The cost of 
\begin_inset Formula $(\tilde{t},\tilde{m})$
\end_inset

 is 
\begin_inset Formula $(1-\compRate)rl_{0}$
\end_inset

 where 
\begin_inset Formula $l_{0}\leq a_{k}$
\end_inset

 is the free-flow latency of the last link in the support of 
\begin_inset Formula $\tilde{t}$
\end_inset

.
 Thus 
\begin_inset Formula $C(\tilde{t},\tilde{m})\leq(1-\compRate)ra_{k}$
\end_inset

.
\end_layout

\begin_layout Proof
Then 
\begin_inset Formula $((\tilde{t}_{1},\dots,\tilde{t}_{k},0,\dots,0),(\tilde{m}_{1},\dots,\tilde{m}_{k},0,\dots,0)$
\end_inset

 
\begin_inset Formula $\in\Rea[\NLinks]\times\left\{ 0,1\right\} ^{N}$
\end_inset

 is clearly a Nash equilibrium for the instance 
\begin_inset Formula $((1-\compRate)r,N)$
\end_inset

, and has the same cost 
\begin_inset Formula $C(\tilde{t},\tilde{m})\leq(1-\compRate)ra_{k}$
\end_inset

.
 Since by definition 
\begin_inset Formula $(\bar{t},\bar{m})$
\end_inset

 is the 
\emph on
best Nash equilibrium
\emph default
 for the instance 
\begin_inset Formula $((1-\compRate)r,N)$
\end_inset

 and has cost 
\begin_inset Formula $(1-\compRate)ra_{\bar{k}}$
\end_inset

, we must have 
\begin_inset Formula $(1-\compRate)ra_{\bar{k}}\leq(1-\compRate)ra_{k}$
\end_inset

, i.e.
 
\begin_inset Formula $a_{\bar{k}}\leq a_{k}$
\end_inset

.
 This completes the proof of the Lemma.
\end_layout

\end_deeper
\begin_layout Proof
Using the lemma, we can now show that links 
\begin_inset Formula $\{1,\dots,l-1\}$
\end_inset

 are more congested under assignment 
\begin_inset Formula $(x,m)$
\end_inset

 than candidate assignment 
\begin_inset Formula $(\bar{x},\bar{m})$
\end_inset

.
\end_layout

\begin_layout Proof
Since 
\begin_inset Formula $k\in\Supp t$
\end_inset

, we have from Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:stack"

\end_inset

 of a Stackelberg strategy and its induced equilibrium, that the latency
 on 
\begin_inset Formula $k$
\end_inset

 is less than or equal to the latency on any other link.
 Thus 
\begin_inset Formula $\forall n\in\{1,\dots,k-1\}$
\end_inset

, 
\begin_inset Formula $l_{n}(x_{n},m_{n})\geq l_{k}(x_{k},m_{k})\geq a_{k}$
\end_inset

, i.e.
 
\begin_inset Formula $\forall n\in\{1,\dots,k-1\}$
\end_inset

, 
\begin_inset Formula $n$
\end_inset

 is at least 
\begin_inset Formula $k$
\end_inset

-congested under assignment 
\begin_inset Formula $(x,m)$
\end_inset

.
 We also have by definition of the candidate assignment 
\begin_inset Formula $(\bar{x},\bar{m})$
\end_inset

 and the resulting latencies given by Equation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:opt_stack_latencies"

\end_inset

, 
\begin_inset Formula $\forall n\in\{1,\dots,\bar{k}-1\}$
\end_inset

, 
\begin_inset Formula $n$
\end_inset

 is exactly 
\begin_inset Formula $\bar{k}$
\end_inset

-congested under assignment 
\begin_inset Formula $(\bar{x},\bar{m})$
\end_inset

.
 Thus using the fact that 
\begin_inset Formula $k\geq\bar{k}$
\end_inset

, we have 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\forall n\in\{1,\dots,\bar{k}-1\}$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
, 
\begin_inset Formula $l_{n}(x_{n},m_{n})\geq a_{k}\geq a_{\bar{k}}=l_{n}(\bar{x}_{n},\bar{m}_{n})$
\end_inset

, and 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $x_{n}\leq\cffFlow nk\leq\cffFlow n{\bar{k}}=\bar{x}_{n}$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
, obtained by inverting the latency function 
\begin_inset Formula $l_{n}(.,m_{n})$
\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
.
\end_layout

\begin_layout Proof
We have from Equation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:opt_stack_flows"

\end_inset

 that 
\begin_inset Formula $\forall n\in\{\bar{k},\dots,l-1\}$
\end_inset

, 
\begin_inset Formula $n$
\end_inset

 is in free-flow and at maximum capacity under assignment 
\begin_inset Formula $(\bar{x},\bar{m})$
\end_inset

 (i.e.
 
\begin_inset Formula $\bar{x}_{n}=\flowMax[n]$
\end_inset

 and 
\begin_inset Formula $l_{n}(\bar{x}_{n})=a_{n}$
\end_inset

).
 Thus 
\begin_inset Formula $\forall n\in\{\bar{k},\dots,l-1\}$
\end_inset

, 
\begin_inset Formula $l_{n}(x_{n},m_{n})\geq a_{n}=l_{n}(\bar{x}_{n},\bar{m}_{n})$
\end_inset

 and 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $x_{n}\leq\flowMax[n]=\bar{x}_{n}$
\end_inset

.

\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 Therefore we have
\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{align}
l_{n}(x_{n},m_{n}) & \geq l_{n}(\bar{x}_{n},\bar{m}_{n}) & \forall n\in\{1,\dots,l-1\}\label{eq:cong_latency}\\
x_{n} & \leq\bar{x}_{n} & \forall n\in\{1,\dots,l-1\}\label{eq:cong_flow}
\end{align}

\end_inset


\end_layout

\begin_layout Proof
Note that 
\begin_inset Formula $\forall n\in\{1,\dots,\bar{k}\}$
\end_inset

, 
\begin_inset Formula $l_{n}(\bar{x}_{n},\bar{m}_{n})=a_{\bar{k}}\leq a_{l}$
\end_inset

, and 
\begin_inset Formula $\forall n\in\{\bar{k},\dots,l-1\}$
\end_inset

, 
\begin_inset Formula $l_{n}(\bar{x}_{n},\bar{m}_{n})=a_{n}\leq a_{l}$
\end_inset

, thus we have 
\begin_inset Formula 
\begin{align}
l_{n}(\bar{x}_{n},\bar{m}_{n}) & \leq a_{l} & \forall n\in\{1,\dots,l-1\}\label{eq:cong_latencybar}
\end{align}

\end_inset


\end_layout

\begin_layout Proof
Also note that each link 
\begin_inset Formula $n\in\{l,\dots,N\}$
\end_inset

 has latency at least 
\begin_inset Formula $a_{n}$
\end_inset

 (the latency on a link is always greater than the free-flow latency) and
 
\begin_inset Formula $a_{n}\geq a_{l}$
\end_inset

, thus
\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{align}
l_{n}(x_{n},m_{n}) & \geq a_{l} & \forall n\in\{l,\dots,N\}\label{eq:ff_latency}
\end{align}

\end_inset


\end_layout

\begin_layout Proof
We can now lower-bound the cost of the assignment 
\begin_inset Formula $(x,m)$
\end_inset

 where 
\begin_inset Formula $x=s+t$
\end_inset

 and 
\begin_inset Formula $(t,m)$
\end_inset

 is the 
\emph on
best Nash equilibrium
\emph default
 induced by 
\begin_inset Formula $s$
\end_inset

.
 We have 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
small
\end_layout

\end_inset


\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{align*}
C(x,m) & =\sum_{n=1}^{N}x_{n}l_{n}(x_{n},m_{n})\\
 & =\sum_{n=1}^{l-1}x_{n}l_{n}(x_{n},m_{n})+\sum_{n=l}^{N}x_{n}l_{n}(x_{n},m_{n})\\
 & \geq\sum_{n=1}^{l-1}x_{n}l_{n}(\bar{x}_{n},\bar{m}_{n})+\sum_{n=l}^{N}x_{n}a_{l}
\end{align*}

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
normalsize
\end_layout

\end_inset

 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
using
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:cong_latency"

\end_inset

 and
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:ff_latency"

\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
.
 Then rearranging the terms we have 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
small
\end_layout

\end_inset


\end_layout

\begin_layout Proof
\begin_inset Formula 
\[
C(x,m)\geq\sum_{n=1}^{l-1}(x_{n}-\bar{x}_{n})l_{n}(\bar{x}_{n},\bar{m}_{n})+\sum_{n=1}^{l-1}\bar{x}_{n}l_{n}(\bar{x}_{n},\bar{m}_{n})+\sum_{n=l}^{N}x_{n}a_{l}
\]

\end_inset


\end_layout

\begin_layout Proof
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
normalsize
\end_layout

\end_inset

 Then by 
\begin_inset Formula $\eqref{eq:cong_flow}$
\end_inset

 and 
\begin_inset Formula $\eqref{eq:cong_latencybar}$
\end_inset

 we have 
\begin_inset Formula $\forall n\in\{1,\dots,l-1\}$
\end_inset

, 
\begin_inset Formula $x_{n}-\bar{x}_{n}\leq0$
\end_inset

 and 
\begin_inset Formula $l_{n}(\bar{x}_{n},\bar{m}_{n})\leq a_{l}$
\end_inset

, thus 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
small
\end_layout

\end_inset


\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{eqnarray*}
C(x,m) & \geq & \sum_{n=1}^{l-1}(x_{n}-\bar{x}_{n})a_{l}+\sum_{n=1}^{l-1}\bar{x}_{n}l_{n}(\bar{x}_{n},\bar{m}_{n})+\sum_{n=l}^{N}x_{n}a_{l}\\
 & = & a_{l}\left(\sum_{n=1}^{N}x_{n}-\sum_{n=1}^{l-1}\bar{x}_{n}\right)+\sum_{n=1}^{l-1}\bar{x}_{n}l_{n}(\bar{x}_{n},\bar{m}_{n})\\
 & = & a_{l}\left(r-\sum_{n=1}^{l-1}\bar{x}_{n}\right)+\sum_{n=1}^{l-1}\bar{x}_{n}l_{n}(\bar{x}_{n},\bar{m}_{n})
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
normalsize
\end_layout

\end_inset

 But 
\begin_inset Formula $a_{l}\left(r-\sum_{n=1}^{l-1}\bar{x}_{n}\right)=\bar{x}_{l}l_{l}(\bar{x}_{l},\bar{m}_{l})$
\end_inset

 since 
\begin_inset Formula $\Supp{\bar{x}}=\{1,\dots,l\}$
\end_inset

 and 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $l_{l}(\bar{x}_{l},\bar{m}_{l})=a_{l}$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
.
 Therefore 
\begin_inset Formula 
\begin{align*}
C(x,m) & \geq\bar{x}_{l}l_{l}(\bar{x}_{l},\bar{m}_{l})+\sum_{n=1}^{l-1}\bar{x}_{n}l_{n}(\bar{x}_{n},\bar{m}_{n})\\
 & =C(\bar{x},\bar{m})
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Therefore the NCF strategy is an optimal Stackelberg strategy, and it can
 be computed in polynomial time since it is generated in linear time after
 computing the best Nash equilibrium 
\begin_inset Formula $\BestNashEquilibrium{\NLinks}{(1-\compRate)r}$
\end_inset

, which was shown to be quadratic in 
\begin_inset Formula $\NLinks$
\end_inset

.
\end_layout

\begin_layout Standard
Finally, we note that the NCF strategy is, in general, not the unique optimal
 Stackelberg strategy, but the entire set of optimal Stackelberg strategies
 can be easily generated from the NCF strategy.
\end_layout

\begin_layout Subsection
The set of optimal Stackelberg strategies
\end_layout

\begin_layout Standard
In this section, we show that the set of optimal Stackelberg strategies,
 denoted by 
\begin_inset Formula $S^{\text{opt}}(\NLinks,r,\compRate)=\arg\min_{s\in S(\NLinks,r,\compRate)}C(s+t(s))$
\end_inset

, can be generated from the NCF strategy.
 Let 
\begin_inset Formula $\bar{s}=\text{NCF}(\NLinks,r,\compRate)$
\end_inset

 be the 
\emph on
non-compliant first
\emph default
 strategy, 
\begin_inset Formula $\bar{t}=\BestNashEquilibrium{\NLinks}{(1-\compRate)r}$
\end_inset

 be the induced equilibrium, and 
\begin_inset Formula $\bar{k}=\max\Supp{\bar{t}}$
\end_inset

 as defined above.
 By definition, the NCF strategy 
\begin_inset Formula $\bar{s}$
\end_inset

 assigns zero flow on links 
\begin_inset Formula $\left\{ 1,\dots,\bar{k}-1\right\} $
\end_inset

, and saturates link 
\begin_inset Formula $\bar{k}$
\end_inset

, i.e.
 
\begin_inset Formula $\bar{s}_{\bar{k}}=\flowMax[\bar{k}]-\bar{t}_{\bar{k}}$
\end_inset

 (see Equation 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:opt_stack_strategy"

\end_inset

).
 
\end_layout

\begin_layout Standard
To give an example of an optimal Stackelberg strategy other than the NCF
 strategy, consider a strategy 
\begin_inset Formula $s$
\end_inset

 defined as 
\begin_inset Formula $s=\bar{s}+\epsilon$
\end_inset

 where 
\begin_inset Formula $\epsilon=(\epsilon_{1},0,\dots,0,\stackrel{\bar{k}}{-\epsilon_{1}},0,\dots,0)$
\end_inset

 and is such that 
\begin_inset Formula $s_{1}=\epsilon_{1}\in[0,\cffFlow 1{\bar{k}}]$
\end_inset

, and 
\begin_inset Formula $s_{\bar{k}}=\bar{s}_{\bar{k}}-\epsilon_{1}\geq0$
\end_inset

.
 In words, 
\begin_inset Formula $s$
\end_inset

 assigns a positive amount of flow 
\begin_inset Formula $\epsilon_{1}$
\end_inset

 on link 
\begin_inset Formula $1$
\end_inset

, decreases the flow assigned to link 
\begin_inset Formula $\bar{k}$
\end_inset

 by the same amount, and agrees with the NCF strategy on remaining links.
 Strategy 
\begin_inset Formula $s$
\end_inset

 will induce 
\begin_inset Formula $t(s)=\bar{t}-\epsilon$
\end_inset

, and the resulting cost 
\begin_inset Formula $C(s+t(s))=C(\bar{s}+\epsilon+\bar{t}-\epsilon)=C(\bar{s}+\bar{t})$
\end_inset

 is minimal.
 This shows that 
\begin_inset Formula $s$
\end_inset

 is an optimal Stackelberg strategy.
\end_layout

\begin_layout Standard
Similarly, it is easy to prove that strategies of the form 
\begin_inset Formula $s=\bar{s}+\epsilon$
\end_inset

 where
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\epsilon=\left(\epsilon_{1},\epsilon_{2},\dots,\epsilon_{\bar{k}-1},-\sum_{n=1}^{\bar{k}-1}\epsilon_{n},\stackrel{\bar{k}+1}{0},\dots,0\right)
\]

\end_inset


\end_layout

\begin_layout Standard
and 
\begin_inset Formula $\epsilon$
\end_inset

 is such that 
\begin_inset Formula 
\begin{eqnarray}
 & \epsilon_{n}\in[0,\cffFlow n{\bar{k}}] & \forall n\in\left\{ 1,\dots,\bar{k}-1\right\} \label{eq:epsilon1}
\end{eqnarray}

\end_inset

 and 
\begin_inset Formula 
\begin{equation}
\epsilon_{\bar{k}}=\bar{s}_{\bar{k}}-\sum_{n=1}^{\bar{k}-1}\epsilon_{n}\geq0\label{eq:epsilon2}
\end{equation}

\end_inset

will induce 
\begin_inset Formula $t(s)=\bar{t}-\epsilon$
\end_inset

 and are optimal.
\end_layout

\begin_layout Standard
We now prove that all optimal strategies are of this form.
\end_layout

\begin_layout Lemma
The set of optimal Stackelberg strategies
\end_layout

\begin_layout Lemma
Any optimal Stackelberg strategy 
\begin_inset Formula $s\in S^{\text{opt}}(\NLinks,r,\compRate)$
\end_inset

 is of the form 
\begin_inset Formula $s=\bar{s}+\epsilon$
\end_inset

 where 
\begin_inset Formula $\epsilon$
\end_inset

 satisfies Equations 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:epsilon1"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:epsilon2"

\end_inset

.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $s\in S^{\text{opt}}(\NLinks,r,\compRate)$
\end_inset

 be an optimal Stackelberg strategy and 
\begin_inset Formula $t(s)$
\end_inset

 the induced assignment of non-compliant agents.
 We have from the proof of Theorem
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand formatted
reference "theorem:NCFoptimal"

\end_inset

 
\begin_inset Formula $\max\Supp{t(s)}\geq\bar{k}$
\end_inset

.
 We first show that since 
\begin_inset Formula $s$
\end_inset

 is optimal, we must have equality.
 Assume by contradiction that 
\begin_inset Formula $\max\Supp{t(s)}>\bar{k}$
\end_inset

.
 Then we have 
\end_layout

\begin_layout Section
Numerical Results
\begin_inset CommandInset label
LatexCommand label
name "sec:Numerical-Results"

\end_inset


\end_layout

\begin_layout Subsection
Example network
\end_layout

\begin_layout Standard
The previous results have been applied to a scenario of freeway traffic
 from the San Francisco Bay Area.
 Four parallel highways are chosen starting in San Francisco and ending
 in San Jose: I-101, I-280, I-880 and I-580 (shown in Figure
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Map-of-parallel"

\end_inset

).
 We analyze the inefficiency of Nash equilibria due to selfish routing and
 lack of coordination, and show how optimal Stackelberg routing strategies
 (Non-compliant First strategy) can improve these conditions.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/ParallelHighwayMap.pdf
	width 2.5in

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Map of parallel highway network showing four parallel highway choices leading
 from San Francisco to San Jose.
\begin_inset CommandInset label
LatexCommand label
name "fig:Map-of-parallel"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Latency-functions-for"

\end_inset

 shows the latency functions for the highway network, which were generated
 assuming a triangular fundamental diagram uniform for the full highway
 stretch.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
This simplifying assumption will be removed in future studies.
\end_layout

\end_inset

 Under free-flow conditions, I-101 is the fastest route available between
 San Francisco and San Jose.
 But when I-101 becomes congested, other routes represent viable alternatives.
 To analyze how congestion increases with demand, we compute total network
 latency profiles (Equation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:total-cost"

\end_inset

) for optimal Stackelberg strategies as a function of demand.
 In addition, to show how congestion improves as a function of fraction
 of compliance 
\begin_inset Formula $\compRate$
\end_inset

, we compute network latency profiles over a range of compliance rates.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/LatenciesSim.pdf
	width 2.5in
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Latency (minutes) vs.
 demand (cars/minute) for parallel highway routes.
\begin_inset CommandInset label
LatexCommand label
name "fig:Latency-functions-for"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The numerical results are summarized in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Results-for-network"

\end_inset

.
 In this figure, 
\begin_inset Formula $\alpha$
\end_inset

 represents the fraction of compliant drivers on the network, as explained
 in Section
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Stackelberg-routing"

\end_inset

.
 The price of stability plot in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Price-of-Stability"

\end_inset

 shows that even with a small compliance rate, Stackelberg routing can decongest
 a given link 
\begin_inset Formula $n$
\end_inset

 for a fixed flow demand, when the Nash equilibrium assignment is slightly
 above maximum capacity on link 
\begin_inset Formula $n$
\end_inset

.
 This shows the significant benefits of Stackelberg routing, especially
 around the critical regions of flow demand where the support of the best
 Nash equilibrium changes.
 
\end_layout

\begin_layout Standard
We also note that for a fixed compliance rate 
\begin_inset Formula $\compRate$
\end_inset

, Stackelberg routing can delay (as a function of increased demand over
 the network) the congestion of a particular link 
\begin_inset Formula $n$
\end_inset

, i.e.
 increase the critical flow demand 
\begin_inset Formula $r^{(n)}$
\end_inset

 above which link 
\begin_inset Formula $n$
\end_inset

 becomes congested (
\begin_inset Formula $r^{(n)}=\min_{r}\left\{ r|n\text{ is congested under }\BestNashEquilibrium{\NLinks}r\right\} $
\end_inset

).
 Let 
\begin_inset Formula $r^{(n,\compRate)}$
\end_inset

 denote the critical flow for the Stackelberg instance 
\begin_inset Formula $(\NLinks,r,\compRate)$
\end_inset

, i.e.
 
\begin_inset Formula $r^{(n,\compRate)}=\min_{r}\left\{ r|n\text{ is congested under }(t(\bar{s}),m(\bar{s})),\ \bar{s}=\text{NCF}(\NLinks,r,\compRate)\right\} $
\end_inset

.
 Then the delay range (the increase in critical flow demand 
\begin_inset Formula $r^{(n,\compRate)}-r^{(n)}$
\end_inset

) is proportional to the fractional compliance.
 Observing the behavior around the 600-800 cars/minute, it takes about 30
 extra cars/minute to congest the second link with 5% compliance, about
 100 cars/minute for 15% compliance, while for 50% compliance, the second
 link appears to only congest near network capacity.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/POSSim.pdf
	width 1.7in
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Price of stability vs.
 demand (cars/minute) for different compliance rates.
\begin_inset CommandInset label
LatexCommand label
name "fig:Price-of-Stability"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $\quad$
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/VOASim.pdf
	width 1.7in
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Value of altruism vs.
 demand (cars/minute) for different compliance rates.
\begin_inset CommandInset label
LatexCommand label
name "fig:Value-of-Altruism"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Results for network efficiency on parallel highway link example.
\begin_inset CommandInset label
LatexCommand label
name "fig:Results-for-network"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
While price of stability describes how inefficient the best Nash equilibrium
 is with respect to the social optimal strategy, another metric, 
\emph on
value of altruism
\emph default
 
\emph on

\begin_inset CommandInset citation
LatexCommand cite
key "aswani2011game"

\end_inset


\emph default
, was introduced to show how performant a particular Stackelberg strategy
 is with respect to a 0% compliance strategy (or Nash equilibrium).
 Value of altruism is defined by:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
VOA\left(\NLinks,\qdemand,\compRate\right)=\frac{\min_{s\in\StackSet}C\left(s+\ncFlow(\cFlow),m(\cFlow)\right)}{C\left(\BestNashEquilibrium{\NLinks}{\qdemand}\right)}
\]

\end_inset


\end_layout

\begin_layout Standard
Value of altruism for the example network is shown in Figure 
\begin_inset CommandInset ref
LatexCommand eqref
reference "fig:Value-of-Altruism"

\end_inset

.
 The figure illustrates the 
\begin_inset Quotes eld
\end_inset

delaying
\begin_inset Quotes erd
\end_inset

 effect of optimal Stackelberg routing.
 A small compliance fraction (5-15% on this network) can decongest a given
 link 
\begin_inset Formula $n$
\end_inset

 when the demand is around the critical demand for that link (
\begin_inset Formula $r^{(n)}\leq r<r^{(n,\compRate)}$
\end_inset

), but the link will be congested again for higher values of demand (
\begin_inset Formula $r\geq r^{(n,\compRate)}$
\end_inset

) resulting in a value of altruism value of 1.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/POS3dannote.pdf
	width 3.5in
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Price of stability profile
\begin_inset CommandInset label
LatexCommand label
name "fig:POS3d"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The importance of efficient computation of optimal Stackelberg strategies
 can be seen by the complete demand-compliance fraction profile generated
 in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:POS3d"

\end_inset

.
 If the amount of compliance is viewed as a cost to some central controller,
 then the tiers visible in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:POS3d"

\end_inset

 (take 
\begin_inset Formula $\qdemand=1000$
\end_inset

, 
\begin_inset Formula $.3\le\compRate\le.5$
\end_inset

) can be seen as regions of potential waste.
 If a central controller can predict a demand in a range around 1000 cars/minute
 and a maximum compliance fraction of .5, then the controller can reference
 the two-dimensional profile and reduce the compliance fraction to a region
 around .4, since any compliance above 30% and less than 50% does not improve
 the performance of the network.
\end_layout

\begin_layout Subsection
Scaling of optimal Stackelberg strategy algorithm on size of network
\end_layout

\begin_layout Standard
To demonstrate the performance of the algorithm as the size of the network
 scales up, the computation time of the optimal Stackelberg strategy was
 measured for 500 randomly generated networks.
 The number of links in a network was chosen to be between 3 and 1500 where
 the latency properties of each link were generated from randomly chosen
 triangular fundamental diagrams.
 The compliance rate was arbitrarily chosen to be 40% and the demand was
 chosen to be 70% that of the maximum capacity of the network at best Nash
 equilibrium.
 The results are shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Computation-time-as"

\end_inset

.
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/SimTime.pdf
	width 1.7in
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Quadratic fit to computation time-network size relationship
\begin_inset CommandInset label
LatexCommand label
name "fig:Computation-time-as"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $\quad$
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/SimDemand.pdf
	width 1.7in
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Increase of computational time with demand.
\begin_inset CommandInset label
LatexCommand label
name "fig:Computation-time-increases"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Computation time of optimal Stackelberg strategy relative to network size.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As was derived earlier (Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Computational-complexity-of"

\end_inset

), the worst case complexity of computing optimal Stackelberg assignments
 is quadratic with the size of the network, which is verified experimentally
 as shown in Figure
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Computation-time-as"

\end_inset

.
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Computation-time-increases"

\end_inset

 shows that the computation time of the optimal Stackelberg strategy increases
 as the demand increases.
 This is due to the sequential search of the best Nash equilibrium algorithm
 (Algorithm 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:bestNE"

\end_inset

).
 The algorithm tests if a Nash equilibrium exists for a particular support,
 and if it fails to find such an equilibrium, increases the size of the
 support.
 As the demand increases, the algorithm will have to check for larger supports,
 which explains the increase in computation time.
\end_layout

\begin_layout Section
Discussion and Open Problems
\begin_inset CommandInset label
LatexCommand label
name "sec:Discussion"

\end_inset


\end_layout

\begin_layout Standard
We introduced a new class of latency functions that better models congestion
 on horizontal queuing networks, and we studied the resulting Nash equilibria
 for non-atomic routing games on parallel networks.
 We showed that the essential uniqueness property does not hold for this
 new class, and that there may be up to 
\begin_inset Formula $2N$
\end_inset

 equilibria for a network instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

.
 We then classified these equilibria into single link free-flow equilibria
 
\begin_inset Formula $\NashEquilibrium{\NLinks}{\qdemand}f$
\end_inset

, for which one link in the support is in free-flow, and congested equilibria
 
\begin_inset Formula $\NashEquilibrium{\NLinks}{\qdemand}c$
\end_inset

, for which all links in the support are congested.
 Then we focused our attention on the best Nash equilibrium 
\begin_inset Formula $\BestNashEquilibrium{\NLinks}r$
\end_inset

, which we proved is a single link free-flow equilibrium, and further characteri
zed using Theorem 
\begin_inset CommandInset ref
LatexCommand ref
reference "theorem:minsupport"

\end_inset

.
 We then derived price of stability results for an example network that
 illustrates the inefficiency of the best Nash equilibrium.
\end_layout

\begin_layout Standard
In order to address this inefficiency, we considered the Stackelberg routing
 problem where a central authority has control over a fraction 
\begin_inset Formula $\compRate$
\end_inset

 of compliant agents.
 We proved that the Non-compliant First (NCF) strategy is optimal, and that
 it can be computed in polynomial time, which stands in contrast with the
 fact that computing the optimal Stackelberg strategy for the class of non-decre
asing latencies is NP-hard.
 We illustrated these results using an example network for which we computed
 the decrease in inefficiency that can be achieved using optimal Stackelberg
 routing.
 This example showed that when the demand is near critical flows 
\begin_inset Formula $r^{(n)}$
\end_inset

, optimal Stackelberg routing can achieve a significant increase of efficiency
 (that we measured using both price of stability and value of altruism)
 even for small values of compliance rate 
\begin_inset Formula $\compRate$
\end_inset

.
\end_layout

\begin_layout Standard
These encouraging results show that careful routing of a small compliant
 population can dramatically improve the efficiency of the network.
 It is also worth noting that these results indicate that for certain demand
 and compliance ranges, Stackelberg routing can be completely ineffective.
 Therefore identifying the ranges where optimal Stackelberg routing does
 improve the efficiency of the network is crucial for effective planning
 and control.
\end_layout

\begin_layout Standard
We believe this work offers several directions of future research: the work
 presented here only considers parallel networks under static assumptions
 (constant flow demand 
\begin_inset Formula $r$
\end_inset

, and steady state equilibria) and one question is whether these equilibria
 are stable in the dynamic sense, and how one may steer the system from
 one equilibrium to a better one: consider for example the case where the
 agents are stuck in a congested equilibrium, and assume a coordinator has
 control over a fraction of the flow.
 Can the coordinator steer the system to a single link free-flow equilibrium
 by decongesting a link? And what is the minimal compliance rate needed
 to achieve this? Another question is how robust are these results? Do they
 hold for general network topologies? We believe that some of our results
 extend to general network topologies, but we can see technical challenges
 for these extensions.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "../common-files/bibliography"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
