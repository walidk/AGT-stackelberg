#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass IEEEconf
\begin_preamble
\overrideIEEEmargins
\end_preamble
\options letterpaper, 10 pt, conference
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "../common-files/lyx_commands.lyx"

\end_inset


\end_layout

\begin_layout Title
Stackelberg Routing on Horizontal Queueing Networks
\end_layout

\begin_layout Author
Walid Krichene, Jack Reilly, Saurabh Amin, Alexandre Bayen
\end_layout

\begin_layout Abstract
In order to address inefficiencies of Nash equilibria for horizontal queuing
 congestion networks, we study the Stackelberg routing game on parallel
 networks: assuming a coordinator has control over a fraction of the flow,
 what is a good way of routing that compliant flow so that the induced Nash
 equilibrium is closer to the social optimum than the initial Nash equilibrium?
\end_layout

\begin_layout Abstract
We study Stackelberg routing for a new class of latency functions, that
 models congestion on horizontal queuing networks.
 We show that in this setting, optimal Stackelberg strategies can be computed
 in polynomial time in the size of the network.
 We introduce a candidate Stackelberg strategy, the 
\emph on
non-compliant first
\emph default
 strategy, and prove it to be optimal.
 We apply these results by modeling a transportation network in which a
 coordinator can choose the routes of fraction of compliant agents, while
 the rest of the agents choose their routes selfishly.
\end_layout

\begin_layout Standard
Some proofs are omitted for brevity, and are available for the reviewer's
 convenience in 
\begin_inset CommandInset citation
LatexCommand cite
key "fullversion"

\end_inset

.
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Congestion Games and Stackelberg Routing
\end_layout

\begin_layout Standard
Nash equilibria of congestion games (or user optimal assignments) have been
 extensively studied 
\begin_inset CommandInset citation
LatexCommand cite
key "lo2002cell,papadimitriou2010new,roughgarden2002bad"

\end_inset

 and are known to be inefficient compared to the system optimal assignments,
 where a coordinator assigns flow as to minimize a system-wide cost function
 
\begin_inset CommandInset citation
LatexCommand cite
key "aswani2011game,ziliaskopoulos2000linear"

\end_inset

.
\end_layout

\begin_layout Standard
In order to address this inefficiency, Stackelberg routing games have been
 proposed, in which a fraction of the agents is centrally controlled, while
 the rest is free to act selfishly 
\begin_inset CommandInset citation
LatexCommand cite
key "aswani2011game,roughgarden2001stackelberg"

\end_inset

.
 The objective of the coordinator is to assign the compliant flow in a manner
 that minimizes a system-wide cost function in anticipation of the rest
 of the flow's selfish response.
\end_layout

\begin_layout Standard
Congestion games and Stackelberg routing on parallel networks have been
 studied extensively for the class of non-decreasing latency functions,
 and it is known that computing the optimal Stackelberg strategy is NP-hard
 in the number of links 
\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2001stackelberg"

\end_inset

.
 This led to considering polynomial time approximate strategies such as
 Largest Latency First and Scale 
\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2001stackelberg"

\end_inset

, and several bounds have been shown on the efficiency of these strategies.
 While this class of latency functions provides a good model of congestion
 for a considerable range of networks, such as communication networks, it
 does not accurately model horizontal queueing congestion, such as congestion
 on transportation networks 
\begin_inset CommandInset citation
LatexCommand cite
key "daganzo1994cell,lighthill1955kinematic"

\end_inset

.
 A new class of latency functions is introduced in 
\begin_inset CommandInset citation
LatexCommand cite
key "fullversion"

\end_inset

 to model congestion on horizontal queuing networks.
 We study Stackelberg routing for this new class of latency, which leads
 to novel theoretic and algorithmic results.
\end_layout

\begin_layout Subsection
Motivating Application: Compliant and Non-compliant Drivers on Highway Networks
\begin_inset CommandInset label
LatexCommand label
name "sub:Motivating-Example"

\end_inset


\end_layout

\begin_layout Standard
Advances in technology have made it possible to interact with individual
 drivers on a traffic network and exchange information through GPS-enabled
 smartphone applications or before and after-market vehicular navigation
 systems.
 This offers an opportunity to not only provide the driver with relevant
 traffic information and collect anonymized data that help improve traffic
 estimation, but also to provide routing advice that can improve the overall
 efficiency of the network by relieving congestion.
 However, when providing routing advice, one needs to take into account
 the possible impact of rerouting drivers on the traffic conditions of the
 network, and the response of other drivers to this change in traffic conditions.
 This fits into the framework of Stackelberg routing, in which a fraction
 of the population of drivers is assumed to be 
\emph on
compliant
\emph default
 to routing suggestions, and the rest of the drivers are considered to be
 
\emph on
non-compliant
\emph default
.
 We call compliant a driver who is connected to a central coordinator, through
 a smartphone application or a navigation system, and is willing (or has
 an external incentive) to follow routing suggestions provided by the coordinato
r.
 Other drivers (drivers who are not connected or who are simply not willing
 to follow alternative routes) are described as non-compliant.
 These two populations form respectively the leader and the followers in
 the Stackelberg routing game.
\end_layout

\begin_layout Standard
In numerous transportation networks, two highly populated areas can be connected
 by disjoint highways (we consider one such example in the numerical results
 section).
 Therefore, Stackelberg routing strategies on simple parallel networks are
 of practical importance to traffic planners 
\begin_inset CommandInset citation
LatexCommand cite
key "caltrans_101s"

\end_inset

.
 However, due to the limitations of congestion models discussed above, the
 existing literature on Stackelberg routing is not readily applicable to
 practical traffic networks.
 The present work addresses these limitations by considering a new class
 of latency functions that better models congestion for horizontal queuing
 network, in particular traffic networks.
\end_layout

\begin_layout Subsection
Contributions
\end_layout

\begin_layout Standard
We study the Stackelberg routing game on parallel networks for the class
 of 
\emph on
horizontal queuing congestion
\emph default
 latencies, and show that optimal Stackelberg strategies can be computed
 in 
\begin_inset Formula $O\left(\NLinks^{2}\right)$
\end_inset

 time, where 
\begin_inset Formula $\NLinks$
\end_inset

 is the number of links in the network.
 This result contrasts with the class of non-decreasing latency functions,
 for which computing the optimal Stackelberg strategy is NP-hard 
\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2001stackelberg"

\end_inset

.
 We define in particular the 
\emph on
non-compliant first
\emph default
 (NCF) strategy and prove it to be optimal.
\end_layout

\begin_layout Standard
We then apply these results to model a real transportation network, and
 identify ranges of the flow demand and compliance rates where optimal Stackelbe
rg routing are most efficient, and quantify the decrease in inefficiency
 achieved by the NCF strategy.
\end_layout

\begin_layout Standard
These results are an encouraging and necessary step towards a scalable,
 accurate model for optimal route assignment on horizontal queueing networks
 with partial compliance.
\end_layout

\begin_layout Subsection
Organization of the Article
\end_layout

\begin_layout Standard
In Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Preliminaries"

\end_inset

, we start by defining the congestion game and the class of horizontal queuing
 congestion latencies, then review some properties of Nash equilibria for
 horizontal queuing networks.
 The main results on optimal Stackelberg routing are presented in Sections
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Stackelberg-routing"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Computing-the-optimal"

\end_inset

, where a polynomial time algorithm is presented for computing a provably
 optimal Stackelberg strategy on 
\begin_inset Formula $\NLinks$
\end_inset

 link parallel networks.
 This is followed by numerical results that illustrate the effects of optimal
 Stackelberg routing in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Numerical-Results"

\end_inset

.
 We conclude with a summary of our results and directions for future work
 in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Discussion"

\end_inset

.
\end_layout

\begin_layout Section
Preliminaries
\begin_inset CommandInset label
LatexCommand label
name "sec:Preliminaries"

\end_inset


\end_layout

\begin_layout Subsection
The Model: Congestion games and the class of Horizontal Queuing Latencies
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sub:latency_class"

\end_inset


\end_layout

\begin_layout Standard
We consider a non-atomic 
\begin_inset CommandInset citation
LatexCommand cite
key "schmeidler1973equilibrium"

\end_inset

 congestion game on a parallel network with a single source, a single sink
 (or destination) and 
\begin_inset Formula $\NLinks$
\end_inset

 parallel edges (or links) indexed by 
\begin_inset Formula $\link\in\left\{ 1,\ldots,\NLinks\right\} $
\end_inset

.
 The network is subject to a constant positive flow demand 
\begin_inset Formula $\qdemand$
\end_inset

 at the source.
 We will denote by 
\begin_inset Formula $(\NLinks,r)$
\end_inset

 an instance of a network with 
\begin_inset Formula $\NLinks$
\end_inset

 parallel links subject to demand 
\begin_inset Formula $r$
\end_inset

.
\end_layout

\begin_layout Standard
A flow assignment for the instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

 is a vector 
\begin_inset Formula $x\in\Rea[\NLinks]_{+}$
\end_inset

 such that 
\begin_inset Formula $\sum_{n=1}^{\NLinks}\flow[n]=\qdemand$
\end_inset

 where 
\begin_inset Formula $\flow[n]$
\end_inset

 is the flow on link 
\begin_inset Formula $n$
\end_inset

.
 We will denote by 
\begin_inset Formula $\Supp{\flow}$
\end_inset

 the support of 
\begin_inset Formula $\flow$
\end_inset

, i.e.
 the set of links that hold strictly positive flow 
\begin_inset Formula $\left\{ n\in\left\{ 1,\dots,\NLinks\right\} |\flow[n]>0\right\} $
\end_inset

.
 
\end_layout

\begin_layout Standard
Every (non-atomic) agent chooses a route to go from the source to the destinatio
n, and in this simple setting, every agent simply chooses a link.
 All agents on link 
\begin_inset Formula $n$
\end_inset

 experience the same latency, and we assume that the total flow 
\begin_inset Formula $\flow[n]$
\end_inset

 affects the latency on link 
\begin_inset Formula $n$
\end_inset

.
 As detailed in 
\begin_inset CommandInset citation
LatexCommand cite
key "fullversion"

\end_inset

, in the case of horizontal queuing networks, the latency also depends on
 whether the link is in 
\emph on
free-flow
\emph default
 (the density is below a critical density) or 
\emph on
congested
\emph default
 (the density is above the critical density).
 Intuitively, a given flow 
\begin_inset Formula $\flow[n]$
\end_inset

 corresponds to two different configurations:
\end_layout

\begin_layout Itemize
either few agents moving fast (the density is low and the link is in free-flow),
 in which case the latency is low,
\end_layout

\begin_layout Itemize
or many agents moving slowly (the density is high and the link is congested),
 in which case the latency is high.
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $\Mode[n]\in\left\{ 0,1\right\} $
\end_inset

 be the congestion state of link 
\begin_inset Formula $n$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\Mode[\link]=\begin{cases}
0 & \text{if }\link\text{ is in free-flow}\\
1 & \text{if }\link\text{ is congested}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
Then the latency on the link 
\begin_inset Formula $n$
\end_inset

 is given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\latency[\link]:\left[0,\flowMax[\link]\right]\times\left\{ 0\right\} \cup(0,\flowMax[n])\times\left\{ 1\right\}  & \rightarrow & \Rea_{+}\\
\left(\flow[\link],\Mode[\link]\right) & \mapsto & \latency[\link]\left(\flow[\link],\Mode[\link]\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
We further require the latency function to satisfy the following properties:
\end_layout

\begin_layout Itemize
The latency is constant in free-flow: 
\begin_inset Formula $\forall\flow[n]\in[0,\flowMax[n]]$
\end_inset

, 
\begin_inset Formula $\latency[\link]\left(\flow[\link],0\right)=\parA[\link]>0$
\end_inset

.
\end_layout

\begin_layout Itemize

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $\lim_{\flow[n]\rightarrow\flowMax[\link]}\latency[\link]\left(\flow[n],1\right)=\latency[\link]\left(\flowMax[\link],0\right)=a_{n}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\flow[n]\mapsto\latency[\link]\left(\flow[n],1\right)$
\end_inset

 is decreasing on 
\begin_inset Formula $(0,\flowMax[n])$
\end_inset

.
\end_layout

\begin_layout Standard
This defines the class of horizontal queuing latencies, introduced in 
\begin_inset CommandInset citation
LatexCommand cite
key "fullversion"

\end_inset

.
 The last property can be justified intuitively by the following argument:
 as the density on the link increases, the agents slow down (to avoid collision)
, therefore the flow decreases and the latency increases.
\end_layout

\begin_layout Standard
Some examples of latency functions in this class are illustrated in Figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:example-flow-latency"

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/LatencyasFunctionofFlowModeMatched.pdf
	width 1.5in

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:example-flow-latency"

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Examples of horizontal queuing latency functions, defined in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:latency_class"

\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $\quad$
\end_inset


\begin_inset Formula $\quad$
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/presentation/DefinitionXBar.pdf
	width 1.6in
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Example of a single link free-flow equilibrium 
\begin_inset Formula $(\opneFlow 3r,\bar{m}^{3})$
\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:xbar-and-hat-defns"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Horizontal queuing congestion latencies and single link free-flow equilibria.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
We further assume, to simplify our discussion, that the free-flow latencies
 are different, and that links are ordered by increasing free-flow latencies:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\parA[1]<\parA[2]<\ldots<\parA[\NLinks]
\]

\end_inset


\end_layout

\begin_layout Standard
Total System Cost: Every non-atomic agent on link 
\begin_inset Formula $n$
\end_inset

 experiences latency 
\begin_inset Formula $l_{n}(\flow[n],\Mode[n])$
\end_inset

, therefore the total latency experienced by the flow 
\begin_inset Formula $\flow[n]$
\end_inset

 is 
\begin_inset Formula $C_{\link}\left(\flow[\link],\Mode[\link]\right)=\flow[\link]\latency[\link]\left(\flow[\link],\Mode[\link]\right)$
\end_inset

 and the total system cost (latency experienced by the total flow) is simply
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
C\left(\flow,\Mode\right)=\sum_{n=1}^{\NLinks}C_{n}\left(\flow[n],\Mode[n]\right)\label{eq:total-cost}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Nash Equilibria
\end_layout

\begin_layout Standard
In this section, we briefly review some properties of Nash equilibria for
 congestion games on parallel networks for the class of horizontal queuing
 latencies.
 These properties will be useful in studying the Stackelberg routing game.
 For a more detailed discussion and proofs, we refer the reader to 
\begin_inset CommandInset citation
LatexCommand cite
key "fullversion"

\end_inset

.
\end_layout

\begin_layout Standard
Consider a network instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

.
 A pure Nash equilibrium, which we simply refer to as Nash equilibrium,
 is an assignment in which every non-atomic agent cannot improve her/his
 latency by switching to another link:
\end_layout

\begin_layout Definition

\emph on
Nash Equilibrium
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:ne"

\end_inset

An assignment 
\begin_inset Formula $(\flow,\Mode)\in\Rea[\NLinks]_{+}\times\{0,1\}^{\NLinks}$
\end_inset

 feasible for the network instance 
\begin_inset Formula $(\NLinks,\qdemand)$
\end_inset

 is a Nash equilibrium, if 
\begin_inset Formula $\forall n$
\end_inset

 
\begin_inset Formula 
\[
\flow[\link]>0\Rightarrow\forall k\leq N,\ \latency[\link](\flow[\link],\Mode[\link])\leq\latency[k](\flow[k],\Mode[k])
\]

\end_inset


\end_layout

\begin_layout Standard
In particular, all links in the support of 
\begin_inset Formula $x$
\end_inset

 have the same latency, and if 
\begin_inset Formula $l_{0}$
\end_inset

 denote the common latency on the support, then the total system cost incurred
 by the network is simply 
\begin_inset Formula $\Latency(\flow,\Mode)=\qdemand\latency[0]$
\end_inset

.
\end_layout

\begin_layout Standard
Single link free-flow equilibria: Let 
\begin_inset Formula $\NashEquilibrium{\NLinks}{\qdemand}{}$
\end_inset

 denote the set of Nash Equilibria for network instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

.
 For the class of horizontal queuing latency functions, there may exist
 multiple Nash equilibria with different costs.
 For an example of a network instance where this is the case, see 
\begin_inset CommandInset citation
LatexCommand cite
key "fullversion"

\end_inset

.
 The set of Nash equilibria can then be partitioned into single link free-flow
 equilibria (equilibria such that the last link in the support is in free-flow)
 and congested equilibria (such that all links in the support are congested).
 One can show that these are indeed the only possible equilibria.
\end_layout

\begin_layout Standard
We now focus our attention on single link free-flow equilibria.
 The following lemma characterizes the congestion state vectors for these
 equilibria:
\end_layout

\begin_layout Lemma

\emph on
Congestion states under single link free-flow equilibrium
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "cor:atmost1ff"

\end_inset

 Let 
\begin_inset Formula $\left(\flow,\Mode\right)\in\NashEquilibrium{\NLinks}{\qdemand}{}$
\end_inset

.
 Assume that 
\begin_inset Formula $\exists j\in\Supp{\flow}$
\end_inset

 such that 
\begin_inset Formula $m_{j}=0$
\end_inset

.
 Then 
\begin_inset Formula $m=(1,\dots,\stackrel{j-1}{1},\stackrel{j}{0},\dots,0)$
\end_inset

 and 
\begin_inset Formula $\Supp{\flow}=\left\{ 1,\dots,j\right\} $
\end_inset

.
\end_layout

\begin_layout Standard
The lemma states that if some link 
\begin_inset Formula $k$
\end_inset

 in the support of a Nash equilibrium is in free-flow, this completely determine
s the congestion state vector of the equilibrium: links 
\begin_inset Formula $\left\{ 1,\dots,k-1\right\} $
\end_inset

 are in the support and are congested, and links 
\begin_inset Formula $\left\{ k+1,\dots,N\right\} $
\end_inset

 are not in the support.
 Note that this also determines the flow vector: since link 
\begin_inset Formula $k$
\end_inset

 is in free flow and in the support, its latency is 
\begin_inset Formula $l_{k}(\flow[k],0)=a_{k}$
\end_inset

.
 Therefore every link in the support has the same latency, in particular
 
\begin_inset Formula $\forall n\in\left\{ 1,\dots,k-1\right\} $
\end_inset

, 
\begin_inset Formula $l_{n}(\flow[n],1)=a_{k}$
\end_inset

.
 The unique flow that satisfies this equality is referred to as 
\emph on
congestion flow
\emph default
.
 More precisely,
\end_layout

\begin_layout Definition

\emph on
Congestion flow
\end_layout

\begin_layout Definition
For 
\begin_inset Formula $1\leq n<k\leq N$
\end_inset

, the congestion flow 
\begin_inset Formula $\cffFlow nk$
\end_inset

 is defined as the unique flow in 
\begin_inset Formula $(0,\flowMax[n])$
\end_inset

 that satisfies
\end_layout

\begin_layout Definition
\begin_inset Formula 
\begin{equation}
l_{n}(\cffFlow nk,1)=a_{k}\label{eq:x_hat}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Note that the congestion flow 
\begin_inset Formula $\cffFlow{\link}k=l_{n}(\cdot,1)^{-1}(a_{k})$
\end_inset

 is a decreasing function of 
\begin_inset Formula $k$
\end_inset

 since 
\begin_inset Formula $a_{k}$
\end_inset

 is increasing in 
\begin_inset Formula $k$
\end_inset

 and 
\begin_inset Formula $l_{n}(\cdot,1)^{-1}$
\end_inset

 is decreasing.
\end_layout

\begin_layout Standard
One can then show that all single link free-flow equilibria are of the form
 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\left(\opneFlow kr,\cffMode k\right)$
\end_inset

 where
\end_layout

\begin_layout Standard
\begin_inset Formula $ $
\end_inset


\begin_inset Formula 
\begin{equation}
\bar{\Mode}^{k}\coloneqq(\stackrel{1}{1},\dots,\stackrel{k-1}{1},\stackrel{k}{0},\dots,\stackrel{N}{0})\label{eq:m_bar}
\end{equation}

\end_inset

 
\begin_inset Formula 
\begin{equation}
\opneFlow kr:=(\overset{1}{\cffFlow 1k},\dots,\overset{k-1}{\cffFlow{k-1}k},r-\sum_{\link=1}^{k-1}\cffFlow{\link}k,0,\dots,\stackrel{\NLinks}{0})\label{eq:x_bar}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
and 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\left(\opneFlow kr,\cffMode k\right)$
\end_inset

 is an equilibrium if and only if it is a feasible assignment, i.e.
 
\begin_inset Formula $r-\sum_{\link=1}^{k-1}\cffFlow{\link}k\in[0,\flowMax[k]]$
\end_inset

.
\end_layout

\begin_layout Standard
An example of single link free-flow equilibrium is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:xbar-and-hat-defns"

\end_inset

.
\end_layout

\begin_layout Lemma

\emph on
Existence of a single link free-flow Nash equilibrium
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lemma:slff"

\end_inset


\begin_inset Formula $\forall r\in\left[0,\max_{1\leq k\leq\NLinks}\left\{ \flowMax[k]+\sum_{\link=1}^{k-1}\cffFlow{\link}k\right\} \right]$
\end_inset

, there exists a single link free-flow Nash equilibrium for the instance
 
\begin_inset Formula $(\NLinks,r)$
\end_inset

.
\end_layout

\begin_layout Lemma
This lemma in fact shows that if the set of Nash equilibria is non empty,
 then it contains a single link free-flow equilibrium.
\end_layout

\begin_layout Subsection
Best Nash Equilibrium 
\begin_inset CommandInset label
LatexCommand label
name "sub:Best-Nash-Equilibria"

\end_inset


\end_layout

\begin_layout Standard
In order to study the inefficiency of Nash equilibria, and the improvement
 of performance that we can achieve using a Stackelberg game (in which a
 fraction of the total flow is controlled by a central authority), we focus
 our attention on 
\emph on
best Nash equilibria
\emph default
 and 
\emph on
price of stability 
\emph default
as a measure of their inefficiency (see for example 
\begin_inset CommandInset citation
LatexCommand cite
key "Anshelevich2004"

\end_inset

).
 A 
\emph on
best Nash equilibrium
\emph default
 (BNE) is defined to be a Nash equilibrium of least total latency 
\begin_inset Formula $\BestNashEquilibrium{\NLinks}{\qdemand}=\underset{\left(\flow,\Mode\right)\in\NashEquilibrium{\NLinks}{\qdemand}{}}{\arg\min}\Latency\left(\flow,\Mode\right)$
\end_inset

.
 The following theorem characterizes best Nash equilibria.
\end_layout

\begin_layout Theorem

\emph on
Characterization of Best Nash Equilibria 
\begin_inset CommandInset citation
LatexCommand cite
key "fullversion"

\end_inset


\end_layout

\begin_layout Theorem
\begin_inset CommandInset label
LatexCommand label
name "theorem:bne"

\end_inset

 For a parallel network instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

, the unique best Nash equilibrium is the single-link free-flow equilibrium
 that has smallest support
\begin_inset Formula 
\[
\BestNashEquilibrium{\NLinks}{\qdemand}=\underset{\left(\flow,\Mode\right)\in\text{NE}_{\text{f}}(\NLinks,r)}{\arg\min}\left\{ \max\left[\Supp{\flow}\right]\right\} 
\]

\end_inset


\end_layout

\begin_layout Standard
Theorem 
\begin_inset CommandInset ref
LatexCommand formatted
reference "theorem:bne"

\end_inset

 provides a simple characterization of the best Nash equilibrium for any
 network instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

, and shows in particular that the best Nash equilibrium can be computed
 in 
\begin_inset Formula $O(\NLinks^{2})$
\end_inset

 where 
\begin_inset Formula $\NLinks$
\end_inset

 is the size of the network: the best Nash equilibrium can be computed by
 simply enumerating all candidate single link free-flow equilibria 
\begin_inset Formula $(\opneFlow kr\bar{\Mode}^{k})$
\end_inset

, starting from the smallest support (
\begin_inset Formula $k=0$
\end_inset

).
 There are 
\begin_inset Formula $N$
\end_inset

 such candidate equilibria, corresponding to the congestion states 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $(0,\dots,0)$
\end_inset

 
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
up to 
\begin_inset Formula $(1,\dots,1,0)$
\end_inset

, and each candidate equilibrium is a vector in 
\begin_inset Formula $\Rea[\NLinks]$
\end_inset

 that can be computed in 
\begin_inset Formula $O(\NLinks)$
\end_inset

, which corresponds to a worst-case time complexity of 
\begin_inset Formula $O(N^{2})$
\end_inset

.
\end_layout

\begin_layout Section
Stackelberg routing
\begin_inset CommandInset label
LatexCommand label
name "sec:Stackelberg-routing"

\end_inset


\end_layout

\begin_layout Standard
In order to address the inefficiency of Nash equilibria due to selfish routing
 and lack of coordination, we assume that a fraction 
\begin_inset Formula $\compRate$
\end_inset

 of the flow is centrally controlled, and we investigate possible strategies
 for improving the equilibria of the network.
 Leader-follower routing games have been considered in the transportation
 literature 
\begin_inset CommandInset citation
LatexCommand cite
key "aswani2011game,joksimovicdifferent"

\end_inset

.
 However, latency functions considered in the previous literature do not
 model decrease in flow on a link as a result of density buildup, while
 the class of latency functions introduced in 
\begin_inset CommandInset citation
LatexCommand cite
key "fullversion"

\end_inset

 better models horizontal queuing.
 In this section, we setup the problem and introduce useful definitions.
 In the next section, we show that optimal Stackelberg strategies for the
 class of horizontal queuing latency can be computed in polynomial time,
 and give a constructive algorithm for computing such an optimal strategy.
\end_layout

\begin_layout Subsection
Stackelberg routing game
\end_layout

\begin_layout Standard
We consider the following problem: given a network instance 
\begin_inset Formula $(N,r)$
\end_inset

 under constant flow demand 
\begin_inset Formula $r$
\end_inset

, assume a coordinator (a central authority) has control over a fraction
 
\begin_inset Formula $\compRate$
\end_inset

 of the flow: the corresponding agents are 
\emph on
compliant
\emph default
 and willing to let the coordinator choose their routes.
 The coordinator (who plays the role of the leader in the Stackelberg game)
 assigns the compliant flow 
\begin_inset Formula $\compRate r$
\end_inset

 according to a Stackelberg strategy 
\begin_inset Formula $s$
\end_inset

 that is a feasible flow assignment for the instance 
\begin_inset Formula $(\NLinks,\compRate\qdemand)$
\end_inset

, i.e.
 
\begin_inset Formula $s$
\end_inset

 satisfies: 
\begin_inset Formula $\cFlow[\link]\leq\flow[\link]^{\max}\,\forall n\leq N$
\end_inset

 and 
\begin_inset Formula $\sum_{n}\cFlow[\link]=\compRate r$
\end_inset

.
\end_layout

\begin_layout Standard
We assume that the remaining flow 
\begin_inset Formula $(1-\compRate)r$
\end_inset

 represents selfish agents (who play the role of followers in the Stackelberg
 game), who will choose their routes after the Stackelberg strategy 
\begin_inset Formula $s$
\end_inset

 is revealed.
 This induces an assignment 
\begin_inset Formula $(\ncFlow(\cFlow),m(\cFlow))$
\end_inset

 of the selfish flow at Nash equilibrium, and we assume that the assignment
 
\begin_inset Formula $s$
\end_inset

 of compliant agents 
\emph on
is not affected
\emph default
 after introducing the non-compliant flow on the network.
 
\end_layout

\begin_layout Standard
Since 
\begin_inset Formula $s$
\end_inset

 may induce multiple Nash equilibria, we define the assignment 
\begin_inset Formula $(t(s),m(s))$
\end_inset

 to be the best such equilibrium (as defined in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Best-Nash-Equilibria"

\end_inset

).
 To characterize this Nash equilibrium, which we refer to as the 
\emph on
induced equilibrium
\emph default
 by strategy 
\begin_inset Formula $s$
\end_inset

, we note that the flow on link 
\begin_inset Formula $n$
\end_inset

 is simply 
\begin_inset Formula $\cFlow[\link]+\ncFlow[\link](\cFlow)$
\end_inset

, and we have for all 
\begin_inset Formula $n\in\Supp{t_{n}(s)}$
\end_inset

 and for all 
\begin_inset Formula $k\in\left\{ 1,\dots,N\right\} $
\end_inset

: 
\begin_inset Formula 
\[
\latency[\link]\left(\cFlow[\link]+\ncFlow[\link](\cFlow),\Mode[\link](\cFlow)\right)\leq\latency[k]\left(\cFlow[k]+\ncFlow[k](\cFlow),\Mode[k](\cFlow)\right)
\]

\end_inset

 Equivalently, all links that are in the support of the selfish flow assignment
 
\begin_inset Formula $t(s)$
\end_inset

 have a common latency 
\begin_inset Formula $\latency[0]$
\end_inset

 in the induced equilibrium, and links that are not in the support have
 latency greater than or equal to 
\begin_inset Formula $\latency[0]$
\end_inset

.
\end_layout

\begin_layout Standard
This can be summarized in the following definition of a Stackelberg strategy.
 Let 
\begin_inset Formula $(\NLinks,r,\compRate)$
\end_inset

 denote an instance of the Stackelberg game played on the network instance
 
\begin_inset Formula $(\NLinks,r)$
\end_inset

 with compliance rate 
\begin_inset Formula $\compRate$
\end_inset

.
\end_layout

\begin_layout Definition

\emph on
Stackelberg Strategy
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:stack"

\end_inset

Consider an instance 
\begin_inset Formula $(\NLinks,r,\compRate)$
\end_inset

 of the Stackelberg routing game.
 A Stackelberg strategy for this instance is an assignment 
\begin_inset Formula $s$
\end_inset

 of the compliant flow 
\begin_inset Formula $\compRate r$
\end_inset

 that is feasible for the instance 
\begin_inset Formula $(\NLinks,\compRate\qdemand)$
\end_inset

, and which induces 
\emph on
best Nash equilibrium
\emph default
 
\begin_inset Formula $(\ncFlow(\cFlow),m(\cFlow))$
\end_inset

 of the non-compliant flow, as defined in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Best-Nash-Equilibria"

\end_inset

, such that 
\begin_inset Formula $s+t(s)$
\end_inset

 is feasible for the instance 
\begin_inset Formula $(\NLinks,r)$
\end_inset

 and 
\begin_inset Formula $\exists l_{0}>0$
\end_inset

 such that 
\begin_inset Formula 
\begin{align*}
\forall n\in\Supp{\ncFlow(\cFlow)},\, & \latency[\link]\left(\cFlow[\link]+\ncFlow[\link](\cFlow),\Mode[\link](\cFlow)\right)=\latency[0]\\
\forall n\notin\Supp{\ncFlow(\cFlow)},\, & \latency[\link]\left(\cFlow[\link],\Mode[\link](\cFlow)\right)\geq\latency[0]
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
This extends the definition usually used in the congestion games literature,
 see for example 
\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2001stackelberg"

\end_inset

.
\end_layout

\begin_layout Standard
We will denote by 
\begin_inset Formula $\text{S}(\NLinks,r,\compRate)\subset\Rea[\NLinks]$
\end_inset

 the set of Stackelberg strategies for network instance 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $(\NLinks,r,\compRate)$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
.
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Note that a feasible flow assignment 
\begin_inset Formula $s$
\end_inset

 of compliant flow may fail to induce a Nash equilibrium 
\begin_inset Formula $(t,m)$
\end_inset

 and therefore is not considered to be a Stackelberg strategy.
\end_layout

\begin_layout Plain Layout
To see this, consider the following 2-link network such that link 
\begin_inset Formula $1$
\end_inset

 is faster 
\begin_inset Formula $\parA[1]<\parA[2]$
\end_inset

 and has larger capacity 
\begin_inset Formula $\flow[1]^{\max}>\flow[2]^{\max}$
\end_inset

.
 Now assume that the network is subject to flow demand 
\begin_inset Formula $r=\flow[1]^{\max}+\epsilon$
\end_inset

 and most of the flow is compliant 
\begin_inset Formula $\compRate r=\flow[1]^{\max}$
\end_inset

.
 Consider the following assignment: 
\begin_inset Formula $s=(\flow[1]^{\max},0)$
\end_inset

.
\end_layout

\begin_layout Plain Layout
Assuming that the assignment of compliant agents is not affected by introducing
 the non-compliant flow, we have for any assignment 
\begin_inset Formula $t$
\end_inset

 of non-compliant flow, 
\begin_inset Formula $t_{1}=0$
\end_inset

 and 
\begin_inset Formula $t_{2}>0$
\end_inset

.
 Therefore 
\begin_inset Formula $t$
\end_inset

 is not at Nash equilibrium since 
\begin_inset Formula $\Supp t=\{2\}$
\end_inset

 and 
\begin_inset Formula $\latency[2](s_{2}+t_{2},\Mode[2])>\latency[1](s_{1},0)$
\end_inset

 (non compliant agents are forced to use less efficient link 2).
\end_layout

\end_inset


\end_layout

\begin_layout Standard
We next show that the induced Nash equilibrium has one link in free-flow:
\end_layout

\begin_layout Lemma

\emph on
Characterization of the induced Nash Equilibrium
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lemma:inducedNCeq"

\end_inset

Let 
\begin_inset Formula $s\in\StackSet$
\end_inset

 be a Stackelberg strategy for the Stackelberg instance 
\begin_inset Formula $(\NLinks,r,\compRate)$
\end_inset

, and 
\begin_inset Formula $(t(s),m(s))$
\end_inset

 its induced best Nash equilibrium.
 Then the last link in the support of 
\begin_inset Formula $t(s)$
\end_inset

 is in free-flow, i.e.
 
\begin_inset Formula $\Mode[\max\Supp{t(s)}]=0$
\end_inset

.
\end_layout

\begin_layout Proof
Note that 
\begin_inset Formula $(t(s),m(s))$
\end_inset

 is the best Nash equilibrium for the instance 
\begin_inset Formula $(N,\compRate r)$
\end_inset

 and latencies
\begin_inset Formula 
\begin{align*}
\tilde{{l}}_{n}:[0,\flowMax[n]-s_{n}]\times\left\{ 0,1\right\}  & \longrightarrow\Rea_{+}\\
(\flow[n],\Mode[n]) & \longmapsto l_{n}(s_{n}+\flow[n],\Mode[n])
\end{align*}

\end_inset

Latencies 
\begin_inset Formula $\tilde{l}_{n}$
\end_inset

 satisfy the assumptions of the horizontal queuing latencies class.
 Therefore, by Theorem 
\begin_inset CommandInset ref
LatexCommand formatted
reference "theorem:bne"

\end_inset

, we immediately have the result.
\end_layout

\begin_layout Subsection
Optimal Stackelberg strategies
\begin_inset CommandInset label
LatexCommand label
name "sec:Optimal-Stackelberg-strategies"

\end_inset


\end_layout

\begin_layout Standard
In this section we solve for optimal Stackelberg strategies, i.e.
 Stackelberg strategies that induce Nash equilibria of minimal cost.
\end_layout

\begin_layout Definition

\emph on
Optimal Stackelberg strategy
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:stack_eq"

\end_inset

An optimal Stackelberg strategy 
\begin_inset Formula $s^{*}$
\end_inset

 is a solution to the optimization problem 
\begin_inset Formula 
\begin{align*}
s^{*}=\arg\min_{s\in\StackSet}C\left(s+\ncFlow(\cFlow),m(\cFlow)\right)
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Here 
\begin_inset Formula $(\ncFlow(\cFlow),m(\cFlow))$
\end_inset

 is the equilibrium induced by 
\begin_inset Formula $s$
\end_inset

.
\end_layout

\begin_layout Standard
We also introduce a definition that will be useful in proving the main result.
\end_layout

\begin_layout Definition

\emph on
At least 
\begin_inset Formula $i$
\end_inset

-congested link
\end_layout

\begin_layout Definition
Consider a network under feasible flow assignment 
\begin_inset Formula $(\flow,\Mode)$
\end_inset

.
 Link 
\begin_inset Formula $n$
\end_inset

 is said to be at least 
\begin_inset Formula $i$
\end_inset

-congested (
\begin_inset Formula $i\geq n+1$
\end_inset

) under assignment 
\begin_inset Formula $(\flow,\Mode)$
\end_inset

 if it is congested 
\begin_inset Formula $(\Mode[n]=1)$
\end_inset

 and its latency is at least 
\begin_inset Formula $\parA[i]$
\end_inset

 
\begin_inset Formula 
\[
l_{n}(\flow[n],\Mode[n])\geq\parA[i]
\]

\end_inset

This is equivalent to 
\begin_inset Formula $\Mode[n]=1$
\end_inset

 and 
\begin_inset Formula $\flow[n]\leq\cffFlow ni$
\end_inset

.
 If the above holds with equality, we say that the link is exactly 
\begin_inset Formula $i$
\end_inset

-congested.
\end_layout

\begin_layout Standard
Note that if 
\begin_inset Formula $j\geq i\geq n+1$
\end_inset

, then if link 
\begin_inset Formula $n$
\end_inset

 is at least 
\begin_inset Formula $j$
\end_inset

-congested under 
\begin_inset Formula $(x,m)$
\end_inset

, then it is also at least 
\begin_inset Formula $i$
\end_inset

-congested under 
\begin_inset Formula $(x,\Mode)$
\end_inset

.
\end_layout

\begin_layout Standard
And if 
\begin_inset Formula $(t,\Mode)$
\end_inset

 is a single link free-flow equilibrium, and 
\begin_inset Formula $i=\max\Supp t$
\end_inset

, then all links 
\begin_inset Formula $n\in\{1,\dots,i-1\}$
\end_inset

 are exactly 
\begin_inset Formula $i$
\end_inset

-congested.
\end_layout

\begin_layout Section
Computing the optimal Stackelberg strategy
\begin_inset CommandInset label
LatexCommand label
name "sec:Computing-the-optimal"

\end_inset


\end_layout

\begin_layout Standard
In this section, we show the following result: the optimal Stackelberg strategy
 can be computed in polynomial time for parallel networks with 
\begin_inset Formula $N$
\end_inset

 links for the class of horizontal queuing congestion functions defined
 in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sub:latency_class"

\end_inset

.
 This result contrasts with the class of non-decreasing latency functions
 where the optimal Stackelberg strategy is shown to be NP-hard to compute,
 see
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2001stackelberg"

\end_inset

.
\end_layout

\begin_layout Standard
The optimal Stackelberg strategy in our case corresponds to:
\end_layout

\begin_layout Itemize
First computing the best Nash equilibrium of non-compliant agents alone,
 
\begin_inset Formula $(\bar{t},\bar{m})=\BestNashEquilibrium N{(1-\compRate)r}$
\end_inset


\end_layout

\begin_layout Itemize
Then assigning the compliant flow by filling the remaining links (i.e.
 those that are not congested under 
\begin_inset Formula $(\bar{t},\bar{m})$
\end_inset

), up to maximum capacity, starting with the faster links.
 
\end_layout

\begin_layout Standard
Intuitively, the best induced Nash equilibrium 
\begin_inset Formula $(t(s),m(s))$
\end_inset

 of any Stackelberg strategy 
\begin_inset Formula $s$
\end_inset

 will be more congested than the best Nash equilibrium 
\begin_inset Formula $(\bar{t},\bar{\Mode})$
\end_inset

 of instance 
\begin_inset Formula $(\NLinks,(1-\compRate)r)$
\end_inset

.
 So if we can find a strategy 
\begin_inset Formula $\bar{s}$
\end_inset

 that induces equilibrium 
\begin_inset Formula $(\bar{t},\bar{\Mode})$
\end_inset

 and that has minimal cost, then one expects this strategy to be optimal.
 Next, we detail this idea by defining a candidate Stackelberg strategy
 
\begin_inset Formula $\bar{s}$
\end_inset

 that will later be shown to be optimal.
\end_layout

\begin_layout Subsection
A candidate Stackelberg strategy: Non-Compliant First
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $(\bar{t},\bar{m})$
\end_inset

 denote the 
\emph on
best Nash equilibrium
\emph default
 for the instance 
\begin_inset Formula $(\NLinks,(1-\compRate)\qdemand)$
\end_inset

.
 Let 
\begin_inset Formula $k=\max\Supp{\bar{t}}$
\end_inset

 be the last link in the support of 
\begin_inset Formula $\bar{t}$
\end_inset

.
 Then we have from Equations 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:x_bar"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:m_bar"

\end_inset

, 
\begin_inset Formula $\bar{m}=(1,\dots,1,\stackrel{k}{0},\dots,0)$
\end_inset

 and 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
small
\end_layout

\end_inset

 
\begin_inset Formula 
\[
\bar{t}=\left(\cffFlow 1k,\dots,\cffFlow{k-1}k,(1-\compRate)\qdemand-\sum_{n=1}^{k-1}\cffFlow nk,0,\dots,0\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
normalsize
\end_layout

\end_inset


\end_layout

\begin_layout Standard
i.e.
 links 
\begin_inset Formula $\{1,\dots,k-1\}$
\end_inset

 are 
\begin_inset Formula $k$
\end_inset

-congested, and link 
\begin_inset Formula $k$
\end_inset

 is in free-flow.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:optimal_stackelberg_nc"

\end_inset

 shows best Nash equilibrium 
\begin_inset Formula $(\bar{t},\bar{\Mode})$
\end_inset

 on a sample network, where the latency in congestion 
\begin_inset Formula $l_{n}(.,1)$
\end_inset

 is taken to be affine for simplicity.
\end_layout

\begin_layout Standard
We now define Stackelberg strategy 
\begin_inset Formula $\bar{s}$
\end_inset

 as the optimal assignment (i.e.
 of least cost) of compliant flow 
\begin_inset Formula $\compRate\qdemand$
\end_inset

 that induces equilibrium 
\begin_inset Formula $(\bar{t},\bar{m})$
\end_inset

.
 It is easy to see that 
\begin_inset Formula $\bar{s}$
\end_inset

 is simply given by assigning the compliant flow to remaining links 
\begin_inset Formula $\{k,k+1,\dots,\NLinks\}$
\end_inset

 successively, each up to maximum capacity.
 The strategy 
\begin_inset Formula $\bar{s}$
\end_inset

 will assign 
\begin_inset Formula $\flowMax[k]-\bar{t}_{k}$
\end_inset

 on link 
\begin_inset Formula $k$
\end_inset

, then 
\begin_inset Formula $\flowMax[k+1]$
\end_inset

 on link 
\begin_inset Formula $k+1$
\end_inset

, 
\begin_inset Formula $\flowMax[k+2]$
\end_inset

 on link 
\begin_inset Formula $k+2$
\end_inset

 and so on.
 Let 
\begin_inset Formula $l=\min\{n|\compRate\qdemand-(\sum_{n=k}^{l-1}\flowMax[n]-t_{k})\geq0\}$
\end_inset

 be the least efficient link used by the Stackelberg assignment.
 Then 
\begin_inset Formula $\bar{s}$
\end_inset

 is given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\bar{s} & = & (0,\dots,\stackrel{k-1}{0},\flowMax[k]-\bar{t}_{k},\flowMax[k+1],\dots,\flowMax[l-1],\nonumber \\
 &  & \compRate\qdemand-(\sum_{n=k}^{l-1}\flowMax[n]-\bar{t_{k}}),\stackrel{l+1}{0},\dots,0)\label{eq:opt_stack_strategy}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Equivalently, the total assignment 
\begin_inset Formula $\bar{x}=\bar{s}+\bar{t}$
\end_inset

 is given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\bar{x} & = & (\cffFlow 1k,\dots,\cffFlow{k-1}k,\flowMax[k],\flowMax[k+1],\dots,\flowMax[l-1],\nonumber \\
 &  & \qdemand-\sum_{n=1}^{k-1}\cffFlow nk-\sum_{n=k}^{l-1}\flowMax[n],\stackrel{l+1}{0},\dots,0)\label{eq:opt_stack_flows}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
and the corresponding latencies are
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\bar{l}=\left(\parA[k],\dots,\parA[k],\parA[k+1],\dots,\parA[l],\stackrel{l+1}{0},\dots,0\right)\label{eq:opt_stack_latencies}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
We will denote by 
\begin_inset Formula $\text{NCF}(\NLinks,r,\compRate)=\bar{s}$
\end_inset

 the 
\emph on
non-compliant first
\emph default
 strategy for the Stackelberg instance 
\begin_inset Formula $(\NLinks,r,\compRate)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/optimal_stackelberg1.pdf
	width 1.6in

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Best Nash equilibrium 
\begin_inset Formula $(\bar{t},\bar{\Mode})$
\end_inset

 of non-compliant flow 
\begin_inset Formula $(1-\compRate)r$
\end_inset

.
 All links in the support 
\begin_inset Formula $\left\{ 1,\dots,k\right\} $
\end_inset

 have the same latency 
\begin_inset Formula $a_{k}$
\end_inset

.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:optimal_stackelberg_nc"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $\quad$
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/optimal_stackelberg2.pdf
	width 1.6in

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Equilibrium induced by candidate Stackelberg strategy 
\begin_inset Formula $\bar{s}$
\end_inset

.
 Flows that correspond to the Stackelberg strategy 
\begin_inset Formula $\bar{s}$
\end_inset

 are highlighted.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:optimal_stackelberg_total"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $\quad$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Non-compliant first (NCF) strategy.
 In this example, latencies are taken to be affine in congestion for simplicity,
 the results hold for the general class of horizontal queuing latencies.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:optimal_stackelberg_total"

\end_inset

 shows the total flow 
\begin_inset Formula $\bar{x}_{n}=\bar{s}_{n}+\bar{t}_{n}$
\end_inset

 on each link.
 Links 
\begin_inset Formula $\left\{ 1,\dots,k-1\right\} $
\end_inset

 are exactly 
\begin_inset Formula $k$
\end_inset

-congested, links 
\begin_inset Formula $\left\{ k,\dots,l-1\right\} $
\end_inset

 are in free-flow and at maximum capacity, and the remaining flow goes on
 link 
\begin_inset Formula $l$
\end_inset

.
\end_layout

\begin_layout Standard
In the next section we show that strategy 
\begin_inset Formula $\bar{s}$
\end_inset

 is indeed an optimal Stackelberg strategy.
\end_layout

\begin_layout Subsection
The Non-Compliant First strategy is optimal
\end_layout

\begin_layout Theorem

\emph on
Optimal Stackelberg Strategy
\end_layout

\begin_layout Theorem
\begin_inset Formula $\bar{s}=\text{NCF}(\NLinks,r,\compRate)$
\end_inset

 is an optimal Stackelberg strategy for the Stackelberg instance 
\begin_inset Formula $(\NLinks,r,\compRate)$
\end_inset

.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $s\in S(\NLinks,r,\compRate)$
\end_inset

 be a Stackelberg strategy for the Stackelberg instance 
\begin_inset Formula $(N,r,\compRate)$
\end_inset

 and 
\begin_inset Formula $(t,\Mode)$
\end_inset

 be the best induced Nash equilibrium for the non-compliant flow.
 We will show that 
\begin_inset Formula $C(x,\Mode)\geq C(\bar{x},\bar{\Mode})$
\end_inset

, where 
\begin_inset Formula $x=s+t$
\end_inset

 and 
\begin_inset Formula $\bar{x}=\bar{s}+\bar{t}$
\end_inset

.
\end_layout

\begin_layout Proof
\noindent
The proof proceeds as follows: we first show that links 
\begin_inset Formula $\{1,\dots,l-1\}$
\end_inset

 are more congested under assignment 
\begin_inset Formula $(x,m)$
\end_inset

 than under 
\begin_inset Formula $(\bar{x},\bar{m})$
\end_inset

, in the following sense: these links have worse latency 
\begin_inset Formula $\latency[n](x_{n},m_{n})\geq\latency[n](\bar{x}_{n},\bar{m}_{n})$
\end_inset

, and hold less flow 
\begin_inset Formula $x_{n}\leq\bar{x}_{n}$
\end_inset

.
 Then we conclude by lower bounding the cost 
\begin_inset Formula $C(x,m)$
\end_inset

.
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $k'=\max\Supp t$
\end_inset

 be the link with largest free-flow latency, in the support of the non-compliant
 flow.
 By Lemma 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lemma:inducedNCeq"

\end_inset

, we have 
\begin_inset Formula $\Mode[k']=0$
\end_inset

, i.e.
 link 
\begin_inset Formula $k'$
\end_inset

 is in free-flow under assignment 
\begin_inset Formula $(x,\Mode)=(s+t,m)$
\end_inset

.
 We start by showing that 
\begin_inset Formula $k'\geq k$
\end_inset

 where 
\begin_inset Formula $k=\max\Supp{\bar{t}}$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Lemma

\emph on
Comparing the supports of induced equilibria
\end_layout

\begin_layout Lemma
The last link in the support of 
\begin_inset Formula $t(s)$
\end_inset

 has higher free-flow latency than the last link in the support of 
\begin_inset Formula $\bar{t}$
\end_inset

: 
\begin_inset Formula $k'\geq k$
\end_inset

.
 
\end_layout

\begin_layout Standard
Intuitively, since 
\begin_inset Formula $(\bar{t},\bar{m})$
\end_inset

 is the 
\emph on
best Nash equilibrium
\emph default
 of the non-compliant agents when they are not sharing the network with
 any other flow, the cost of this assignment 
\begin_inset Formula $(\bar{t},\bar{\Mode})$
\end_inset

 is less than the cost of any equilibrium after introducing additional flow
 
\begin_inset Formula $s$
\end_inset

.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Proof
First note that 
\begin_inset Formula $(s+t(s),m)$
\end_inset

 restricted to 
\begin_inset Formula $\Supp{t(s)}$
\end_inset

 is at Nash equilibrium.
 Then since link 
\begin_inset Formula $k'$
\end_inset

 is in free-flow we have 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $l_{k'}(s_{k'}+t_{k'}(s),m_{k'})=a_{k'}$
\end_inset

,
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 and since 
\begin_inset Formula $k'\in\Supp{t(s)}$
\end_inset

, we have by Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:stack"

\end_inset

 that any other link has higher latency.
 In particular, 
\begin_inset Formula $\forall i\in\left\{ 1,\dots k'-1\right\} $
\end_inset

, 
\begin_inset Formula $l_{i}(s_{i}+t_{i}(s),m_{i})\geq a_{k'}$
\end_inset

, thus 
\begin_inset Formula $s_{i}+t_{i}(s)\leq\cffFlow i{k'}$
\end_inset

.
 Therefore we have 
\begin_inset Formula $\sum_{n=1}^{k'}s_{n}+t_{n}(s)\leq\sum_{n=1}^{k'-1}\cffFlow n{k'}+\flowMax[k']$
\end_inset

.
 But 
\begin_inset Formula $\sum_{n=1}^{k'}(s_{n}+t_{n}(s))\geq\sum_{n\in\Supp t}t_{n}(s)=(1-\compRate)r$
\end_inset

 since 
\begin_inset Formula $\Supp t\subset\left\{ 1,\dots,k'\right\} $
\end_inset

.
 Therefore
\end_layout

\begin_layout Proof
\begin_inset Formula 
\[
(1-\compRate)r\leq\sum_{n=1}^{k'-1}\cffFlow n{k'}+\flowMax[k']
\]

\end_inset


\end_layout

\begin_layout Proof
and by Lemma 
\begin_inset CommandInset ref
LatexCommand ref
reference "lemma:slff"

\end_inset

 applied to a network with 
\begin_inset Formula $k'$
\end_inset

 links, this guarantees the existence of a single-link free-flow Nash Equilibriu
m for the network instance 
\begin_inset Formula $(k',(1-\compRate)r)$
\end_inset

.
 Let 
\begin_inset Formula $(\tilde{t},\tilde{m})\in\Rea[k']\times\left\{ 0,1\right\} ^{k'}$
\end_inset

 be such an equilibrium.
 The cost of 
\begin_inset Formula $(\tilde{t},\tilde{m})$
\end_inset

 is 
\begin_inset Formula $(1-\compRate)rl_{0}$
\end_inset

 where 
\begin_inset Formula $l_{0}\leq a_{k'}$
\end_inset

 is the free-flow latency of the last link in the support of 
\begin_inset Formula $\tilde{t}$
\end_inset

.
 Thus 
\begin_inset Formula $C(\tilde{t},\tilde{m})\leq(1-\compRate)ra_{k'}$
\end_inset

.
\end_layout

\begin_layout Proof
Then 
\begin_inset Formula $((\tilde{t}_{1},\dots,\tilde{t}_{k'},0,\dots,0),(\tilde{m}_{1},\dots,\tilde{m}_{k'},0,\dots,0)$
\end_inset

 
\begin_inset Formula $\in\Rea[\NLinks]\times\left\{ 0,1\right\} ^{N}$
\end_inset

 is clearly a Nash equilibrium for the instance 
\begin_inset Formula $((1-\compRate)r,N)$
\end_inset

, and has the same cost 
\begin_inset Formula $C(\tilde{t},\tilde{m})\leq(1-\compRate)ra_{k'}$
\end_inset

.
 Since by definition 
\begin_inset Formula $(\bar{t},\bar{m})$
\end_inset

 is the 
\emph on
best Nash equilibrium
\emph default
 for the instance 
\begin_inset Formula $((1-\compRate)r,N)$
\end_inset

 and has cost 
\begin_inset Formula $(1-\compRate)ra_{k}$
\end_inset

, we must have 
\begin_inset Formula $(1-\compRate)ra_{k}\leq(1-\compRate)ra_{k'}$
\end_inset

, i.e.
 
\begin_inset Formula $a_{k}\leq a_{k'}$
\end_inset

.
 This completes the proof of the Lemma.
\end_layout

\end_deeper
\begin_layout Proof
Using the lemma, we can now show that links 
\begin_inset Formula $\{1,\dots,l-1\}$
\end_inset

 are more congested under assignment 
\begin_inset Formula $(x,m)$
\end_inset

 than candidate assignment 
\begin_inset Formula $(\bar{x},\bar{m})$
\end_inset

.
\end_layout

\begin_layout Proof
Since 
\begin_inset Formula $k'\in\Supp t$
\end_inset

, we have from Definition 
\begin_inset CommandInset ref
LatexCommand ref
reference "def:stack"

\end_inset

 of a Stackelberg strategy and its induced equilibrium, that the latency
 on 
\begin_inset Formula $k'$
\end_inset

 is smaller than the latency on any other link.
 Thus 
\begin_inset Formula $\forall n\in\{1,\dots,k'-1\}$
\end_inset

, 
\begin_inset Formula $l_{n}(x_{n},m_{n})\geq l_{k'}(x_{k'},m_{k'})\geq a_{k'}$
\end_inset

, i.e.
 
\begin_inset Formula $\forall n\in\{1,\dots,k'-1\}$
\end_inset

, 
\begin_inset Formula $n$
\end_inset

 is at least 
\begin_inset Formula $k'$
\end_inset

-congested under assignment 
\begin_inset Formula $(x,m)$
\end_inset

.
 We also have by definition of the candidate assignment 
\begin_inset Formula $(\bar{x},\bar{m})$
\end_inset

 and the resulting latencies given by Equation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:opt_stack_latencies"

\end_inset

, 
\begin_inset Formula $\forall n\in\{1,\dots,k-1\}$
\end_inset

, 
\begin_inset Formula $n$
\end_inset

 is exactly 
\begin_inset Formula $k$
\end_inset

-congested under assignment 
\begin_inset Formula $(\bar{x},\bar{m})$
\end_inset

.
 Thus using the fact that 
\begin_inset Formula $k'\geq k$
\end_inset

, we have 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\forall n\in\{1,\dots,k-1\}$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
, 
\begin_inset Formula $l_{n}(x_{n},m_{n})\geq a_{k'}\geq a_{k}=l_{n}(\bar{x}_{n},\bar{m}_{n})$
\end_inset

, and 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $x_{n}\leq\cffFlow n{k'}\leq\cffFlow nk=\bar{x}_{n}$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
, obtained by inverting the latency function 
\begin_inset Formula $l_{n}(.,m_{n})$
\end_inset


\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
.
\end_layout

\begin_layout Proof
We have from Equation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:opt_stack_flows"

\end_inset

 that 
\begin_inset Formula $\forall n\in\{k,\dots,l-1\}$
\end_inset

, 
\begin_inset Formula $n$
\end_inset

 is in free-flow and at maximum capacity under assignment 
\begin_inset Formula $(\bar{x},\bar{m})$
\end_inset

 (i.e.
 
\begin_inset Formula $\bar{x}_{n}=\flowMax[n]$
\end_inset

 and 
\begin_inset Formula $l_{n}(\bar{x}_{n})=a_{n}$
\end_inset

).
 Thus 
\begin_inset Formula $\forall n\in\{k,\dots,l-1\}$
\end_inset

, 
\begin_inset Formula $l_{n}(x_{n},m_{n})\geq a_{n}=l_{n}(\bar{x}_{n},\bar{m}_{n})$
\end_inset

 and 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $x_{n}\leq\flowMax[n]=\bar{x}_{n}$
\end_inset

.

\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 Therefore we have
\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{align}
l_{n}(x_{n},m_{n}) & \geq l_{n}(\bar{x}_{n},\bar{m}_{n}) & \forall n\in\{1,\dots,l-1\}\label{eq:cong_latency}\\
x_{n} & \leq\bar{x}_{n} & \forall n\in\{1,\dots,l-1\}\label{eq:cong_flow}
\end{align}

\end_inset


\end_layout

\begin_layout Proof
Note that 
\begin_inset Formula $\forall n\in\{1,\dots,k\}$
\end_inset

, 
\begin_inset Formula $l_{n}(\bar{x}_{n},\bar{m}_{n})=a_{k}\leq a_{l}$
\end_inset

, and 
\begin_inset Formula $\forall n\in\{k,\dots,l-1\}$
\end_inset

, 
\begin_inset Formula $l_{n}(\bar{x}_{n},\bar{m}_{n})=a_{n}\leq a_{l}$
\end_inset

, thus we have 
\begin_inset Formula 
\begin{align}
l_{n}(\bar{x}_{n},\bar{m}_{n}) & \leq a_{l} & \forall n\in\{1,\dots,l-1\}\label{eq:cong_latencybar}
\end{align}

\end_inset


\end_layout

\begin_layout Proof
Also note that each link 
\begin_inset Formula $n\in\{l,\dots,N\}$
\end_inset

 has latency at least 
\begin_inset Formula $a_{n}$
\end_inset

 (the latency on a link is always greater than the free-flow latency) and
 
\begin_inset Formula $a_{n}\geq a_{l}$
\end_inset

, thus
\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{align}
l_{n}(x_{n},m_{n}) & \geq a_{l} & \forall n\in\{l,\dots,N\}\label{eq:ff_latency}
\end{align}

\end_inset


\end_layout

\begin_layout Proof
We can now lower-bound the cost of the assignment 
\begin_inset Formula $(x,m)$
\end_inset

 where 
\begin_inset Formula $x=s+t$
\end_inset

 and 
\begin_inset Formula $(t,m)$
\end_inset

 is the 
\emph on
best Nash equilibrium
\emph default
 induced by 
\begin_inset Formula $s$
\end_inset

.
 We have 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
small
\end_layout

\end_inset


\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{align*}
C(x,m) & =\sum_{n=1}^{N}x_{n}l_{n}(x_{n},m_{n})\\
 & =\sum_{n=1}^{l-1}x_{n}l_{n}(x_{n},m_{n})+\sum_{n=l}^{N}x_{n}l_{n}(x_{n},m_{n})\\
 & \geq\sum_{n=1}^{l-1}x_{n}l_{n}(\bar{x}_{n},\bar{m}_{n})+\sum_{n=l}^{N}x_{n}a_{l}
\end{align*}

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
normalsize
\end_layout

\end_inset

 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
using
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:cong_latency"

\end_inset

 and
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:ff_latency"

\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
.
 Then rearranging the terms we have 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
small
\end_layout

\end_inset


\end_layout

\begin_layout Proof
\begin_inset Formula 
\[
C(x,m)\geq\sum_{n=1}^{l-1}(x_{n}-\bar{x}_{n})l_{n}(\bar{x}_{n},\bar{m}_{n})+\sum_{n=1}^{l-1}\bar{x}_{n}l_{n}(\bar{x}_{n},\bar{m}_{n})+\sum_{n=l}^{N}x_{n}a_{l}
\]

\end_inset


\end_layout

\begin_layout Proof
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
normalsize
\end_layout

\end_inset

 Then by 
\begin_inset Formula $\eqref{eq:cong_flow}$
\end_inset

 and 
\begin_inset Formula $\eqref{eq:cong_latencybar}$
\end_inset

 we have 
\begin_inset Formula $\forall n\in\{1,\dots,l-1\}$
\end_inset

, 
\begin_inset Formula $x_{n}-\bar{x}_{n}\leq0$
\end_inset

 and 
\begin_inset Formula $l_{n}(\bar{x}_{n},\bar{m}_{n})\leq a_{l}$
\end_inset

, thus 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
small
\end_layout

\end_inset


\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{eqnarray*}
C(x,m) & \geq & \sum_{n=1}^{l-1}(x_{n}-\bar{x}_{n})a_{l}+\sum_{n=1}^{l-1}\bar{x}_{n}l_{n}(\bar{x}_{n},\bar{m}_{n})+\sum_{n=l}^{N}x_{n}a_{l}\\
 & = & a_{l}\left(\sum_{n=1}^{N}x_{n}-\sum_{n=1}^{l-1}\bar{x}_{n}\right)+\sum_{n=1}^{l-1}\bar{x}_{n}l_{n}(\bar{x}_{n},\bar{m}_{n})\\
 & = & a_{l}\left(r-\sum_{n=1}^{l-1}\bar{x}_{n}\right)+\sum_{n=1}^{l-1}\bar{x}_{n}l_{n}(\bar{x}_{n},\bar{m}_{n})
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Proof
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
normalsize
\end_layout

\end_inset

 But 
\begin_inset Formula $a_{l}\left(r-\sum_{n=1}^{l-1}\bar{x}_{n}\right)=\bar{x}_{l}l_{l}(\bar{x}_{l},\bar{m}_{l})$
\end_inset

 since 
\begin_inset Formula $\Supp{\bar{x}}=\{1,\dots,l\}$
\end_inset

 and 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $l_{l}(\bar{x}_{l},\bar{m}_{l})=a_{l}$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
.
 Therefore 
\begin_inset Formula 
\begin{align*}
C(x,m) & \geq\bar{x}_{l}l_{l}(\bar{x}_{l},\bar{m}_{l})+\sum_{n=1}^{l-1}\bar{x}_{n}l_{n}(\bar{x}_{n},\bar{m}_{n})\\
 & =C(\bar{x},\bar{m})
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Therefore the NCF strategy is an optimal Stackelberg strategy, and it can
 be computed in polynomial time since it is generated in linear time after
 computing the best Nash equilibrium 
\begin_inset Formula $\BestNashEquilibrium{\NLinks}{(1-\compRate)r}$
\end_inset

, which was shown to be quadratic in 
\begin_inset Formula $\NLinks$
\end_inset

.
\end_layout

\begin_layout Standard
Finally, we note that the NCF strategy is, in general, not the unique optimal
 Stackelberg strategy, but the set of optimal Stackelberg strategies can
 be easily generated from the NCF strategy.
 We do not describe this procedure for brevity.
\end_layout

\begin_layout Section
Numerical Results
\begin_inset CommandInset label
LatexCommand label
name "sec:Numerical-Results"

\end_inset


\end_layout

\begin_layout Subsection
Optimal Stackelberg routing on an example network
\end_layout

\begin_layout Standard
In this section, we apply the previous results to a scenario of freeway
 traffic from the San Francisco Bay Area.
 Four parallel highways are chosen starting in San Francisco and ending
 in San Jose: I-101, I-280, I-880 and I-580 (shown in Figure
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Map-of-parallel"

\end_inset

).
 We analyze the inefficiency of Nash equilibria due to selfish routing and
 lack of coordination, and show how optimal Stackelberg routing strategies
 (non-compliant first strategy) can improve these conditions.
 We first use price of stability 
\begin_inset CommandInset citation
LatexCommand cite
key "Anshelevich2004"

\end_inset

 to measure the improvement in performance achieved by optimal Stackelberg
 routing.
 Price of Stability is defined as the ratio between the cost of the best
 Nash equilibrium, and the cost of the social optimum: 
\begin_inset Formula $\POS Nr=\frac{\Latency\left(\BestNashEquilibrium{\NLinks}r\right)}{\Latency^{*}}$
\end_inset

 where 
\begin_inset Formula $C^{*}=\min_{(x,m)}C(x,m)$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/ParallelHighwayMap.pdf
	width 1.7in

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Map of parallel highway network showing four parallel highways connecting
 San Francisco to San Jose.
\begin_inset CommandInset label
LatexCommand label
name "fig:Map-of-parallel"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $\quad$
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/LatenciesSim.pdf
	width 1.7in
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Latency (minutes) vs.
 demand (cars/minute) for parallel highway routes.
\begin_inset CommandInset label
LatexCommand label
name "fig:Latency-functions-for"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $\quad$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Example highway network connecting San Francisco to San Jose.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Latency-functions-for"

\end_inset

 shows the latency functions for the highway network, which we derived assuming
 a triangular fundamental diagram for each highway stretch (the resulting
 latency functions are decreasing harmonic in congestion.
 See 
\begin_inset CommandInset citation
LatexCommand cite
key "fullversion"

\end_inset

 for a detailed derivation of latency functions from a triangular fundamental
 diagram).
 Under free-flow conditions, I-101 is the fastest route available between
 San Francisco and San Jose.
 But when I-101 becomes congested, other routes represent viable alternatives.
 To analyze how congestion increases with demand, we compute total network
 latency profiles (Equation 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:total-cost"

\end_inset

) for optimal Stackelberg strategies as a function of demand.
 In addition, to show how congestion improves as a function of fraction
 of compliance 
\begin_inset Formula $\compRate$
\end_inset

, we compute network latency profiles over a range of compliance rates.
\end_layout

\begin_layout Standard
The numerical results are summarized in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Results-for-network"

\end_inset

.
 The price of stability plot in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Price-of-Stability"

\end_inset

 shows that even with a small compliance rate, Stackelberg routing can decongest
 a given link 
\begin_inset Formula $n$
\end_inset

 for a fixed flow demand, when the Nash equilibrium is slightly above maximum
 capacity on link 
\begin_inset Formula $n$
\end_inset

.
 This shows the significant benefits of Stackelberg routing, especially
 around the critical regions of flow demand where the support of the best
 Nash equilibrium changes.
 
\end_layout

\begin_layout Standard
We also note that for a fixed compliance rate 
\begin_inset Formula $\compRate$
\end_inset

, Stackelberg routing can delay the congestion of a particular link 
\begin_inset Formula $n$
\end_inset

, i.e.
 increase the critical flow demand 
\begin_inset Formula $r^{(n)}$
\end_inset

 above which link 
\begin_inset Formula $n$
\end_inset

 becomes congested (formally, 
\begin_inset Formula $r^{(n)}=\inf_{r}\left\{ r|n\text{ is congested under }\BestNashEquilibrium{\NLinks}r\right\} $
\end_inset

).
 Let 
\begin_inset Formula $r^{(n,\compRate)}$
\end_inset

 denote the critical flow for the Stackelberg instance 
\begin_inset Formula $(\NLinks,r,\compRate)$
\end_inset

, i.e.
 
\begin_inset Formula $r^{(n,\compRate)}=\inf_{r}\left\{ r|n\text{ is congested under }(t(\bar{s}),m(\bar{s})),\ \bar{s}=\text{NCF}(\NLinks,r,\compRate)\right\} $
\end_inset

.
 Then the delay range (the increase in critical flow demand 
\begin_inset Formula $r^{(n,\compRate)}-r^{(n)}$
\end_inset

) is proportional to the compliance rate.
 Observing the behavior around the 600-800 cars/minute, it takes about 30
 extra cars/minute to congest the second link with 5% compliance, about
 100 cars/minute for 15% compliance, while for 50% compliance, the second
 link appears to only congest near network capacity.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/POSSim.pdf
	width 1.7in
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Price of stability vs.
 demand (cars/minute) for different compliance rates.
\begin_inset CommandInset label
LatexCommand label
name "fig:Price-of-Stability"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $\quad$
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/VOASim.pdf
	width 1.7in
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Value of altruism vs.
 demand (cars/minute) for different compliance rates.
\begin_inset CommandInset label
LatexCommand label
name "fig:Value-of-Altruism"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Results for network efficiency on parallel highway link example.
\begin_inset CommandInset label
LatexCommand label
name "fig:Results-for-network"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
While price of stability describes how inefficient the best Nash equilibrium
 is with respect to the social optimal strategy, another metric, 
\emph on
value of altruism
\emph default
 
\emph on

\begin_inset CommandInset citation
LatexCommand cite
key "aswani2011game"

\end_inset


\emph default
, was introduced to show how performant a particular Stackelberg strategy
 is with respect to the best Nash equilibrium (0% compliance).
 Value of altruism is defined by:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
VOA\left(\NLinks,\qdemand,\compRate\right)=\frac{\min_{s\in\StackSet}C\left(s+\ncFlow(\cFlow),m(\cFlow)\right)}{C\left(\BestNashEquilibrium{\NLinks}{\qdemand}\right)}
\]

\end_inset


\end_layout

\begin_layout Standard
Value of altruism for the example network is shown in Figure 
\begin_inset CommandInset ref
LatexCommand eqref
reference "fig:Value-of-Altruism"

\end_inset

.
 The figure illustrates the 
\begin_inset Quotes eld
\end_inset

delaying
\begin_inset Quotes erd
\end_inset

 effect of optimal Stackelberg routing.
 A small compliance fraction (5-15% on this network) can decongest a given
 link 
\begin_inset Formula $n$
\end_inset

 when the demand is around the critical demand for that link (
\begin_inset Formula $r^{(n)}\leq r<r^{(n,\compRate)}$
\end_inset

), but the link will be congested again for higher values of demand (
\begin_inset Formula $r\geq r^{(n,\compRate)}$
\end_inset

) resulting in a value of altruism of 1.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../figures/POS3dannote.pdf
	width 3.5in
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Price of stability profile
\begin_inset CommandInset label
LatexCommand label
name "fig:POS3d"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The importance of efficient computation of optimal Stackelberg strategies
 can be seen by the complete demand-compliance fraction profile generated
 in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:POS3d"

\end_inset

.
 If the amount of compliance is viewed as a cost to some central controller,
 then the tiers visible in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:POS3d"

\end_inset

 (take 
\begin_inset Formula $\qdemand=1000$
\end_inset

, 
\begin_inset Formula $.3\le\compRate\le.5$
\end_inset

) can be seen as regions of potential waste.
 If a central controller can predict a demand in a range around 1000 cars/minute
 and a maximum compliance fraction of .5, then the controller can reference
 the two-dimensional profile and reduce the compliance fraction to a region
 around .4, since any compliance above 30% and less than 50% does not improve
 the performance of the network.
\end_layout

\begin_layout Subsection
Scaling of optimal Stackelberg strategy algorithm on size of network
\end_layout

\begin_layout Standard
To illustrate the performance of the algorithm as the size of the network
 scales up, the computation time of the optimal Stackelberg strategy was
 measured for 500 randomly generated networks.
 The number of links in a network was chosen between 3 and 1500 and the
 latency functions of each link correspond to randomly generated triangular
 fundamental diagrams.
 The compliance rate was arbitrarily chosen to be 40% and the demand was
 chosen to be 70% that of the maximum capacity of the network at best Nash
 equilibrium.
 The results are shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Computation-time-as"

\end_inset

.
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/SimTime.pdf
	width 1.7in
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Quadratic fit to computation time-network size relationship
\begin_inset CommandInset label
LatexCommand label
name "fig:Computation-time-as"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Formula $\quad$
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/SimDemand.pdf
	width 1.7in
	clip

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Increase of computational time with demand.
\begin_inset CommandInset label
LatexCommand label
name "fig:Computation-time-increases"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Computation time of optimal Stackelberg strategy relative to network size.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As shown in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Optimal-Stackelberg-strategies"

\end_inset

, the worst-case complexity of computing optimal Stackelberg assignments
 is quadratic in the size of the network, which is verified experimentally
 as shown in Figure
\begin_inset ERT
status open

\begin_layout Plain Layout

~
\end_layout

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Computation-time-as"

\end_inset

.
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Computation-time-increases"

\end_inset

 shows that the computation time of the optimal Stackelberg strategy increases
 as the demand increases.
 This is due to the fact the best Nash equilibrium is computed using sequential
 search: the algorithm tests if a Nash equilibrium exists for a particular
 support, and if it fails to find such an equilibrium, increases the size
 of the support.
 As the demand increases, the algorithm will have to check for larger supports,
 which explains the increase in computation time.
\end_layout

\begin_layout Section
Discussion and Open Problems
\begin_inset CommandInset label
LatexCommand label
name "sec:Discussion"

\end_inset


\end_layout

\begin_layout Standard
In order to address the inefficiency of Nash equilibria on horizontal queuing
 networks, we considered the Stackelberg routing game where a central coordinato
r has control over a fraction 
\begin_inset Formula $\compRate$
\end_inset

 of compliant agents.
 We proved that for the class of horizontal queuing congestion latencies
 introduced in 
\begin_inset CommandInset citation
LatexCommand cite
key "fullversion"

\end_inset

, the 
\emph on
non-compliant first
\emph default
 (NCF) strategy is optimal, and that it can be computed in quadratic time
 in the size of the network.
 We illustrated these results using a benchmark network for which we computed
 the decrease in inefficiency that can be achieved using optimal Stackelberg
 routing.
 This example showed that when the demand is near critical flows 
\begin_inset Formula $r^{(n)}$
\end_inset

, optimal Stackelberg routing can achieve a significant increase in efficiency
 even for small values of compliance rate 
\begin_inset Formula $\compRate$
\end_inset

.
\end_layout

\begin_layout Standard
These results show that careful routing of a small compliant population
 can significantly improve the efficiency of the network.
 It is also worth noting that these results indicate that for specific demand
 and compliance ranges, Stackelberg routing can be completely ineffective.
 Therefore identifying the ranges for which optimal Stackelberg routing
 does improve the efficiency of the network is crucial for effective planning
 and control.
\end_layout

\begin_layout Standard
This work offers several directions of future research: the work presented
 here only considers parallel networks under static conditions (constant
 flow demand 
\begin_inset Formula $r$
\end_inset

, and static equilibria): one question is how one may dynamically steer
 the system from one equilibrium to a better one.
 For example, consider the case in which the agents are stuck in a congested
 equilibrium, and assume a coordinator has control over a fraction of the
 flow.
 Can the coordinator steer the system to a single link free-flow equilibrium?
 And what is the minimal compliance rate needed to achieve this? 
\end_layout

\begin_layout Standard
Another question is how robust are the NCF strategy results? Do they hold
 for general network topologies? The extension of our results to general
 network topologies is still an open problem.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "../common-files/bibliography"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
