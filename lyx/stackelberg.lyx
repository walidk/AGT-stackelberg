#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{fullpage}
\end_preamble
\use_default_options false
\begin_modules
theorems-ams
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "lyx_commands.lyx"

\end_inset


\end_layout

\begin_layout Title
Stackelberg strategies for transportation networks
\end_layout

\begin_layout Author
Walid Krichene 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
and
\end_layout

\end_inset

 Jack Reilly
\end_layout

\begin_layout Abstract
We study inefficiencies of transportation networks due to the selfish behaviour
 and lack of coordination of drivers, by comparing social optimal equilibria
 to Nash equilibria.
 Then we investigate possible strategies to reduce the inefficiency by studying
 the Stackelberg routing game: assuming we have control over a fraction
 of the flow on the network, what is a good way of routing that compliant
 flow so that the induced Nash equilibrium is closer to the social optimum
 than the initial Nash equilibrium? Stackelberg scheduling on parallel link
 networks has been studied in a non-transportation setting, and it is shown
 in 
\begin_inset CommandInset citation
LatexCommand cite
key "roughgarden2001stackelberg"

\end_inset

 that computing the optimal Stackelberg assignment is NP-hard in the number
 of links for increasing latency functions.
 We first describe the problem in the specific setting of transportation
 networks, where the dynamics of flow result in latency functions that do
 not satisfy common properties assumed in the literature studying Stackelberg
 scheduling.
 We then characterize Nash equilibria for our network and show that there
 are multiple such equilibria.
 Then we study the Stackelberg game and describe optimal Stackelberg strategy
 in the case of 2 link networks, and show results for general parallel link
 networks.
 
\end_layout

\begin_layout Section
The Model
\end_layout

\begin_layout Subsection
Traffic flows
\end_layout

\begin_layout Standard
We consider a network of 
\begin_inset Formula $\Network$
\end_inset

 parallel links indexed by 
\begin_inset Formula $\link\in\{1,\dots,\Network\}$
\end_inset

, under constant positive flow demand, or rate 
\begin_inset Formula $\qdemand$
\end_inset

.
 The flow 
\begin_inset Formula $\flow[\link]$
\end_inset

 on link 
\begin_inset Formula $\link$
\end_inset

 is a function of the density 
\begin_inset Formula $\mass[\link]$
\end_inset

, given by a triangular fundamental diagram with the following parameters
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\freeflow{\link}$
\end_inset

 the free-flow speed on the link 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\speedCong[\link]$
\end_inset

 the congestion wave speed 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\flowMax[\link]$
\end_inset

 the maximum capacity of the link 
\end_layout

\begin_layout Standard
In the free flow regime (when the density on the link is less than a critical
 density 
\begin_inset Formula $\masscrit[\link]$
\end_inset

 that is given by 
\begin_inset Formula $\speedFF[\link]\mass[\link]^{c}=\flowMax[\link]$
\end_inset

) the velocity is constant and the flow increases linearly in the density
 
\begin_inset Formula $\flow[\link]=\speedFF[\link]\mass[\link]$
\end_inset

.
 In the congested regime (
\begin_inset Formula $\mass[\link]^{c}<\mass[\link]\leq\mass[\link]^{\max}$
\end_inset

 the density on the link is greater than the critical density and less than
 a maximum density given by 
\begin_inset Formula $\flow[\link]^{\max}-\speedCong[\link](\mass[\link]^{\max}-\mass[\link]^{c})=0$
\end_inset

), the flow decreases linearly in the density 
\begin_inset Formula $\flow[\link]=\flow[\link]^{\max}-\speedCong[\link](\mass[\link]-\mass[\link]^{c})=-\speedCong[\link](\mass[\link]-\mass[\link]^{\max})$
\end_inset

 and the velocity is decreasing.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
\flow[\link]=\begin{cases}
\speedFF[\link]\mass[\link] & \mass[\link]\leq\mass[\link]^{c}\\
\flow[\link]^{\max}-\speedCong[\link](\mass[\link]-\mass[\link]^{c})=-\speedCong[\link](\mass[\link]-\mass[\link]^{\max}) & \mass[\link]^{c}<\mass[\link]\leq\mass[\link]^{\max}
\end{cases}\label{eq:flow}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
Note that the flow can aso be written succinctly as 
\begin_inset Formula 
\begin{align}
\flow[\link]=\min\{\speedFF[\link]\mass[\link],-\speedCong[\link](\mass[\link]-\mass[\link]^{max})\}\label{eq:flow_min}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
We denote by 
\begin_inset Formula $(N,r)$
\end_inset

 a network instance with 
\begin_inset Formula $N$
\end_inset

 links, rate 
\begin_inset Formula $r$
\end_inset

, and no compliant flow.
 We next define feasible flow assignments for network instance 
\begin_inset Formula $(N,r)$
\end_inset

.
\end_layout

\begin_layout Definition
A flow assignment 
\begin_inset Formula $\flow\in\mathbb{R}_{+}^{N}$
\end_inset

 is feasible for instance 
\begin_inset Formula $(N,r)$
\end_inset

 if 
\begin_inset Formula $\forall n$
\end_inset

 
\begin_inset Formula $\flow[\link]\leq\flow[\link]^{\max}$
\end_inset

 and 
\begin_inset Formula $\sum_{\link}\flow[\link]=r\qdemand$
\end_inset

 
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $\flow$
\end_inset

 is a feasible flow assignment for 
\begin_inset Formula $(\Network,\qdemand)$
\end_inset

, we denote by 
\begin_inset Formula $Supp(\flow)$
\end_inset

 the support of 
\begin_inset Formula $\flow$
\end_inset

, that is the set of links that are used by the flow assignment 
\begin_inset Formula 
\[
Supp(\flow)=\{\link|\flow[\link]>0\}
\]

\end_inset


\end_layout

\begin_layout Subsection
Steady state equilibria
\end_layout

\begin_layout Standard
We are interested in the steady state equilibria of the network under constant
 positive rate 
\begin_inset Formula $r$
\end_inset

.
 In the steady state equilibria the flow and density variables are static.
\end_layout

\begin_layout Subsection
Latency function
\end_layout

\begin_layout Standard
The velocity on link 
\begin_inset Formula $\link$
\end_inset

 is given by 
\begin_inset Formula $\flow[\link]/\mass[\link]$
\end_inset

, and the individual latency function is 
\begin_inset Formula 
\[
\latency[\link](\mass[\link],\flow[\link])=\frac{\Length[\link]\mass[\link]}{\flow[\link]}
\]

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\Length[\link]$
\end_inset

 is the length of link 
\begin_inset Formula $n$
\end_inset

.
\end_layout

\begin_layout Standard
Using the expression
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:flow"

\end_inset

 of flow as a function of the density, we can write
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
\latency[\link](\mass[\link])=\begin{cases}
\frac{\Length[\link]}{\speedFF[\link]} & \mass[\link]\leq\masscrit[\link]\\
\frac{\Length[\link]}{\speedCong[\link](\massmax[\link]/\mass[\link]-1)} & \masscrit[\link]<\mass[\link]\leq\massmax[\link]
\end{cases}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Note that 
\begin_inset Formula $\latency[\link]$
\end_inset

 is an increasing function of density, but not of flow.
 We can express the latency as a function of flow by introducing an integer
 
\begin_inset Formula $\Mode[\link]\in\{0,1\}$
\end_inset

 that specifies whether link 
\begin_inset Formula $n$
\end_inset

 is congested (
\begin_inset Formula $\Mode[\link]=1$
\end_inset

 if 
\begin_inset Formula $n$
\end_inset

 is congested and 
\begin_inset Formula $\Mode[\link]=0$
\end_inset

 if 
\begin_inset Formula $n$
\end_inset

 is in free-flow) 
\begin_inset Formula 
\[
\mass[\link](\flow[\link],\Mode[\link])=\Mode[\link]\left(\mass[\link]^{\max}-\frac{\flow[\link]}{\speedCong[\link]}\right)+(1-\Mode[\link])\frac{\flow[\link]}{\speedFF[\link]}
\]

\end_inset

 this corresponds to inverting the fundamental diagram that gives the flow
 as a function of density.
 The latency is then given by 
\begin_inset Formula 
\begin{align}
\latency[\link](\flow[\link],\Mode[\link])=\frac{\Length[\link]}{\flow[\link]}\left(\Mode[\link]\left(\mass[\link]^{\max}-\frac{\flow[\link]}{\speedCong[\link]}\right)+(1-\Mode[\link])\frac{\flow[\link]}{\speedFF[\link]}\right)\label{eq:latency}
\end{align}

\end_inset


\end_layout

\begin_layout Standard
The total latency incurred by all users on a link is 
\begin_inset Formula $\flow[\link]\latency[\link](\mass[\link])=\Length[\link]\mass[\link]$
\end_inset

, and the total latency incurred by all users on the network is 
\begin_inset Formula 
\begin{equation}
C(\mass)=\sum_{n}\Length[\link]\mass[\link]=L^{T}\mass\label{eq:cost_function}
\end{equation}

\end_inset


\end_layout

\begin_layout Paragraph
Note
\end_layout

\begin_layout Standard
The latency function does not satisfy properties usually assumed in the
 Stackelberg scheduling literature.
 In particular, the latency 
\begin_inset Formula $\latency[\link](\flow[\link])$
\end_inset

 is not an increasing function of flow: it is a constant function if the
 link is in free-flow, and a 
\emph on
decreasing
\emph default
 function when the link is congested.
 
\begin_inset Formula 
\begin{align*}
\latency[\link](\flow[\link],0) & =\frac{\Length[\link]}{\speedFF[\link]}\\
\latency[\link](\flow[\link],1) & =\Length[\link]\left(\frac{\mass[\link]^{\max}}{\flow[\link]}-\frac{1}{\speedCong[\link]}\right)
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
And for a given flow 
\begin_inset Formula $\flow[\link]$
\end_inset

, there are up to two possible latencies, one corresponding to the free-flow
 regime (few cars on the link moving fast) and one to the congested regime
 (many cars on the link moving slowly).
\end_layout

\begin_layout Standard
As a consequence, some of the known results on congestion networks do not
 apply to our setting: for instance, the network has multiple Nash equilibria
 that have different costs.
 In the next section we specify this result and address the issue of having
 multiple pure Nash equilibria.
\end_layout

\begin_layout Subsection
Reparameterizing Latency
\end_layout

\begin_layout Standard
Since the rest of the report needs only the latency properties of links,
 we will reparameterize the latency function to simplify to three parameter:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\parA[\link]$
\end_inset

: free-flow latency on link 
\begin_inset Formula $\link$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\parB[\link]$
\end_inset

: congestion rate on link 
\begin_inset Formula $\link$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\parC[\link]$
\end_inset

: max flow on link 
\begin_inset Formula $\link$
\end_inset


\end_layout

\begin_layout Standard
Using these parameters, we may now express the latency on link 
\begin_inset Formula $\link$
\end_inset

 as follows:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\latency[\link]\left(\flow[\link],0\right) & = & \parA[\link]\\
\latency[\link]\left(\flow[\link],1\right) & = & \parB[\link]\left(\frac{1}{\flow[\link]}-\frac{1}{\parC[\link]}\right)+\parA[\link]
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Section
Nash Equilibria
\end_layout

\begin_layout Standard
In this section we characterize pure Nash equilibria of the network, which
 we simply refer to as Nash equilibria.
 We first review the essential uniqueness of Nash equilibria in the case
 of increasing latency functions (in the sense that all Nash equilibria
 have the same cost).
 Then we show that latency functions consistent with the fundamental diagram
 of traffic induce multiple Nash equilibria with different costs, and we
 analytically solve for Nash equilibria for 
\begin_inset Formula $(N=2,r)$
\end_inset

 instances, and give some results for 
\begin_inset Formula $(N>2,r)$
\end_inset

 instances.
\end_layout

\begin_layout Subsection
Characterization of Nash equilibria
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:ne"

\end_inset

An assignment 
\begin_inset Formula $(q,m)\in\mathbb{R}_{+}^{N}\times\{0,1\}^{N}$
\end_inset

 for instance 
\begin_inset Formula $(N,r)$
\end_inset

 is at Nash equilibrium, if 
\begin_inset Formula $\forall n$
\end_inset

 
\begin_inset Formula 
\[
\flow[\link]>0\Rightarrow\forall k,\latency[\link](\flow[\link],\Mode[\link])\leq\latency[k](\flow[k],\Mode[k])
\]

\end_inset


\end_layout

\begin_layout Standard
In particular, every (non-atomic) user cannot improve her latency by switching
 to another link.
 As a consequence, all links that are in the support of 
\begin_inset Formula $q$
\end_inset

 have the same latency 
\begin_inset Formula $\latency[0]$
\end_inset

, and links that are not in the support have latency greater than 
\begin_inset Formula $\latency[0]$
\end_inset

.
 Note that to fully characterize the equilibrium one needs to specify the
 congestion state 
\begin_inset Formula $m$
\end_inset

, since the latency on a link depends on whether the link is congested.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lemma:nash_eq"

\end_inset

 If 
\begin_inset Formula $(\flow,\Mode)$
\end_inset

 is an assignment for instance 
\begin_inset Formula $(\Network,\qdemand)$
\end_inset

 at Nash equilibrium, then 
\begin_inset Formula 
\begin{align*}
\flow[\link]>0 & \Rightarrow\latency[\link](\flow[\link],\Mode[\link])=\latency[0]\\
\flow[\link]=0 & \Rightarrow\latency[\link](0,0)\geq\latency[0]
\end{align*}

\end_inset

 and the total latency incurred by the network is 
\begin_inset Formula $\Latency(\flow,\Mode)=\qdemand\latency[0]$
\end_inset

.
 
\end_layout

\begin_layout Standard
Note that links that have zero flow are necessarily in free-flow 
\begin_inset Formula $\flow[\link]=0\Rightarrow\Mode[\link]=0$
\end_inset

.
\end_layout

\begin_layout Subsection
Nash equilibria for increasing latency functions
\end_layout

\begin_layout Standard
Assuming the latency functions 
\begin_inset Formula $\flow[\link]\rightarrow\latency[\link](\flow[\link])$
\end_inset

 are increasing, one can show that all Nash equilibria have the same cost.
 Let 
\begin_inset Formula $\flow$
\end_inset

 and 
\begin_inset Formula $\flow'$
\end_inset

 be two assignments for 
\begin_inset Formula $(\Network,\qdemand)$
\end_inset

 at Nash equilibrium.
 Let 
\begin_inset Formula $\latency[0]$
\end_inset

, respectively 
\begin_inset Formula $\latency[0]'$
\end_inset

 denote the common latency of all links in the support of 
\begin_inset Formula $\flow$
\end_inset

, respectively 
\begin_inset Formula $\flow'$
\end_inset

.
 The cost of the Nash equilibria are respectively 
\begin_inset Formula $\qdemand\latency[0]$
\end_inset

 and 
\begin_inset Formula $\qdemand\latency[0]'$
\end_inset

.
\end_layout

\begin_layout Standard
Assume 
\begin_inset Formula $\flow\neq\flow'$
\end_inset

.
 Then 
\begin_inset Formula $\exists\link_{1},\link_{2}$
\end_inset

 such that 
\begin_inset Formula 
\begin{align*}
\flow[\link_{1}]>q\flow[\link_{1}]'\geq0 &  & \flow[\link_{2}]'>\flow[\link_{2}]\geq0
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Since 
\begin_inset Formula $q$
\end_inset

 is at Nash equilibrium and 
\begin_inset Formula $\link_{1}\in Supp(\flow)$
\end_inset

, 
\begin_inset Formula $\latency[\link_{1}](\flow[\link_{1}])\leq\latency[\link_{2}](\flow[\link_{2}])$
\end_inset

.
 And since 
\begin_inset Formula $\latency[\link_{2}]$
\end_inset

 is increasing 
\begin_inset Formula $\latency[\link_{2}](\flow[\link_{2}])\leq\latency[\link_{2}](\flow[\link_{2}]')$
\end_inset

.
 Thus 
\begin_inset Formula $\latency[0]=\latency[\link_{1}](\flow[\link_{1}])\leq\latency[\link_{2}](\flow[\link_{2}])\leq\latency[\link_{2}](\flow[\link_{2}]')=\latency[0]'$
\end_inset

.
 Exchanging the roles of 
\begin_inset Formula $\flow$
\end_inset

 and 
\begin_inset Formula $\flow'$
\end_inset

 we have 
\begin_inset Formula $\latency[0]'\leq\latency[0]$
\end_inset

.
 Therefore 
\begin_inset Formula $\latency[0]=\latency[0]'$
\end_inset

 and both equilibria have the same cost.
\end_layout

\begin_layout Subsection
Traffic networks have multiple Nash equilibria
\end_layout

\begin_layout Standard
To simplify our discussion, we further assume, without loss of generality,
 that the links are ordered by increasing free-flow latencies, where no
 two links have the same free flow travel time: 
\begin_inset Formula 
\[
\parA[1]<\parA[2]<\ldots<\parA[\Network]
\]

\end_inset


\end_layout

\begin_layout Standard
In Nash equilibrium, it is clear that a link will not be utilized until
 all links with a lower travel time are in congestion.
 We demonstrate this with the following lemma.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:filluplower"

\end_inset

For 
\begin_inset Formula $\left(\flow,\Mode\right)\in NE\left(\Network,\qdemand\right),j\in Supp\left(\flow\right)$
\end_inset


\begin_inset Formula $\implies\Mode[i]=1\forall i\in\left\{ 1,\ldots,j-1\right\} $
\end_inset


\end_layout

\begin_layout Proof
Take 
\begin_inset Formula $i\in\left\{ 1,\ldots,j-1\right\} $
\end_inset

.
 Then 
\begin_inset Formula $\Mode[i]=0\implies\latency[i]=\parA[i]<a_{j}\le\latency[j]$
\end_inset

, which violates 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lemma:nash_eq"

\end_inset

.
 Therefore, 
\begin_inset Formula $m_{i}=1\forall i\in\left\{ 1,\ldots,j-1\right\} $
\end_inset

.
\end_layout

\begin_layout Proof
A corollary of 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:filluplower"

\end_inset

 says that there does not exist a Nash equilibrium where more than one link
 is in free flow.
\end_layout

\begin_layout Corollary
\begin_inset CommandInset label
LatexCommand label
name "cor:atmost1ff"

\end_inset

Let 
\begin_inset Formula $S=\left\{ \link:\flow[\link]\in Supp\left(\flow\right)\right\} $
\end_inset

.
 Then 
\begin_inset Formula $\left(\flow,\Mode\right)\in NE\left(\Network,\qdemand\right)\implies\sum_{\link\in S}\left(1-\Mode[\link]\right)<2$
\end_inset


\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:uniquemode"

\end_inset

For a given mode 
\begin_inset Formula $\Mode$
\end_inset

, and a demand 
\begin_inset Formula $\qdemand$
\end_inset

, 
\begin_inset Formula $\exists$
\end_inset

 at most 1 
\begin_inset Formula $\flow:\left(\flow,\Mode\right)\in NE\left(\Network,\qdemand\right)$
\end_inset


\end_layout

\begin_layout Proof
In the case where 
\begin_inset Formula $\left|Supp\left(\flow\right)\right|<2$
\end_inset

, the result is trivial, so we assume 
\begin_inset Formula $\left|Supp\left(\flow\right)\right|\ge2$
\end_inset

.
 Assume 
\begin_inset Formula $\exists\flow,\flow',\flow\neq\flow'$
\end_inset

 such that 
\begin_inset Formula $\left(\flow,\Mode\right),\left(\flow',\Mode\right)\in NE\left(\Network,\qdemand\right)$
\end_inset

.
 Then 
\begin_inset Formula $\exists i,j\in Supp\left(\flow\right):\flow[i]<\flow[i]',\flow[j]>\flow[j]'$
\end_inset

.
 From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:atmost1ff"

\end_inset

, we know that 
\begin_inset Formula $\Mode[i]+\Mode[j]>0$
\end_inset

, and without loss of generality, we assume that 
\begin_inset Formula $\Mode[i]=1$
\end_inset

.
 With this assumption, we have that 
\begin_inset Formula $\latency[i]>\latency[i]'$
\end_inset

.
 For the 
\begin_inset Formula $j$
\end_inset

 case, we need to consider 
\begin_inset Formula $\Mode[j]=\left\{ 0,1\right\} $
\end_inset

.
 If 
\begin_inset Formula $\Mode[j]=0$
\end_inset

, then 
\begin_inset Formula $\latency[j]=\latency[j]'$
\end_inset

.
 If 
\begin_inset Formula $\Mode[j]=1$
\end_inset

, then 
\begin_inset Formula $ $
\end_inset


\begin_inset Formula $\latency[j]'>\latency[j]$
\end_inset

.
 Therefore, 
\begin_inset Formula $\latency[j]'\ge\latency[j]$
\end_inset

.
 From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lemma:nash_eq"

\end_inset

, 
\begin_inset Formula $\latency[i]'=\latency[j]'$
\end_inset

, and
\end_layout

\begin_layout Proof
\begin_inset Formula 
\begin{equation}
\latency[i]>\latency[i]'=\latency[j]'\ge\latency[j]\label{eq:contradiction}
\end{equation}

\end_inset


\end_layout

\begin_layout Proof
, yet from 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lemma:nash_eq"

\end_inset

, we also have 
\begin_inset Formula $\latency[i]=\latency[j]$
\end_inset

, which a contradiction of 
\begin_inset CommandInset ref
LatexCommand formatted
reference "eq:contradiction"

\end_inset

.
\end_layout

\begin_layout Proof
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:filluplower"

\end_inset

 motivates the following definition.
\end_layout

\begin_layout Standard
What we have shown so far is that for a network 
\begin_inset Formula $\Network$
\end_inset

, there are at most 
\begin_inset Formula $\Network$
\end_inset

+1 Nash equilibria (
\begin_inset Formula $\Network$
\end_inset

combinations such that 
\begin_inset Formula $\sum_{\link=1}^{\Network}\left(1-\Mode[\link]\right)=1,$
\end_inset

 and 1 such that 
\begin_inset Formula $\sum_{\link=1}^{\Network}\left(1-\Mode[\link]\right)=0$
\end_inset

).
 We now show that all of these Nash equilibria may be analytically computed
 for a network 
\begin_inset Formula $\Network$
\end_inset

 and demand 
\begin_inset Formula $\qdemand$
\end_inset

.
 We introduce a definition first.
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:hat"

\end_inset


\begin_inset Formula $\hat{\flow}_{i,j}\coloneqq\left\{ \flow\in\left[0,\parC[i]\right]:\latency[i]\left(x,1\right)=\parA[j]\right\} \forall i\in\left\{ 1,\ldots,\Network\right\} ,j\in\left\{ i+1,\ldots,\Network\right\} $
\end_inset


\end_layout

\begin_layout Definition*
What 
\begin_inset Formula $\hat{\flow}_{i,j}$
\end_inset

represents is the flow on link 
\begin_inset Formula $i$
\end_inset

 while under congestion, such that the latency on link 
\begin_inset Formula $i$
\end_inset

 is equal to the free flow speed on link 
\begin_inset Formula $j$
\end_inset

, 
\begin_inset Formula $\parA[j]$
\end_inset

.
 In other words, 
\begin_inset Formula $\hat{\flow}_{i,j}$
\end_inset

 is the flow on link 
\begin_inset Formula $i$
\end_inset

 that enables link 
\begin_inset Formula $j$
\end_inset

 to begin to be utilized in a Nash equilibrium.
 Algebraically, we can solve for 
\begin_inset Formula $\hat{\flow}_{i,j}=\frac{\parB[i]\parC[i]}{\parC[i]\left(\parA[j]-\parA[i]\right)+\parB[i]}$
\end_inset

.
 Intuitively, we note that 
\begin_inset Formula $\hat{\flow}_{i,j}$
\end_inset

 approaches the maximum flow on link 
\begin_inset Formula $i$
\end_inset

, 
\begin_inset Formula $\parC[i]$
\end_inset

, as 
\begin_inset Formula $\parA[j]$
\end_inset

 approaches 
\begin_inset Formula $\parA[i]$
\end_inset

.
\end_layout

\begin_layout Definition
\begin_inset Formula $ $
\end_inset


\begin_inset CommandInset label
LatexCommand label
name "def:bar"

\end_inset


\begin_inset Formula $\bar{\Mode[i]}^{j}\coloneqq\begin{cases}
1 & i<j\\
0 & \text{otherwise}
\end{cases}$
\end_inset

.
 
\begin_inset Formula $\bar{\flow[i]}^{r,j}\coloneqq\begin{cases}
\hat{x}_{i,j} & i<j\\
r-\sum_{\link=1}^{j-1}\hat{\flow}_{\link,j} & i=j\\
0 & i>j
\end{cases}$
\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:xhat"

\end_inset


\begin_inset Formula $\bar{\flow}_{j}^{j,r}\in\left[0,\parC[j]\right]\implies\left(\bar{\flow}^{j,r},\bar{\Mode}^{j}\right)\in NE\left(\Network,\qdemand\right)$
\end_inset

.
\end_layout

\begin_layout Proof
From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "def:bar"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand formatted
reference "def:hat"

\end_inset

, we have that 
\begin_inset Formula $\latency[i]=\parA[j]\forall i<j,$
\end_inset


\begin_inset Formula $\bar{\flow}_{i}^{j,\qdemand}\in\left[0,\parC[i]\right]\forall i\in\left\{ 1,\ldots,\Network\right\} $
\end_inset

.
 By the assumption that 
\begin_inset Formula $\bar{\Mode}_{j}^{j}=0$
\end_inset

, we also have 
\begin_inset Formula $\latency[j]=\parA[j]$
\end_inset

.
 All links 
\begin_inset Formula $\link>j$
\end_inset

 are not in 
\begin_inset Formula $Supp\left(\bar{\flow}^{j,\qdemand}\right),$
\end_inset

 and have a latency 
\begin_inset Formula $>\parA[j]$
\end_inset

.
 Therefore, we have that 
\begin_inset Formula $\forall\link\in Supp\left(\bar{\flow}^{j,\qdemand}\right),\latency[\link]=\parA[j]<\parA[\link']\forall\link'\notin Supp\left(\bar{\flow}^{j,\qdemand}\right)$
\end_inset

 , which satisfies 
\begin_inset CommandInset ref
LatexCommand formatted
reference "def:ne"

\end_inset

.
\end_layout

\begin_layout Standard
What we have arrived at in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:xhat"

\end_inset

 is an analytical representation of the Nash equilibria, given one link
 is in free flow.
 Since we have already shown in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:atmost1ff"

\end_inset

 that the only Nash Equilibria that exist for a demand 
\begin_inset Formula $\qdemand,$
\end_inset

 are those with either one or zero links in free flow.
 What we now show is that a Nash equilibrium for a demand 
\begin_inset Formula $\qdemand$
\end_inset

 in which every link is in congestion (
\begin_inset Formula $\sum_{i\in Supp\left(\flow\right)}(1-\Mode[i])=0$
\end_inset

) is not the only Nash equilibrium for 
\begin_inset Formula $\qdemand$
\end_inset

.
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:demrange"

\end_inset


\begin_inset Formula $\demRange[j]\coloneqq\left\{ \qdemand:\left(\bar{\flow}^{j,\qdemand},\bar{\Mode}^{j}\right)\in NE\left(\Network,\qdemand\right)\right\} $
\end_inset


\end_layout

\begin_layout Definition
\begin_inset CommandInset ref
LatexCommand formatted
reference "def:demrange"

\end_inset

 represents the range of demands that can achieve Nash Equilibrium when
 link 
\begin_inset Formula $j$
\end_inset

 is in free flow.
 We now show some properties of these ranges.
\end_layout

\begin_layout Lemma
\begin_inset Formula $\forall i\in\left\{ 1,\ldots,\Network\right\} ,\min\left\{ \qdemand\in\demRange[i]\right\} <\max\left\{ r\in\demRange[i-1]\right\} $
\end_inset

.
\end_layout

\begin_layout Proof
The maximum value for 
\begin_inset Formula $\demRange[i-1]$
\end_inset

 occurs when link 
\begin_inset Formula $i-1$
\end_inset

 is at capacity (
\begin_inset Formula $\flow[i-1]=\parC[i-1]$
\end_inset

), and the minimum value for 
\begin_inset Formula $\demRange[i]$
\end_inset

 occurs when link 
\begin_inset Formula $i$
\end_inset

 is empty (
\begin_inset Formula $\left(\flow[i]=0\right)$
\end_inset

.
 Therefore we have 
\begin_inset Formula $\demRange[i-1]_{\max}=\sum_{j=1}^{i-2}\hat{\flow}_{j,i-1}+\parC[i-1]$
\end_inset

 and 
\begin_inset Formula $\demRange[i]_{\min}=\sum_{j=1}^{i-1}\hat{\flow}_{j,i}$
\end_inset

.
 For 
\begin_inset Formula $j<i-1,\hat{\flow}_{j,i}<\hat{\flow}_{j,i-1}$
\end_inset

.
 Therefore, 
\begin_inset Formula $\sum_{j=1}^{i-2}\hat{\flow}_{j,i}<\sum_{j=1}^{i-2}\hat{\flow}_{j,i-1}$
\end_inset

.
 As well, 
\begin_inset Formula $\hat{\flow}_{i-1,i}<\parC[i-1]$
\end_inset

.
 If we sum these two inequalities, we have the desired result.
\end_layout

\begin_layout Corollary
\begin_inset CommandInset label
LatexCommand label
name "cor:existsmaller"

\end_inset


\begin_inset Formula $\forall j\in\left\{ 2,\ldots,\Network\right\} ,\exists\qdemand\in\demRange[j]$
\end_inset

 such that 
\begin_inset Formula $\qdemand<\max\left\{ \bigcup_{i=1}^{j-1}\demRange[i]\right\} $
\end_inset


\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:conset"

\end_inset


\begin_inset Formula $\bigcup_{i=1}^{\Network}\demRange[i]$
\end_inset

 is a connected set.
\end_layout

\begin_layout Proof
Assume 
\begin_inset Formula $\exists\hat{\qdemand}\in\left[0,\max\left\{ \bigcup_{i=1}^{\Network}\demRange[i]\right\} \right]$
\end_inset

 , and 
\begin_inset Formula $\hat{\qdemand}\notin\bigcup_{i=1}^{\Network}\demRange[i]$
\end_inset

.
 Then as we sequentially take the union of all 
\begin_inset Formula $\demRange[i],i\in\left\{ 1,\ldots,\Network\right\} $
\end_inset

, then there must exist 
\begin_inset Formula $i^{*}>1$
\end_inset

 where adding the set 
\begin_inset Formula $\demRange[i^{*}]$
\end_inset

 in union makes the total set disjoint.
 Since all demands must be 
\begin_inset Formula $\ge0$
\end_inset

, 
\begin_inset Formula $ $
\end_inset


\begin_inset Formula $0\in\demRange[1]$
\end_inset

, and all 
\begin_inset Formula $\demRange[i]$
\end_inset

 are obviously connected, then this statement is equivalent to saying that
 
\begin_inset Formula $\min\left\{ \qdemand\in\demRange[i^{*}]\right\} >\max\left\{ \qdemand\in\bigcup_{i=1}^{i^{*}-1}\demRange[i]\right\} $
\end_inset

.
 But this is a direct contradiction of 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:existsmaller"

\end_inset

, and therefore no such 
\begin_inset Formula $\hat{\qdemand}$
\end_inset

 and conclude the proof.
\end_layout

\begin_layout Standard
Next we show that the set of all demands with an achievable Nash equilibrium
 with one link in free flow is the entire set of demands with an achievable
 Nash Equilibrium.
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:ldemrange"

\end_inset


\begin_inset Formula $\ldemRange[\latency]\coloneqq\left\{ \qdemand:\exists\flow\text{ s.t. }\left(\flow,\bar{\Mode}^{\Network+1}\right)\in NE\left(\Network,\qdemand\right),\latency[i]=\latency\forall i\in\left\{ 1,\ldots,\Network\right\} \right\} $
\end_inset


\end_layout

\begin_layout Remark
\begin_inset Formula $\bigcup_{\latency\in\Rea_{+}}\ldemRange[\latency]$
\end_inset

 is the set of all demands with a Nash equilibrium where all links are congested.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:atmost1rl"

\end_inset


\begin_inset Formula $\forall\latency\in\Rea_{+},\exists$
\end_inset

 at most 1 
\begin_inset Formula $\qdemand\in\ldemRange[\latency]$
\end_inset

.
\end_layout

\begin_layout Proof
This follows immediately from the definition of Nash Equilibrium (
\begin_inset CommandInset ref
LatexCommand formatted
reference "def:ne"

\end_inset

) and the fact that 
\begin_inset Formula $\latency[i]\left(\cdot,1\right)$
\end_inset

 is an injective function 
\begin_inset Formula $\forall i\in\left\{ 1,\ldots,\Network\right\} $
\end_inset

.
\end_layout

\begin_layout Standard
We will denote this unique 
\begin_inset Formula $\qdemand\in\ldemRange[\latency]$
\end_inset

 with 
\begin_inset Formula $\lDem[\latency]$
\end_inset

.
\end_layout

\begin_layout Definition
\begin_inset CommandInset label
LatexCommand label
name "def:lflow"

\end_inset


\begin_inset Formula $\lFlow[\latency]\coloneqq\left\{ \flow:\left(\flow,\bar{\Mode}^{\Network+1}\right)\in NE\left(\Network,\qdemand\right),\qdemand\in\ldemRange[\latency]\right\} $
\end_inset

.
 
\end_layout

\begin_layout Remark
\begin_inset CommandInset label
LatexCommand label
name "rem:uniquex"

\end_inset

From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:atmost1rl"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:uniquemode"

\end_inset

, that for each 
\begin_inset Formula $\ldemRange[\latency]$
\end_inset

, there exists at most 1 
\begin_inset Formula $\flow$
\end_inset

 such that 
\begin_inset Formula $\left(\flow,\bar{\Mode}^{\Network+1}\right)\in NE\left(\Network,\qdemand\right)\forall r\in\ldemRange[\latency]$
\end_inset

.
 In other words, a Nash equilibrium is unique for every equilibrium latency
 above 
\begin_inset Formula $\parA[\Network]$
\end_inset

.
 We denote this unique 
\begin_inset Formula $\flow$
\end_inset

 as the 
\begin_inset Formula $\lFlow[\latency]$
\end_inset

 in 
\begin_inset CommandInset ref
LatexCommand formatted
reference "def:lflow"

\end_inset

.
\end_layout

\begin_layout Lemma
Take 
\begin_inset Formula $\latency,\latency'$
\end_inset

 such that 
\begin_inset Formula $\ldemRange[\latency],\ldemRange[\latency']\neq\emptyset$
\end_inset

.
 Then 
\begin_inset Formula $\latency<\latency'\implies\lDem[\latency]>\lDem[\latency']$
\end_inset

.
\end_layout

\begin_layout Proof
From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "rem:uniquex"

\end_inset

, there is a unique flow, 
\begin_inset Formula $\lFlow[\latency]$
\end_inset

, such that 
\begin_inset Formula $ $
\end_inset


\begin_inset Formula $\left(\lFlow[\latency],\bar{\Mode}^{\Network+1}\right)\in NE\left(\Network,\lDem[\latency]\right)$
\end_inset

.
 The flow on each link, 
\begin_inset Formula $\link$
\end_inset

, is 
\begin_inset Formula $\lFlow[\latency][\link]=\frac{\parC[\link]\parB[\link]}{\parC[\link]\left(\latency-\parA[\link]\right)}$
\end_inset

, which is a decreasing function with 
\begin_inset Formula $\latency$
\end_inset

.
 The same analysis holds for 
\begin_inset Formula $\latency'$
\end_inset

.
 The assumption that 
\begin_inset Formula $\latency<\latency'$
\end_inset

 implies that 
\begin_inset Formula $\forall\link\in\left\{ 1,\ldots,\Network\right\} ,\lFlow[\latency][\link]>\lFlow[\latency'][\link]$
\end_inset

.
 Finally, we have 
\begin_inset Formula $\lDem[\latency]=\sum_{\link=1}^{\Network}\lFlow[\latency][\link]>\sum_{\link=1}^{\Network}\lFlow[\latency'][\link]=\lDem[\latency']$
\end_inset

, which concludes the proof.
\end_layout

\begin_layout Corollary
\begin_inset CommandInset label
LatexCommand label
name "cor:maxminl"

\end_inset


\begin_inset Formula $\max\left\{ \qdemand\in\bigcup_{\latency\in\Rea_{+}}\ldemRange[\latency]\right\} =\underset{\ldemRange[\latency]\neq\emptyset}{\arg\min}\left\{ \latency\right\} =\lDem[\parA]\in\demRange[\Network]$
\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
it should be a_
\backslash
Network, but it's not letting me put that.
 but we need to fix this!
\end_layout

\end_inset


\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:subset"

\end_inset


\begin_inset Formula $\bigcup_{l\in\Rea_{+}}\ldemRange[l]\subseteq\bigcup_{i=1}^{\Network}\demRange[i]$
\end_inset


\end_layout

\begin_layout Proof
Since 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:conset"

\end_inset

 tells that 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\bigcup_{i=1}^{\Network}\demRange[i]$
\end_inset

 is a connected set, then we only need to show 
\begin_inset Formula $\max\left\{ \qdemand\in\bigcup_{\latency\in\Rea_{+}}\ldemRange[\latency]\right\} \in\bigcup_{i=1}^{\Network}\demRange[i]$
\end_inset

 (the minimum value, 0, is obviously
\begin_inset Formula $\in\bigcup_{i=1}^{\Network}\demRange[i]$
\end_inset

 ).
 Using 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:maxminl"

\end_inset

 , 
\begin_inset Formula $\max\left\{ \qdemand\in\bigcup_{\latency\in\Rea_{+}}\ldemRange[\latency]\right\} \in\demRange[\Network]\subseteq\bigcup_{i=1}^{\Network}\demRange[i]$
\end_inset

.
 
\end_layout

\begin_layout Standard
From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:filluplower"

\end_inset

, it is clear that the entire set of demands that can achieve a Nash equilibrium
 is the union of Nash equilibrium demands with either one link in free flow
 or zero links in free flow, or 
\begin_inset Formula $\left\{ \qdemand:\exists\left(\flow,\Mode\right)\in NE\left(\Network,\qdemand\right)\right\} =\bigcup_{l\in\Rea_{+}}\ldemRange[l]\cup\bigcup_{i=1}^{\Network}\demRange[i]$
\end_inset

.
 Then, using 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:subset"

\end_inset

, we have the desired result:
\end_layout

\begin_layout Lemma

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset CommandInset label
LatexCommand label
name "lem:all1lff"

\end_inset


\begin_inset Formula $\left\{ \qdemand:\exists\left(\flow,\Mode\right)\in NE\left(\Network,\qdemand\right)\right\} =\bigcup_{i=1}^{\Network}\demRange[i]$
\end_inset


\end_layout

\begin_layout Standard
Now that there is a complete detailing of the range of demands that have
 a Nash equilibrium, and the flows that will achieve Nash equilibrium for
 a given demand, we next show which Nash equilibrium will have the minimum
 total latency for a given demand.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:conworseff"

\end_inset

For a given demand, 
\begin_inset Formula $\qdemand$
\end_inset

, if 
\begin_inset Formula $\exists\left(\lFlow,\bar{\Mode}^{\Network+1}\right)\in NE\left(\Network,\qdemand\right)$
\end_inset

, then 
\begin_inset Formula $\exists\flow',j$
\end_inset

 such that 
\begin_inset Formula $\left(\flow',\bar{\Mode}^{j}\right)\in NE\left(\Network,\qdemand\right)$
\end_inset

 and 
\begin_inset Formula $\Latency\left(\flow',\bar{\Mode}^{j}\right)\le\Latency\left(\flow,\bar{\Mode}^{\Network+1}\right)$
\end_inset

.
\end_layout

\begin_layout Proof
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:all1lff"

\end_inset

 gives us the existence of such a 
\begin_inset Formula $\flow'$
\end_inset

.
 Then let 
\begin_inset Formula $\latency,\latency'$
\end_inset

 be the latencies for 
\begin_inset Formula $\flow,\flow'$
\end_inset

 respectively.
 Since 
\begin_inset Formula $\flow$
\end_inset

 has all links in congestion, 
\begin_inset Formula $\latency\ge\parA[\Network]$
\end_inset

, and since 
\begin_inset Formula $\flow'$
\end_inset

 has at least 1 link in free flow, then 
\begin_inset Formula $\latency'\le\parA[\Network]$
\end_inset

 From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lemma:nash_eq"

\end_inset

, we have 
\begin_inset Formula $\Latency\left(\flow',\bar{\Mode}^{j}\right)=\qdemand\latency'\le\qdemand\parA[\Network]\le\qdemand\latency=\Latency\left(\flow,\bar{\Mode}^{\Network+1}\right)$
\end_inset

.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lem:smalleri"

\end_inset

For a given demand, 
\begin_inset Formula $\qdemand,$
\end_inset

and 
\begin_inset Formula $i<j$
\end_inset

 such that 
\begin_inset Formula $\left(\bar{\flow}^{\qdemand,i},\bar{\Mode}^{i}\right),\left(\bar{\flow}^{\qdemand,j},\bar{\Mode}^{j}\right)\in NE\left(\Network,\qdemand\right)$
\end_inset

, 
\begin_inset Formula $\Latency\left(\bar{\flow}^{\qdemand,i},\bar{\Mode}^{i}\right)<\Latency\left(\bar{\flow}^{\qdemand,j},\bar{\Mode}^{j}\right)$
\end_inset

.
\end_layout

\begin_layout Proof
The proof follows the same arguments as the proof for 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:conworseff"

\end_inset

.
\end_layout

\begin_layout Standard
To conclude this section, we show that the optimal Nash equilibrium (Nash
 equilibrium with the minimum total latency) for a given demand is the Nash
 equilibrium with fastest link in free flow.
\end_layout

\begin_layout Theorem
For a given demand, 
\begin_inset Formula $\qdemand,$
\end_inset

 
\begin_inset Formula $\underset{\left(\flow,\Mode\right)\in NE\left(\Network,\qdemand\right)}{\arg\min}\left\{ \Latency\left(\flow,\Mode\right)\right\} =\underset{\left(\bar{\flow}^{\qdemand,j},\bar{\Mode}^{j}\right)\in NE\left(\Network,\qdemand\right)}{\arg\min}\left\{ j\right\} $
\end_inset

.
\end_layout

\begin_layout Proof
From 
\begin_inset CommandInset ref
LatexCommand formatted
reference "cor:atmost1ff"

\end_inset

, the complete set of candidate Nash equilibria with demand, 
\begin_inset Formula $\qdemand,$
\end_inset

are the flows with one link in free flow (
\begin_inset Formula $\left\{ \bar{\flow}^{\qdemand,i}:i\in\left\{ 1,\ldots,\Network\right\} \right\} $
\end_inset

) and the flow with all links in congestion (
\begin_inset Formula $\flow'$
\end_inset

 such that 
\begin_inset Formula $\left(\flow',\bar{\Mode}^{\Network+1}\right)\in NE\left(\Network,\qdemand\right)$
\end_inset

).
 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:conworseff"

\end_inset

 says that 
\begin_inset Formula $\flow'$
\end_inset

 cannot be the unique minimum, and therefore a minimizing flow must exist
 in the set of flows with one link in free flow.
 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lem:smalleri"

\end_inset

 then says that the total latencies will decrease with decreasing free flow
 link index, and therefore the minimizing flow must be the Nash equilibrium
 flow that minimizes the index of the free flow link.
\end_layout

\begin_layout Subsection
Computational complexity of finding optimal Nash equilibria
\end_layout

\begin_layout Subsection
Nash equilibria for 2-parallel link networks
\end_layout

\begin_layout Standard
We consider a 
\begin_inset Formula $(2,r)$
\end_inset

 instance.
 We characterize the Nash equilibria of the network depending on the flow
 demand 
\begin_inset Formula $r$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Equal free-flow latencies
\end_layout

\begin_layout Subsubsection
Different free-flow latencies
\end_layout

\begin_layout Subsection
Nash equilibria for general parallel link networks
\end_layout

\begin_layout Standard
We consider a 
\begin_inset Formula $(N,r)$
\end_inset

 instance where 
\begin_inset Formula $N\geq2$
\end_inset

.
 We further assume that the free-flow latencies are different to avoid degenerat
e cases where the set of Nash equilibria is infinite 
\begin_inset Formula 
\[
\parA[1]\le\parA[2]\le\ldots\le\parA[\Network]
\]

\end_inset


\end_layout

\begin_layout Standard
Under this assumption, we show that there are a least 2 Nash equilibria,
 one purely congested, and one where there is a single link in free flow,
 and show that there are at most 
\begin_inset Formula $N$
\end_inset

 equilibria.
\end_layout

\begin_layout Subsection
Computing the best Nash Equilibrium
\end_layout

\begin_layout Section
Social Optimal equilibria
\end_layout

\begin_layout Standard
Consider an instance 
\begin_inset Formula $(N,r)$
\end_inset

 where the flow demand 
\begin_inset Formula $r$
\end_inset

 does not exceed the maximum capacity of the network 
\begin_inset Formula $r\leq\sum_{n}\flow[\link]^{\max}$
\end_inset

.
 The social optimal steady state equilibrium of the network is a solution
 to the following optimization problem 
\begin_inset Formula $(SO)$
\end_inset

 
\begin_inset Formula 
\begin{align*}
\min_{\mass,q} & \sum_{n}\Length[\link]\mass[\link]\\
\text{subject to } & \sum_{n}\flow[\link]=r\\
 & \flow[\link]=\min\{\speedFF[\link]\mass[\link],\speedCong[\link](\mass[\link]^{\max}-\mass[\link])\}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
This problem is non convex due to the second flow constraint 
\begin_inset Formula $\flow[\link]=f(\mass[\link])=\min\{\speedFF[\link]\mass[\link],\flow[\link]^{\max}-\speedCong[\link](\mass[\link]-\mass[\link]^{c})\}$
\end_inset

 which corresponds to the fundamental diagram of traffic.
 However, we show that the solutions to this optimization problem are necessaril
y in free-flow (
\begin_inset Formula $\flow[\link]=\speedFF[\link]\mass[\link]$
\end_inset

), thus the social optimum can be computed by solving an equivalent linear
 program.
\end_layout

\begin_layout Subsection
Social Optima are in free-flow
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "lemma:relaxedTTT_is_ff"

\end_inset

 
\begin_inset Formula $(\mass^{*},q^{*})$
\end_inset

 is optimal for 
\begin_inset Formula $(SO)$
\end_inset

 only if 
\begin_inset Formula $\flow[\link]^{*}=\speedFF[\link]\mass[\link]^{*}\forall n$
\end_inset

 
\end_layout

\begin_layout Proof
Let 
\begin_inset Formula $(\mass,q)$
\end_inset

 be a feasible point for 
\begin_inset Formula $(SO)$
\end_inset

, and suppose that 
\begin_inset Formula $\exists k$
\end_inset

 such that 
\begin_inset Formula $\flow[k]<v_{k}\mass[k]$
\end_inset

.
 We show that 
\begin_inset Formula $\exists$
\end_inset

 feasible point 
\begin_inset Formula $(\bar{\mass},\bar{q})$
\end_inset

 such that 
\begin_inset Formula $C(\bar{\mass})<C(\mass)$
\end_inset

.
 Let 
\begin_inset Formula 
\begin{align*}
\bar{q} & =q\\
\bar{\mass}_{k} & =\frac{\flow[k]}{v_{k}}\\
\bar{\mass[\link]} & =\mass[\link]\forall n\neq k
\end{align*}

\end_inset

 Then we have 
\begin_inset Formula $C(\bar{\mass})<C(\mass)$
\end_inset

 since 
\begin_inset Formula $\bar{\mass}_{k}=\frac{\flow[k]}{v_{k}}<\mass[k]$
\end_inset

 and 
\begin_inset Formula $\bar{\mass}[\link]=\mass[\link]\forall n\neq k$
\end_inset

.
\end_layout

\begin_layout Proof
And since 
\begin_inset Formula $\bar{q}_{k}=\bar{\mass}_{k}v_{k}$
\end_inset

, and 
\begin_inset Formula $\bar{q}_{k}=\flow[k]\leq w_{k}(\mass[k]^{\max}-\mass[k])\leq w_{k}(\mass[k]^{\max}-\bar{\mass}_{k})$
\end_inset

, then 
\begin_inset Formula 
\[
\bar{q}_{k}=\min\{\bar{\mass}_{k}v_{k},w_{k}(\mass[k]^{\max}-\bar{\mass}_{k})\}
\]

\end_inset

 and the constraint 
\begin_inset Formula $\bar{q}_{k}=f(\bar{\mass}_{k})$
\end_inset

 is satisfied.
 All other constraints trivially hold.
\end_layout

\begin_layout Proof
Therefore, 
\begin_inset Formula $(\bar{\mass},\bar{q})$
\end_inset

 is feasible for 
\begin_inset Formula $(SO)$
\end_inset

, and 
\begin_inset Formula $(\mass,q)$
\end_inset

 is non optimal.
 This shows that 
\begin_inset Formula $(\mass^{*},q^{*})$
\end_inset

 is optimal only if 
\begin_inset Formula $\flow[\link]^{*}=\speedFF[\link]\mass[\link]^{*}$
\end_inset

 which completes the proof.
\end_layout

\begin_layout Subsection
Simple characterization of social optima
\end_layout

\begin_layout Standard
As an immediate corollary of the previous Lemma, the social optimum can
 be computed by solving the following equivalent linear program 
\begin_inset Formula 
\begin{align*}
\min_{\mass,q} & \sum_{n}\Length[\link]\mass[\link]\\
\text{subject to } & \sum_{n}\flow[\link]=r\\
 & \flow[\link]\leq\speedFF[\link]\mass[\link]\\
 & \flow[\link]\leq\flow[\link]^{\max}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Then assuming the links are ordered by increasing free-flow latency 
\begin_inset Formula $\frac{\Length[1]}{v_{1}}\leq\dots\leq\frac{\Length[N]}{\speedFF[\Network]}$
\end_inset

 the social optimum is simply given by the assignment that saturates most
 efficient links first.
 Formally, if 
\begin_inset Formula $k_{0}=max\{k|r>\sum_{n=1}^{k}\flow[\link]^{\max}\}$
\end_inset

 then the social optimal assignment 
\begin_inset Formula $q^{*}$
\end_inset

 is given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align}
q^{*}=(\flow[1]^{\max},\dots,\flow[k_{0}]^{\max},\qdemand-\sum_{n=1}^{k_{0}}\flow[\link]^{\max},0,\dots,0)
\end{align}

\end_inset


\end_layout

\begin_layout Section
Stackelberg assignment
\end_layout

\begin_layout Standard
In order to reduce the inefficiency of the network, we assume that a fraction
 of the flow is centrally controlled, and we investigate possible strategies
 for improving the equilibria of the network.
\end_layout

\begin_layout Subsection
Valid Stackelberg strategy
\end_layout

\begin_layout Standard
We consider the following problem: given a network under constant flow demand
 
\begin_inset Formula $r$
\end_inset

, assume a coordinator (a central authority) has control over a fraction
 
\begin_inset Formula $\beta$
\end_inset

 of the flow: the corresponding users are compliant and willing to change
 their routes according to the instructions thy are given.
 The coordinator (who plays the role of the leader in the Stackelberg game)
 assigns the compliant flow 
\begin_inset Formula $\beta r$
\end_inset

 according to a Stackelberg strategy 
\begin_inset Formula $s$
\end_inset

 that is a feasible flow assignment for instance 
\begin_inset Formula $(N,\beta r)$
\end_inset

, i.e.
 
\begin_inset Formula $s$
\end_inset

 satisfies 
\begin_inset Formula 
\begin{align*}
\cFlow[\link]\leq\flow[\link]^{\max}\forall n &  & \sum_{n}\cFlow[\link]=\beta r
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
We assume that the non compliant users (who play the role of followers in
 the Stackelberg game), with corresponding flow 
\begin_inset Formula $(1-\beta)r$
\end_inset

, choose their routes selfishly after the Stackelberg assignment 
\begin_inset Formula $s$
\end_inset

 of compliant users is revealed.
 This induces an assignment 
\begin_inset Formula $(\ncFlow(\cFlow),m(\cFlow))$
\end_inset

 of the selfish flow at Nash equilibrium, and we assume that the assignment
 
\begin_inset Formula $s$
\end_inset

 of compliant users 
\emph on
is not affected
\emph default
 after introducing the non-compliant flow on the network.
 Note that the Nash assignment (t, m) depends on the Stackelberg strategy
 
\begin_inset Formula $s$
\end_inset

.
\end_layout

\begin_layout Standard
To characterize the final Nash equilibrium, which we refer to as the 
\emph on
induced equilibrium
\emph default
 by strategy 
\begin_inset Formula $s$
\end_inset

, we note that the flow on link 
\begin_inset Formula $n$
\end_inset

 is simply 
\begin_inset Formula $\cFlow[\link]+\ncFlow[\link](\cFlow)$
\end_inset

, and we have 
\begin_inset Formula $\forall n$
\end_inset

 
\begin_inset Formula 
\[
\ncFlow[\link](\cFlow)>0\Rightarrow\forall k,\latency[\link]\left(\cFlow[\link]+\ncFlow[\link](\cFlow),\Mode[\link](\cFlow)\right)\leq\latency[k]\left(\cFlow[k]+\ncFlow[k](\cFlow),\Mode[k](\cFlow)\right)
\]

\end_inset

 and by 
\begin_inset CommandInset ref
LatexCommand formatted
reference "lemma:nash_eq"

\end_inset

, all links that are used by selfish users have a common latency 
\begin_inset Formula $\latency[0]$
\end_inset

 in the induced equilibrium, and links that are not used by the selfish
 flow have latency greater than 
\begin_inset Formula $\latency[0]$
\end_inset

.
\end_layout

\begin_layout Standard
This can be summarized in the following definition of a valid Stackelberg
 strategy
\end_layout

\begin_layout Definition
A valid Stackelberg strategy is an assignment 
\begin_inset Formula $s$
\end_inset

 of the compliant flow 
\begin_inset Formula $\beta r$
\end_inset

 that is feasible for the instance 
\begin_inset Formula $(N,\beta r)$
\end_inset

, and which induces a Nash assignment 
\begin_inset Formula $(\ncFlow(\cFlow),m(\cFlow))$
\end_inset

 of the non-compliant flow that satisfies 
\begin_inset Formula 
\begin{align*}
\forall n\in Supp\left(\ncFlow(\cFlow)\right),\, & \latency[\link]\left(\cFlow[\link]+\ncFlow[\link](\cFlow),\Mode[\link](\cFlow)\right)=\latency[0]\\
\forall n\notin Supp\left(\ncFlow(\cFlow)\right),\, & \latency[\link]\left(\cFlow[\link],\Mode[\link](\cFlow)\right)\geq\latency[0]
\end{align*}

\end_inset


\end_layout

\begin_layout Subsection
Example of an invalid Stackelberg strategy
\end_layout

\begin_layout Standard
Note that a feasible flow assignment 
\begin_inset Formula $s$
\end_inset

 of compliant flow may fail to induce a Nash assignment 
\begin_inset Formula $t$
\end_inset

 that does not affect the initial compliant assignment 
\begin_inset Formula $s$
\end_inset

.
\end_layout

\begin_layout Standard
To see this, consider the following 2-link network where links have the
 same length 
\begin_inset Formula $\Length[1]=\Length[2]=1$
\end_inset

, link 1 has greater free-flow speed and capacity than link 
\begin_inset Formula $2$
\end_inset

 
\begin_inset Formula $v_{1}>v_{2}$
\end_inset

, 
\begin_inset Formula $\flow[1]^{\max}>\flow[2]^{\max}$
\end_inset

, and both links have same congestion wave speed 
\begin_inset Formula $w_{1}=w_{2}$
\end_inset

.
 Now assume that the network is subject to flow demand 
\begin_inset Formula $r=\flow[1]^{\max}+\epsilon$
\end_inset

 and most of the flow is compliant 
\begin_inset Formula $\beta r=\flow[1]^{\max}$
\end_inset

.
 Consider the following Stackelberg strategy: 
\begin_inset Formula $s=(\flow[1]^{\max},0)$
\end_inset

.
\end_layout

\begin_layout Standard
Assuming that the assignment of compliant users is not affected by introducing
 the non-compliant flow, we have for any assignment 
\begin_inset Formula $t$
\end_inset

 of non-compliant flow, 
\begin_inset Formula $t_{1}=0$
\end_inset

 and 
\begin_inset Formula $t_{2}>0$
\end_inset

.
 Therefore 
\begin_inset Formula $t$
\end_inset

 is not a Nash assignment since 
\begin_inset Formula $Supp(t)=\{2\}$
\end_inset

 and 
\begin_inset Formula $\latency[2](s_{2}+t_{2},\Mode[2])>\latency[1](s_{1},0)$
\end_inset

 (non compliant users are forced to use less efficient link 2).
\end_layout

\begin_layout Standard
In practice, strategy 
\begin_inset Formula $s$
\end_inset

 may induce a steady state equilibrium in which the compliant flow is some
 assignment 
\begin_inset Formula $s'\neq s$
\end_inset

: when non-compliant flow is introduced on the network, drivers will choose
 link 1 even though it is at maximum flow, since link 
\begin_inset Formula $1$
\end_inset

 is more faster 
\begin_inset Formula $\latency[1](\flow[1](^{\max},0)<\latency[2](0,0)$
\end_inset

.
 This will result in congesting the link 
\begin_inset Formula $\mass[1]>\mass[1]^{c}$
\end_inset

 and the flow on link 1 will 
\emph on
decrease
\emph default
 due to congestion.
 Now a fraction of the compliant flow will not be able to use link 1, and
 will be forced to use link 2.
 This corresponds to a capacity drop on link 1 when non-compliant flow is
 introduced.
 Therefore, in the final equilibrium, the compliant flow will be 
\begin_inset Formula $s'=(s'_{1},s'_{2})$
\end_inset

 such that 
\begin_inset Formula $\latency[1](s'_{1},1)=\latency[2](s_{2}'+\epsilon,0)$
\end_inset

, link 1 will be congested in the final equilibrium, and link 2 in free
 flow.
 Note that such a strategy 
\begin_inset Formula $s$
\end_inset

 is not considered as a valid Stackelberg assignment in our definition,
 we only consider strategies that induce assignment 
\begin_inset Formula $s+t$
\end_inset

 where 
\begin_inset Formula $t$
\end_inset

 is a Nash assignment as described above.
\end_layout

\begin_layout Section
Optimal Stackelberg strategies
\end_layout

\begin_layout Standard
In this section we solve for optimal Stackelberg assignments, i.e.
 Stackelberg assignments that induce Nash equilibria of optimal cost.
 This is described by the following optimization problem 
\begin_inset Formula 
\begin{align*}
\min_{s}C\left(s+\ncFlow(\cFlow),m(\cFlow)\right)
\end{align*}

\end_inset

 where 
\begin_inset Formula $s$
\end_inset

 is a 
\emph on
valid
\emph default
 Stackelberg assignment and 
\begin_inset Formula $(\ncFlow(\cFlow),m(\cFlow))$
\end_inset

 is the non-compliant flow assignment at the equilibrium induced by 
\begin_inset Formula $s$
\end_inset

.
\end_layout

\begin_layout Standard
We define an optimal Stackelberg strategy 
\begin_inset Formula $s^{*}$
\end_inset

 to be a solution to the optimization problem 
\begin_inset Formula 
\begin{align*}
s^{*}=\arg\min_{s}C\left(s+\ncFlow(\cFlow),m(\cFlow)\right)
\end{align*}

\end_inset

 and a Stackelberg equilibrium to be the Nash assignment 
\begin_inset Formula $(\ncFlow(s^{*}),m(s^{*}))$
\end_inset

 induced by optimal strategy 
\begin_inset Formula $s*$
\end_inset

.
\end_layout

\begin_layout Standard
We first study the 2 link case and solve analytically for the optimal Stackelber
g strategy, then extend the result to the general case.
\end_layout

\begin_layout Subsection
The 2-link case
\end_layout

\begin_layout Subsection
General case
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "jabtex"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
